<%args>
	$tourn
	$tourn_settings
	$session
	$category_id
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $top_margin =  $tourn_settings->{"top_margin"};
	my $left_margin = $tourn_settings->{"left_margin"};
	my $col_space = $tourn_settings->{"col_space"};
	my $row_space = $tourn_settings->{"row_space"};

	$tourn->setting("top_margin", 12) unless $top_margin;
	$tourn->setting("left_margin", 7) unless $left_margin;
	$tourn->setting("col_space", 2) unless $col_space;
	$tourn->setting("row_space", 0) unless $row_space;

	$top_margin = "12" unless $top_margin;
	$left_margin = "7" unless $left_margin;
	$row_space = "2" unless $row_space;
	$col_space = "0" unless $col_space;

	$top_margin .= "mm";
	$left_margin .= "mm";
	$row_space .= "mm";
	$col_space .= "mm";

	my $category = Tab::Category->retrieve($category_id);
	my $name = $category->name;
	my $ncfl = $tourn_settings->{"ncfl"};
	$name =~ s/[^\w.]//g;

	my $filename = "JudgeLabels-$name-".$session->id;
	$filename =~ s/\s+//g;
    my $filepath = $Tab::file_root."/tmp/";
	`cd $Tab::file_root/tmp; rm -f $filename.pdf $filename.tex $filename.log $filename.dvi $filename.aux`;

	open (TEXOUT, ">>$filepath"."$filename.tex");

	print TEXOUT <<"EOF";
\\documentclass[letterpaper,10pt]{article}
\\usepackage[newdimens]{labels}
\\usepackage{helvet}
\\usepackage{setspace}
\\usepackage[breakall]{truncate}

\\LabelCols=3       % Number of columns of labels per page
\\LabelRows=10      % Number of rows of labels per page

\\LeftPageMargin=$left_margin	% These four parameters give the
\\TopPageMargin=$top_margin  	% the outer labels are the specified
\\RightPageMargin=7mm       	% page gutter sizes. The outer edges of
\\BottomPageMargin=15mm     	% distances from the edge of the paper.

\\InterLabelColumn=$col_space  	% Gap between columns of labels
\\InterLabelRow=$row_space     	% Gap between rows of labels

\\LeftLabelBorder=5mm   % These four parameters give the extra
\\RightLabelBorder=5mm  % space used around the text on each
\\TopLabelBorder=5mm    % actual label.

\\renewcommand{\\baselinestretch}{1.2}
\\renewcommand{\\familydefault}{\\sfdefault}
\\begin{document}
\\begin{labels}
EOF

	my %jpool_names;
	my %jpool_numbers;

	foreach my $judge (
		sort {$a->last cmp $b->last}
		$category->judges(active => 1)
	) {

		my @jpools = $judge->jpools;
		next unless @jpools;

		print TEXOUT "\\truncate{2.4in}{ ";
		print TEXOUT Tab::texify($judge->last.", ".$judge->first);
		print TEXOUT "} \n";
		print TEXOUT "\\truncate{2.4in}{ ";
		print TEXOUT Tab::texify($judge->school->short_name);
		print TEXOUT "} \n";
		print TEXOUT "\\truncate{2.4in}{ ";

		if ($judge->school->chapter) {
			print TEXOUT Tab::texify($judge->school->chapter->state);
		}
		print TEXOUT " ";

		if ($judge->school->district) {
			print TEXOUT Tab::texify($judge->school->district->name);
		}

		print TEXOUT "} \n";

		foreach my $pool (sort {$a->name cmp $b->name} $judge->jpools) {

			next if $jpool_names{$pool->id};

			my $letters = $pool->name;
			$letters =~ s/The //g;
			my $numbers = $pool->name;


			my $semi;
			my $final;
			my $parli;

			$semi++ if index($letters, "Semi") != -1;
			$final++ if index($letters, "Final") != -1;
			$parli++ if index($letters, "Parli") != -1;

			$numbers =~ s/[^0-9]//g;
			$letters =~ s/[^a-zA-Z]//g;

			my $name = uc(substr($letters, 0, 1));

			$name .= " Semi" if $semi;
			$name .= " P " if $parli;

			$jpool_names{$pool->id} = $name." ".$numbers;

			$numbers += 4 if $semi;
			$numbers = 7 if $final;

			$jpool_numbers{$pool->id} = $numbers;


		}

		my $notfirst;

		@jpools = sort {$jpool_names{$a} cmp $jpool_names{$b}} @jpools;
		@jpools = sort {$jpool_numbers{$a} <=> $jpool_numbers{$b}} @jpools;

		my %done = ();

		foreach my $pool (@jpools) {
			next if $done{$pool->id}++;
			next unless $jpool_names{$pool->id};
			print TEXOUT " -- " if $notfirst++;
			print TEXOUT $jpool_names{$pool->id};
		}

		print TEXOUT "  \n\n";

	} # end of foreach label

	print TEXOUT "\n";

	print TEXOUT "\\end{labels}\n";
	print TEXOUT "\\end{document}\n";

	close TEXOUT;

	`cd $filepath; $Tab::pdflatex_path $filename.tex`;

	`cd $Tab::file_root/tmp; rm -f $filename.tex $filename.log $filename.dvi $filename.aux`
		if $Tab::hostname eq "www.tabroom.com";

	$m->redirect("/tmp/$filename.pdf");


</%init>
