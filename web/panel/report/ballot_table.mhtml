<%args>
	$tourn
	$session
	$person_settings
	$perms       => undef
	$timeslot_id => undef
	$site_id     => undef
	$sort_by     => "jcode"
	$event_id    => undef
</%args>
<%init>

	my $timeslot = Tab::Timeslot->retrieve($timeslot_id);

	my $fontsize = $person_settings->{"fontsize"};
	$fontsize = "small" if ($fontsize eq "default" || (not defined $fontsize));

	unless ($timeslot) {
		$m->print("No timeslot sent");
		$m->abort;
	}

	my $query_limit;

	unless (
		$perms->{'tourn'}{$tourn} eq "owner"
		|| $perms->{'tourn'}{$tourn} eq "tabber"
	) {

		if ($perms->{event}) {
			my $ids = join(",", keys %{$perms->{event}});
			$query_limit = " and event.id in ($ids) ";
		}

		if ($perms->{category}) {
			my $ids = join(",", keys %{$perms->{category}});
			$query_limit = " and category.id in ($ids) ";
		}

		unless ($query_limit) {
			$m->comp("/funclib/abort.mas", message => "You do not have sufficient access to any events or categories");
		}
	}

	if ($site_id) {
		$query_limit .= "and room.site = ".int($site_id);
	}

	my $dbh = Tab::DBI->db_Main();

	my $order_by;

	if ($ARGS{"sort_by"} eq "room") {
		$order_by = " order by panel.flight, room.name, judge.code, judge.last ";
	} elsif ($ARGS{"sort_by"} eq "event") {
		$order_by = " order by panel.flight, event.abbr, judge.code, judge.last ";
	} else {
		$order_by = " order by panel.flight, judge.code, judge.last ";
	}

	my $sth = $dbh->prepare("

		select
			judge.code, judge.first, judge.last, judge.middle,
			person.phone,
			school.code school_code, school.name school_name,
			event.abbr,
			panel.letter, panel.flight,
			room.name room,
			ballot.audit

		from (judge, ballot, panel, round, room, event, category)

			left join person on person.id = judge.person
			left join school on school.id = judge.school

		where round.timeslot = ?
			and round.event = event.id
			and event.category = category.id
			and round.id = panel.round
			and panel.id = ballot.panel
			and ballot.judge = judge.id
			and panel.room = room.id
			$query_limit
		group by judge.id, panel.flight
		$order_by
	");

	$sth->execute($timeslot->id);
	my $results = $sth->fetchall_hash();

	my $name = $timeslot->name;
	$name =~ s/[\W_]//g;

    my $filename = "BallotTable-".$name."-".$session->id;
	$filename =~ s/\s+//g;
    my $filepath = $Tab::file_root."/tmp/";

	$m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		head     => 1
	);

	open (TEXOUT, ">>$filepath"."$filename.tex");

	print TEXOUT "\\Large \\hfill \\textbf{ Ballot Check In (". Tab::texify($timeslot->name);

	if ($site_id) {
		my $site = Tab::Site->retrieve($site_id);
		print TEXOUT " at ".Tab::texify($site->name);
	}

	print TEXOUT ") } \\\\ \n";

	print TEXOUT "\\medskip\n";
	print TEXOUT "\\newline\n";
	print TEXOUT "\\".$fontsize."\n";

	my $tabular = "\\begin{tabular}{p{1.75in}p{1.25in}p{.5in}p{.3in}p{1.5in}p{.75in}}\n";

	print TEXOUT $tabular;
	print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n";

	print TEXOUT " Judge & School & Event & Sec & Room & Returned \\\\ \n \\hline \n";
	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\newline\n";

	my $switch;
	my $flight = 1;

	JUDGE:
	foreach my $judge (@{$results}) {

		if ($judge->{flight} != $flight) {
			$flight = $judge->{flight};
			print TEXOUT "\\smallskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "{\\Large Flight ".$judge->{flight}." } \n";
			print TEXOUT "\\newline\n";
		}

		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n" if ($switch++ % 2);
		print TEXOUT "\\".$fontsize."\n";
		print TEXOUT Tab::texify($judge->{code})." ";
		print TEXOUT Tab::texify($judge->{last})." ";
		print TEXOUT Tab::texify($judge->{first})." ";
		print TEXOUT Tab::texify($judge->{middle})." & ";

		if ($judge->{school_name}) {
			print TEXOUT "\\truncate{1.22in}{\n";
			print TEXOUT Tab::texify($judge->{school_code})." ";
			print TEXOUT Tab::texify($judge->{school_name})." ";
			print TEXOUT " } \n";
		} else {
			print TEXOUT "Hired";
		}

		print TEXOUT " & ";
		print TEXOUT Tab::texify($judge->{abbr})." & ". $judge->{letter};
		print TEXOUT " & ";
		print TEXOUT Tab::texify($judge->{room});
		print TEXOUT " & ";

		if ($judge->{audit}) {
			print TEXOUT "\\hfill IN \\hfill \\strut";
		}
		print TEXOUT " \\\\ \n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";

	}

	close TEXOUT;

	$m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		tail     => 1
	);

</%init>
