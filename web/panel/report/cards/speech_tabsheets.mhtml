<%args>
	$event_id
	$tourn
	$session
</%args>
<%init>
	use POSIX;

	my $tourn_id = $tourn->id;
	my @events;

	if ($event_id eq "all") {
		@events = $tourn->events(
			type => "speech"
		);
	} else {
		push (@events, Tab::Event->retrieve($event_id));
	}

	@events = sort {$a->name cmp $b->name} @events;

	#Set up the filename and the needed trace files

	my $name = $tourn->name
		if $event_id eq "all";

	$name = $events[0]->name
		if @events && not defined $name;

	$name =~ s/[\W_]//g;

	my $filename = "TabSheet-$name-".$session->id;
	my $filepath = $Tab::file_root."tmp/".$filename;
	`rm -f $filepath.*`;

	$m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		head     => 1,
		wide     => 1
	);

	open (TEXOUT, ">>$filepath.tex");

	print TEXOUT "\\footnotesize \n";
	print TEXOUT '\setlength{\tabcolsep}{.32em}';

	my %num_judges;

	foreach my $event (@events) {

		my @prelims =
			sort { $a->name <=> $b->name }
			$event->rounds( type => "prelim");

		my @elims =
			sort { $a->name <=> $b->name }
			$event->rounds( type => "elim");

		my @finals =
			sort { $a->name <=> $b->name }
			$event->rounds( type => "final" );

		my @runoffs =
			sort { $a->name <=> $b->name }
			$event->rounds( type => "runoff" );


		my $tabular = "\\begin{tabular}{|p{1.25in}||";
		my $header = " Entry ";

		my $ticks = 1;
		my $last_prelim;

		foreach my $round (@prelims) {

			$num_judges{$round} = $round->setting("num_judges");
			$num_judges{$round} = 1 unless $num_judges;

			foreach (1 .. $num_judges{$round}) {
				$ticks++;
			}

			$last_prelim = $round;
		}

		$ticks++ if @prelims && $event->type eq "congress";
		$ticks++ if @prelims;

		foreach my $round (@elims, @finals, @runoffs) {
			$ticks++;
			foreach (1 .. $round_"num_judges"}) {
				$ticks++;
			}
		}

		my $length = 4.25 / $ticks;

		foreach my $round (@prelims) {
			my $ticker;
			foreach (1 .. $num_judges{$round}) {
				$ticker++;
				$tabular .= "p{".$length."in}|\n";
				$header  .= " & R".$round->name." J".$ticker;
			}
		}

		if (@prelims) {
			$tabular .= "p{".$length."in}|\n" if $event->type eq "congress";
			$tabular .= "p{".$length."in}||\n";
			$header  .= " & Parl " if $event->type eq "congress";
			$header  .= " & Tot";
		}

		foreach my $round (@elims, @finals, @runoffs) {
			my $ticker;
			foreach (1 .. $num_judges{$round}) {
				$ticker++;
				$tabular .= "p{".$length."in}|\n";
				$header  .= " & ".Tab::texify(substr($round->realname, 0, 1))." J".$ticker;
			}

			if ($event->type eq "congress") {
				$tabular .= "p{".$length."in}|\n";
				$header  .= " & Parl ";
			}

			$tabular .= "p{".$length."in}||\n";
			$header  .= " & Tot ";

		}

		$tabular .= "p{".$length."in}|\n";
		$header  .= " &  \\\\ ";
		$tabular .= "}\n";

		my @entries = Tab::Entry->search(
			event     => $event->id,
			active    => 1,
			{ order_by => "code" }
		);

		print TEXOUT "\\Large \\textsb{ ". $event->name ." \\hfill ". $tourn->name."}";

		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\footnotesize \n";

		print TEXOUT $tabular;
		print TEXOUT "\\hline\n";
		print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[2.4pt\]\[2.4pt\]\n";
		print TEXOUT $header;
		print TEXOUT "\\hline\n";

		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";

		my $entry_count = 1;

		my @ballots = $m->comp(
			'/funclib/event_ballots.mas',
			event          => $event,
			entry_required => 1
		);

		my @scores = $m->comp(
			'/funclib/event_scores.mas',
			event => $event
		);

		my %truncate_round;

		foreach my $round (@prelims, @elims, @finals, @runoffs) {

			next unless $round->protocol;
			my $protocol =  $round->protocol;

			$truncate_round{$round->id} = $protocol->setting("truncate_ranks_to");

			if ($protocol->setting("truncate_to_smallest")) {

				foreach my $panel ($round->panels) {

					my $size =
						scalar $m->comp(
							"/funclib/panel_entries.mas",
							panel => $panel
						);

					$truncate_round{$round->id} = $size
						unless $truncate_round{$round->id};

					$truncate_round{$round->id} = $size
						if $truncate_round{$round->id} > $size;
				}

			}

		}

		my %ballots_by_entry = ();
		my %scores_by_ballot = ();

		foreach my $ballot (@ballots) {
			push @{$ballots_by_entry{$ballot->entry->id}}, $ballot
				if $ballot->entry;
		}

		foreach my $score (@scores) {
			push @{$scores_by_ballot{$score->ballot->id}}, $score;
		}

		foreach my $entry (@entries) {

			if ($entry_count == 23) {

				print TEXOUT "\\newpage\n";
				print TEXOUT "\\Large{ \\bf ". $event->name ." \\hfill ". $tourn->name."}";
				print TEXOUT "\\medskip\n";
				print TEXOUT "\\newline\n";

				print TEXOUT "\\footnotesize \n";

				print TEXOUT $tabular;
				print TEXOUT "\\hline\n";
				print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[2.4pt\]\[2.4pt\]\n";

				print TEXOUT $header;
				print TEXOUT "\\hline\n";
				print TEXOUT "\\end{tabular}\n";
				print TEXOUT "\\newline\n";

				$entry_count = 1;

			}

			print TEXOUT $tabular;

			print TEXOUT "\\hline\n";

			my @all_ballots = @{$ballots_by_entry{$entry->id}}
				if $ballots_by_entry{$entry->id};

			my %round_ballots;

			foreach my $ballot (@all_ballots) {
				push @{$round_ballots{$ballot->roundid}}, $ballot;
			}

			print TEXOUT "\\multirow{2}{*}{ \\parbox{1.20in}{\\footnotesize ";
			print TEXOUT Tab::texify($entry->code);
			if (length($entry->code) < 6) {
				print TEXOUT " ".Tab::texify($entry->name);
			}
			print TEXOUT "\\newline ";
			print TEXOUT Tab::texify($entry->school->short_name);
			print TEXOUT " } } & \n";

			my $score_total;
			my $last;

			foreach my $round (@prelims, @elims, @finals, @runoffs) {

				if (
					($round->type eq "elim" || $round->type eq "final")
					&& ($last ne "elim" || $last ne "final")
				) {
					print TEXOUT "\\centering \\textsb{ $score_total } & \n ";
					undef $score_total;
				}

				my @ballots = @{$round_ballots{$round->id}}
					if $round_ballots{$round->id};

				foreach (1 .. $num_judges{$round}) {

					my $ballot = shift @ballots if @ballots;

					undef $ballot if (
						$ballot
						&& $event->type eq "congress"
						&& $round->type eq "prelim"
						&& ($round->id != $last_prelim)
						&& $ballot->chair == 1
					);

					if ($ballot) {

						foreach my $score (@{$scores_by_ballot{$ballot->id}}) {

							next unless $score->tag eq "rank";

							my $rank = $score->value;

							$rank++ if $ballot->tv;

							$rank = $truncate_round{$round->id}
								if $truncate_round{$round->id}
								&& $rank > $truncate_round{$round->id};

							print TEXOUT "\\centering ";
							print TEXOUT Tab::texify($rank);

							$score_total += $rank;
						}

						print TEXOUT "{\\footnotesize TV}" if $ballot->tv;
						print TEXOUT "{\\footnotesize NS}" if $ballot->forfeit;

					}

					print TEXOUT " & \n ";

				}

				my $last = $round->type;

				if ($last eq "final") {
					print TEXOUT "\\centering \\textsb{ $score_total } & ";
				}

			}

			print TEXOUT " \\\\ \n";

			undef $score_total;

			my %did;

			print TEXOUT " & ";

			foreach my $round (@prelims, @elims, @finals, @runoffs) {

				if ($round->type eq "elim" || $round->type eq "final") {
					print TEXOUT " \\centering \\textsb{ $score_total } & \n ";
					undef $score_total;
				}

				my @ballots = @{$round_ballots{$round->id}}
					if $round_ballots{$round->id};

				foreach (1 .. $num_judges{$round}) {

					my $ballot = shift @ballots if @ballots;

					undef $ballot if (
						$ballot
						&& $event->type eq "congress"
						&& $round->type eq "prelim"
						&& ($round->id != $last_prelim)
						&& $ballot->chair == 1
					);

					if ($ballot) {

						$did{$round->type}++;

						foreach my $score (@{$scores_by_ballot{$ballot->id}}) {
							next unless $score->tag eq "point";

							print TEXOUT "\\centering ";
							print TEXOUT $score->value;
							print TEXOUT "\n";
							$score_total += $score->value;
						}
					}

					print TEXOUT " & \n ";
				}

				my $last = $round->type;

				if ($last eq "final") {
					print TEXOUT "\\centering \\textsb{$score_total} & ";
				}

			}


			print TEXOUT " \\\\ \n";
			print TEXOUT "\\hline \n";
			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\newline\n";
			$entry_count++;
		}

	} # end of foreach event

	$m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		tail     => 1
	);

</%init>
