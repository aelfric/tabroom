<%args>
	$session
	$category_id
	$tourn
	$codes => undef
</%args>
<%init>

	my $category = Tab::Category->retrieve($category_id);

	my $name = $category->name;
	$name =~ s/[\W_]//g;

	my $filename = "DebateJudgeCards-$name-".$session->id;
	my $filepath = $Tab::file_root."tmp/".$filename;

	$m->comp("/funclib/printout.mas",
		 tourn    => $tourn,
		 filename => $filename,
		 head     => 1
		);

	open (TEXOUT, ">>$filepath.tex");

	my @timeslots = $m->comp('/funclib/category_timeslots.mas',
		 category => $category
		);

	print TEXOUT "\\renewcommand{\\arraystretch}{1.6}\n";
	print TEXOUT "\\setlength{\\tabcolsep}{6.2pt}";
	print TEXOUT "\\setlength{\\doublerulesep}{0pt}";

	print TEXOUT "\\noindent\n";

	Tab::Entry->columns(TEMP => qw/side flight roundname roundlabel ballotid flighted/);
	Tab::Score->columns(TEMP => qw/winner ballotid/);

	foreach my $judge (sort {$a->last cmp $b->last} $category->judges) {

		next unless $judge->active;

		my $qualstring = $m->comp("/funclib/judge_rating.mas",
			judge => $judge,
			print => "yes"
		);

		print TEXOUT "\\renewcommand{\\baselinestretch}{1.0}\n";
		print TEXOUT "\\begin{minipage}{7in}";
		print TEXOUT "\\Large\n";

		my $school_string = $judge->school->code." ".$judge->school->short_name if $judge->school;
		$school_string = "HIRE" unless $judge->school;

		print TEXOUT "{\\bf ".Tab::texify($category->name)."} \\hfill ";
		print TEXOUT "{\\bf ".&Tab::texify($judge->first." ".$judge->last);
		print TEXOUT " (".$qualstring.") }\\hfill {\\bf ".$school_string." } \n";

		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\raggedright\n";
		print TEXOUT "\\normalsize\n";

		print TEXOUT "\\begin{tabular}{|p{2.2in}|p{2.2in}|p{2.2in}|} \n";

		print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.3pt\]\[5.3pt\]\n";

		print TEXOUT "\\hline \\hline \n";
		print TEXOUT "Affs \\hfill {\\scriptsize (Bold = Winner) } ";
		print TEXOUT "& Negs \\hfill {\\scriptsize (Bold = Winner) } ";
		print TEXOUT "& \\textsb{Strikes \\\& Conflicts} \\\\ \n";

		my @aff_rounds;
		my @neg_rounds;
		my %round_debater;

		my $dbh = Tab::DBI->db_Main();

		my $sth = $dbh->prepare("
			select entry.code, entry.name, entry.id,
				ballot.side as side, panel.flight as flight,
				round.name as roundname, round.label as roundlabel,
				ballot.id as ballotid, round.flighted as flighted
			from entry, ballot, panel, round
			where ballot.judge = ?
			and ballot.bye     = 0
			and ballot.side    = ?
			and ballot.panel   = panel.id
			and panel.bye      = 0
			and entry.id       = ballot.entry
			and	panel.round    = round.id
			order by round.name, panel.flight
		");

		$sth->execute($judge->id, 1);

	    while( my ($aff_code, $aff_name, $aff_id,
					$aff_side, $aff_flight, $round_name, $round_label,
					$ballot_id, $round_flighted ) = $sth->fetchrow_array() ) {

			my $roundstring = substr($round_label,0,5) if $round_label;
			$roundstring = "Rnd ".$round_name unless $round_label;
			$roundstring .= " F".$aff_flight if $round_flighted > 1;
			push @aff_rounds, $roundstring;

			$round_debater{$roundstring}{"affcode"} = $aff_code;
			$round_debater{$roundstring}{"affname"} = $aff_name;
			$round_debater{$roundstring}{"affid"} = $aff_id;
			$round_debater{$roundstring}{"affballotid"} = $ballot_id;
		}

		$sth->execute($judge->id, 2);

	    while( my ($neg_code, $neg_name, $neg_id,
					$neg_side, $neg_flight, $round_name, $round_label,
					$ballot_id, $round_flighted ) = $sth->fetchrow_array() ) {

			my $roundstring = substr($round_label,0,5) if $round_label;
			$roundstring = "Rnd ".$round_name unless $round_label;
			$roundstring .= " F".$neg_flight if $round_flighted > 1;
			push @neg_rounds, $roundstring;

			$round_debater{$roundstring}{"negcode"} = $neg_code;
			$round_debater{$roundstring}{"negname"} = $neg_name;
			$round_debater{$roundstring}{"negid"} = $neg_id;
			$round_debater{$roundstring}{"negballotid"} = $ballot_id;
		}

		Tab::Score->set_sql(judge_winners => "
			select distinct score.*, entry.id as winner, score.ballot as ballotid
			from ballot, score, entry, panel
			where ballot.judge = ?
			and ballot.bye     = 0
			and ballot.panel   = panel.id
			and panel.bye      = 0
			and ballot.entry   = entry.id
			and ballot.id      = score.ballot
			and score.tag      = 'winloss'
			and score.value    = 1
		");

		my @winners = Tab::Score->search_judge_winners($judge->id);

		my %entry_winner = map {$_->winner."-".$_->ballotid => 1} @winners;

		print TEXOUT "\\parbox[t][2.15in][t]{2.2in}{ \n";
		print TEXOUT "\\onehalfspacing\n";

		my %seen = ();
		@aff_rounds = grep { ! $seen{"aff-".$_} ++ } @aff_rounds;
		@neg_rounds = grep { ! $seen{"neg-".$_} ++ } @neg_rounds;

		foreach my $roundstring (@aff_rounds) {

			my $id = $round_debater{$roundstring}{"affid"};
			next unless $id;
			my $code = $round_debater{$roundstring}{"affcode"};
			my $name = $round_debater{$roundstring}{"affname"};
			my $ballotid = $round_debater{$roundstring}{"affballotid"};

			print TEXOUT "\\small ";
			print TEXOUT "{";
			print TEXOUT "\\bf " if $entry_winner{$id."-".$ballotid};
			print TEXOUT "\\makebox[1.6in][l]{";
			print TEXOUT Tab::texify($code);
			print TEXOUT " } }";
			print TEXOUT "{\\footnotesize ".Tab::texify($roundstring)." } ";
			print TEXOUT "\n\n";
		}

		print TEXOUT "}";
		print TEXOUT " & ";
		print TEXOUT "\\parbox[t][2.15in][t]{2.2in}{ \n";
		print TEXOUT "\\onehalfspacing\n";

		foreach my $roundstring (@neg_rounds) {

			my $id = $round_debater{$roundstring}{"negid"};
			next unless $id;
			my $code = $round_debater{$roundstring}{"negcode"};
			my $name = $round_debater{$roundstring}{"negname"};
			my $ballotid = $round_debater{$roundstring}{"negballotid"};

			print TEXOUT "\\small ";
			print TEXOUT "{";
			print TEXOUT "\\bf " if $entry_winner{$id."-".$ballotid};
			print TEXOUT "\\makebox[1.6in][l]{";
			print TEXOUT Tab::texify($code);
			print TEXOUT " } }";
			print TEXOUT "{\\footnotesize ".Tab::texify($roundstring)." } ";
			print TEXOUT "\n\n";
		}

		print TEXOUT "}";
		print TEXOUT " & ";
		print TEXOUT "\\parbox[t][2.15in][t]{2.2in}{ \n";
		print TEXOUT "\\onehalfspacing\n";

		foreach my $strike (sort {$a->type cmp $b->type} $judge->strikes) {
			print TEXOUT "\\small ".Tab::texify($m->comp("/funclib/strike_name.mas", strike => $strike, nohtml => 1));
			print TEXOUT "\n\n";
		}

		print TEXOUT "}";
		print TEXOUT "\\\\ \n";
		print TEXOUT "\\hline \\hline \n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\end{minipage}";
		print TEXOUT "\\vspace{.25in}\n";
		print TEXOUT "\\newline\n";

	}

	close TEXOUT;

	$m->comp(
		"/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		tail     => 1
	);

</%init>
