<%args>
	$tourn
	$session
	$tab         => undef
	$number      => 1
	$timeslot_id => undef
	$event_id    => undef
	$panel_id    => undef
	$round_id    => undef
	$strikes_due => undef
</%args>
<%init>

	use POSIX;

	my @events;
	my @panels;
	my $round;

	if ($panel_id) {
		push (@panels, Tab::Panel->retrieve($panel_id));
		push (@events, $panels[0]->round->event);
	} elsif ($round_id) {
		push (@panels, Tab::Panel->search(round => $round_id));
		$round = $panels[0]->round if @panels;
		push (@events, $round->event) if $round;
	} elsif ($event_id eq "all") {
		@events = $tourn->events;
	} else {
		push (@events, Tab::Event->retrieve($event_id));
	}

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $strikes_due_dt  = eval {
		my $start = $round->start_time;
		$start = $round->timeslot->start if $round->timeslot && (not defined $start);
		$start->set_time_zone($tz);
		my $start_date = Tab::pickerdate($start);
		my $dt = Tab::dtme($start_date, $strikes_due, "UTC");
		$dt->set_time_zone($tz);
		return $dt;
	};

	if ($round && $strikes_due_dt) {
		$round->setting("strikes_due", "date", $strikes_due_dt);
	}

 	my @timeslots;

	if ($timeslot_id eq "all") {
		@timeslots = $tourn->timeslots;
	} else {
		push (@timeslots, Tab::Timeslot->retrieve($timeslot_id));
	}

	@events = sort {$a->abbr <=> $b->abbr} @events;

    my $name;

	if ($panel_id) {

		$name .= $panels[0]->round->event->name."-".$panels[0]->round->realname."-Section".$panels[0]->letter;

	} else {

		if (scalar @events == 1) {
			$name .= "-".$events[0]->name;
		} else {
			$name .= "-AllEvents";
		}

		if (scalar @timeslots == 1) {
			$name .= "-".$timeslots[0]->name;
		} else {
			$name .= "-AllTimeslots";
		}
	}

    $name =~ s/[\W_]//g;

    my $filename = "StrikeCards-$name-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;

    $m->comp("/funclib/printout.mas",
		 tourn    => $tourn,
		 filename => $filename,
		 head     => 1,
		 array    => "2.4"
	);

    open (TEXOUT, ">>$filepath.tex");

	foreach my $event (@events) {

		my $message = $event->setting('strike_card_message');

		if ($message) {
			my $strip = HTML::Strip->new();
			$message =~ s/\<li\>//g;
			$message =~ s/\<\/li\>/\n/g;
			$message =~ s/\r/\n\n/g;
			$message =~ s/\n/\n\n/g;
			$message =~ s/<br \/>/\n\n/g;
			$message =~ s/\&nbsp;/ /g;
			$message = $strip->parse( $message );
			$message =~ s/^\s+//;
			$message =~ s/\s+$//;
			chomp $message;
		}

		foreach my $timeslot (@timeslots) {
			push @panels, $m->comp("/funclib/event_panels.mas",
				timeslot => $timeslot,
				event    => $event
			);
		}

		foreach my $panel (@panels) {

			next if $panel->bye;

			my @judges = $m->comp("/funclib/panel_judges.mas", panel => $panel);
			my @entries = $m->comp("/funclib/panel_entries.mas", panel => $panel);

			push (@entries, "td") if $tab;

			foreach my $entry (@entries) {

				my $entry_code;
				my $entry_name;

				if ($entry eq "td") {

					foreach my $entry (@entries) {
						next if $entry eq "td";
						if ($entry_code) {
							$entry_code .= " & ";
						} else {
							$entry_code = "Tab Copy: ";
						}
						$entry_code .= $entry->code;
					}
				} else {
					$entry_code = $entry->code;
					$entry_name = $entry->name;
				}

				print TEXOUT "\\noindent\n";
				print TEXOUT "\\huge {\\bf Strike Card}  \\hfill \\huge ";
				print TEXOUT "{\\bf ".Tab::texify($panel->round->realname)."}\n";

				print TEXOUT "\\vspace{.64in} \n";
				print TEXOUT "\\newline \n";

				print TEXOUT "\\centerline{\\huge ";
				print TEXOUT Tab::texify($entry_code)." ";
				print TEXOUT Tab::texify($entry_name)." }\n";

				if ($message) {
					print TEXOUT "\\normalsize\n ";
					print TEXOUT "\\vspace{.1in} \n";
					print TEXOUT "\\newline \n ";
					print TEXOUT "\\noindent\n ";
					print TEXOUT &Tab::texify($message);
					print TEXOUT "\\newline \n ";
				}

				print TEXOUT "\\vspace{.1in} \n";
				print TEXOUT "\\newline \n";

				print TEXOUT "\\textsb{\\Large Please strike ".$number.":}\n";
				print TEXOUT "\\hfill \n";
				if ($strikes_due_dt) {
					print TEXOUT "\\textsb{\\Large Strikes due by ";
					print TEXOUT $m->comp('/funclib/showtime.mas', return => 1, dt => $strikes_due_dt)."}\n";
				}
				print TEXOUT "\\vspace{.48in} \n";
				print TEXOUT "\\newline \n";
				print TEXOUT "\\large \n";

				foreach my $judge (@judges) {
					print TEXOUT "\\indent\n";
					print TEXOUT "\\makebox[.64in]{ } ";
					print TEXOUT "\\makebox[.64in]{\\hrulefill} ";
					print TEXOUT Tab::texify($judge->first." ".$judge->last);
					print TEXOUT ", ".$judge->school->name if $judge->school;
					print TEXOUT "\n";
					print TEXOUT "\\vspace{.32in} \n";
					print TEXOUT "\\newline \n";
				}

				print TEXOUT "\\makebox[7in]{\\hrulefill} ";

				print TEXOUT "\\vspace{.16in} \n";
				print TEXOUT "\\newline \n";
				print TEXOUT "\\normalsize \n";

				print TEXOUT "Opponent: ";
				foreach my $other_entry (@entries) {
					next if $other_entry eq "td";
					next if $other_entry == $entry;
					print TEXOUT Tab::texify($other_entry->code." ");
				}

				print TEXOUT "\\hfill Room: ".Tab::texify($panel->room->name) if $panel->room;

				print TEXOUT "\n \n";
				print TEXOUT "\\newpage\n";

			}

		} # end of foreach panel

	} # end of foreach event

	close TEXOUT;

    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1);

</%init>
