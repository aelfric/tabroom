<%args>
	$tourn
	$tourn_settings
	$parlis      => undef
	$non_parlis  => undef
	$in_congress => undef
	$banish_to   => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	# This stuff will do the manipulations needed to cope with Congress.  First
	# thing we do is pull all the folks marked as parliamentarians into the
	# parlis pool

	my %counts;

	my $msg;

	if ($parlis) {

		my $jpool = Tab::JPool->retrieve($parlis);

		if ($jpool) {

			my $sth = $dbh->prepare("
				select
					judge.id
				from judge, judge_setting parli
					where judge.category = ?
					and judge.id = parli.judge
					and parli.tag = 'parli'
					and not exists (
						select jpj.id
							from jpool_judge jpj
						where jpj.jpool = ?
							and jpj.judge = judge.id
					)
			");

			$sth->execute($jpool->category->id, $jpool->id);

			while (
				my (
					$judge_id
				) = $sth->fetchrow_array()
			) {

				Tab::JPoolJudge->create({
					jpool => $jpool->id,
					judge => $judge_id
				});

				$counts{"parlis"}++;
			}
		}

		$msg .= "Pulled all the parlis into the ".$jpool->name." pool";
	}

	if ($non_parlis) {

		my $jpool = Tab::JPool->retrieve($non_parlis);

		if ($jpool) {

			my $sth = $dbh->prepare("
				select
					judge.id
				from judge, judge_setting prefers_congress
					where judge.category = ?
					and judge.id = prefers_congress.judge
					and prefers_congress.tag = 'prefers_congress'
					and not exists (
						select parli.id
						from judge_setting parli
						where parli.judge = judge.id
						and parli.tag = 'parli'
					)
					and not exists (
						select jpj.id
						from jpool_judge jpj
						where jpj.jpool = ?
						and jpj.judge = judge.id
					)
			");

			$sth->execute($jpool->category->id, $jpool->id);

			while (
				my (
					$judge_id
				) = $sth->fetchrow_array()
			) {

				Tab::JPoolJudge->create({
					jpool => $jpool->id,
					judge => $judge_id
				});

				$counts{"prefers_congress"}++;
			}
		}

		$msg .= "Pulled all the non parlis who preffed congress into the ".$jpool->name." pool";
	}

	if ($in_congress && $banish_to) {

		my $congress = Tab::JPool->retrieve($in_congress);
		my $not_congress = Tab::JPool->retrieve($banish_to);

		if ($congress && $not_congress) {

			my $sth = $dbh->prepare("
				select
					judge.id
				from judge, jpool_judge jpj
					where judge.category = ?
					and jpj.judge = judge.id
					and jpj.jpool = ?

				and not exists (
					select jpj2.id
						from jpool_judge jpj2, jpool jp2
					where jpj2.jpool = jp2.id
						and jp2.category = judge.category
						and jpj2.jpool != jpj.jpool
						and jpj2.judge = judge.id
				)

				and not exists (
					select prefers_congress.id
						from judge_setting prefers_congress
					where prefers_congress.judge = judge.id
						and prefers_congress.tag = 'prefers_congress'
				)
			");

			$sth->execute($congress->category->id, $congress->id);

			while (
				my (
					$judge_id
				) = $sth->fetchrow_array()
			) {

				Tab::JPoolJudge->create({
					jpool => $not_congress->id,
					judge => $judge_id
				});

				$counts{"prefers_congress"}++;
			}
		}
		$msg .= "Banished all those who did not pref congress into the ".$not_congress->name." pool";
	}

	$m->redirect("nats_pool_totals.mhtml?msg=".$msg);

</%init>
