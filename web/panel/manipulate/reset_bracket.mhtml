<%args>
	$round_id
	$winsonly => undef
</%args>
<%perl>

	my $round = Tab::Round->retrieve($round_id);

	#load in the entries

	my $bracket_by_ballots++ if $round->event->setting("bracket_by_ballots");

	my ($entries_hash_ref, $precluded_hash_ref) =
		$m->comp("/funclib/make_pairing_hash.mas",
					round_id => $round->id,
					first_tb => $bracket_by_ballots
	);

	my %entries = %{$entries_hash_ref};

	foreach my $key ( keys %entries ) {

		if ($key) {

			my $entry = Tab::Entry->retrieve($key) ;
			my $bracket = $entries{$key}{'wins'} ;

			if ( $winsonly eq "false" ) {
				if ($entries{$entries{$key}{'opponent'}}{'wins'} > $bracket ) {
					$bracket = $entries{$entries{$key}{'opponent'}}{'wins'};
				}
			}

			if ( $winsonly eq "showlosses" ) {
				$bracket = $round->name - $entries{$key}{'wins'} - 1;
			}

			$entry->setting("placement", $bracket) ;
		}
	}

	my $event = $round->event;
	$event->setting("bracket_set_for", $round_id);
	$m->redirect("manual_powermatch.mhtml?round_id=$round_id");

</%perl>
