<%args>
	$person
	$round_id
	$bracket       => undef
	$entry_to_pair => undef
</%args>
<%init>

	# WARN CHRIS ABOUT SAVE_PAIRING.MAS
	# This is Chris. I have no idea what this warning is.  But this message's
	# presence scares me.

	#set to zero to suppress messages, 1 to enable
	my $debug = 0;

	print "Round id is $round_id. " if $debug;
	print "At load bracket is $bracket<br>" if $debug;

	$m->abort unless $round_id;

	use POSIX;
	use List::Util 'shuffle';
	use Time::HiRes qw( time );

	my $round = Tab::Round->retrieve($round_id);
	$m->abort unless $round;

	my $event = $round->event;
	my %event_settings = $event->all_settings;

	my $powermatch_method = $event_settings{"powermatch"};

	my $aff_string = $event_settings{"aff_label"};
	my $neg_string = $event_settings{"neg_label"};
	$aff_string = "Aff" unless $aff_string;
	$neg_string = "Neg" unless $neg_string;

	my $round_name = $round->name;
	my $bracket_not_set++ if $event_settings{"bracket_set_for"} != $round_id;

    my $side_locked;
    my $side_lock_against;

	my $sidelock_against = $round->setting("sidelock_against");

    if ($sidelock_against) {

        if ($sidelock_against ne "NONE"
			&& $sidelock_against ne "RANDOM"
		) {
            $side_locked++;
            $side_lock_against = $sidelock_against;
        }

    } else {
        $side_locked++ unless ($round->name % 2);
        undef $side_locked if $event_settings{"no_side_constraints"};
    }

	my $start = time();

	#load the pairing hash
	my ($entries_ref, $precluded_ref) = $m->comp(
		"/funclib/make_pairing_hash.mas",
		round_id => $round->id
	);

	my %entries = %{$entries_ref};
	my %bracket_keys;

	foreach my $key (
		sort {$entries{$a}->{'seed'} <=> $entries{$b}->{'seed'}}
		keys(%entries)
	) {
		$bracket_keys{$entries{$key}{'wins'}}++;
	}

	my @brackets = sort {$b <=> $a} keys %bracket_keys;

	$bracket = $brackets[0] unless defined $bracket;

	print "After check bracket is $bracket<br>" if $debug;

	my $end = time();
	if ($debug) {
		print "hash setup time:  ";
		printf("%.2f\n", $end - $start);
		print "<Br>";
	}

	my $nteams = keys %entries;
	my $num_preclusions = keys %{$precluded_ref};

	if ($debug) {
		print "n entries from hash:".$nteams."<br>";
		print "n preclusions from hash:".$num_preclusions."<br>";
		$end = time();
		print "Current round setup time:  ";
		printf("%.2f\n", $end - $start);
		print "<br>";
	}

#	Declare the variables to mark the number of teams in the bracket

	my $aff_teams_in_bracket = 0;
	my $neg_teams_in_bracket = 0;

#	Count paired and unpaired teams in the bracket

	my $paired_teams = 0;
	my $unpaired_teams = 0;

	foreach my $key (keys %entries) {

		if (
			($entries{$key}{'placement'} == $bracket or $bracket == -1)
				and $entries{$key}{'opponent'} > 0
		) {
			$paired_teams++;
		}

		if (
			($entries{$key}{'placement'} == $bracket or $bracket == -1)
				and $entries{$key}{'opponent'} < 1
		) {
			$unpaired_teams++;
		}
	}

	sub had_bye_already {

		my ($team) = @_;

		Tab::Ballot->set_sql(  byes => "
			select distinct ballot.id
			from ballot
			where ballot.entry = ?
			and ballot.bye = 1
		");

		Tab::Ballot->set_sql(  panel_byes => "
			select distinct ballot.id
			from ballot, panel
			where ballot.entry = ?
			and ballot.panel = panel.id
			and panel.bye = 1
		");

		my @byes = Tab::Ballot->search_byes($team);
		push @byes, Tab::Ballot->search_panel_byes($team);

		my $warn = "This entry has already received a bye.  Proceed?" if @byes;
		return $warn;
	}

	print "bracket is $bracket<br>" if $debug;

	my $bracket_change_display_str="";

	unless ($bracket) {
		$bracket = -1;
	}

	if ( $bracket == -1 ) {
		$bracket_change_display_str ="style='display:none;'";
	}

	my $display_flag;
	my $win_tag;

</%init>

	<div class="main" display="table">

	<script>

		// Yes this is some of the worst javascript ever seen to mankind, even
		// after I've massively refactored it to get rid of the dependencies on
		// the ACTUAL CELL POSITIONS and suchforth.  This is all I could do to
		// make it reasonable on a flight from LA to Boston.  I'm sorry.

		$(document).ready(function() {
			showBracket(<% $bracket %>);
		});

		var showBracket = function(bracket) {

			$(".aff_rows").addClass("hidden");
			$(".neg_rows").addClass("hidden");
			$(".unpaired").removeClass("hidden");

			// UPDATE AFF BRACKET
			if (bracket == -1) {
				$(".aff_rows").removeClass("hidden");
				$(".neg_rows").removeClass("hidden");
				$(".unpaired").addClass("hidden");
				$("#bracketlabel").html("All entries");
			} else {
				$(".aff_rows_"+bracket).removeClass("hidden");
				$(".neg_rows_"+bracket).removeClass("hidden");
				$(".unpaired_"+bracket).addClass("hidden");
				$("#bracketlabel").html(bracket + " win bracket");
			}

			if (bracket == -1) {
				$("#affheader").html("All <% $aff_string %> entries");
				$("#negheader").html("All <% $neg_string %> entries");
			} else {
				$("#affheader").html("<% $aff_string %> " + bracket + " bracket");
				$("#negheader").html("<% $neg_string %> " + bracket + " bracket");
			}

//			UPDATE THE BRACKET PAIRING FUNCTIONS

			var currentRound = <% $round_id %>;

			document.getElementById("autopairlink").href
				= "/panel/round/pair_bracket.mhtml?round_id=" + currentRound + "&bracket_to_pair=" + bracket + "&fromjava=true";

			document.getElementById("collapse_up").href
				= "collapse_bracket.mhtml?round_id=" + currentRound + "&bracket=" + bracket + "&pull_iterator=1&fromjava=true";

			var adj_bracket = parseFloat(bracket) + 1;
			var max_wins = <% $round->name %> -1 ;
			var pull_iterator = 1;

			if ( adj_bracket > max_wins ) {
				adj_bracket = max_wins;
				pull_iterator = 0;
			}

			document.getElementById("collapse_up").innerHTML
				= "Collapse " + bracket + " into " + adj_bracket + " bracket";

			document.getElementById("collapse_up").href
				= "collapse_bracket.mhtml?round_id=" + currentRound + "&bracket=" + bracket +"&pull_iterator=" + pull_iterator + "&fromjava=true";

			var adj_bracket = parseFloat(bracket) - 1;
			pull_iterator = -1;

			if (adj_bracket < 0) {
				adj_bracket = 0;
				pull_iterator = 0;
			}

			document.getElementById("collapse_down").innerHTML
				= "Collapse " + bracket + " into " + adj_bracket + " bracket";

			document.getElementById("collapse_down").href
				= "collapse_bracket.mhtml?round_id=" + currentRound + "&bracket=" + bracket +"&pull_iterator=" + pull_iterator + "&fromjava=true";

			document.getElementById("dump_bracket").innerHTML
				= "Dump debates in " + bracket + " bracket";

			document.getElementById("dump_bracket").href
				= "dump_bracket.mhtml?round_id=" + currentRound + "&bracket_to_pair=" + bracket +"&fromjava=true";

			document.getElementById("dump_and_autopair_bracket").innerHTML
				= "Dump debates in bracket " + bracket + " &amp; autopair";

			document.getElementById("dump_and_autopair_bracket").href
				= "/panel/round/pair_bracket.mhtml?round_id=" + currentRound + "&bracket_to_pair=" + bracket + "&delete_existing=Seaver&fromjava=true";

			count_paired(bracket);

			var dummy = document.getElementById("bracket_changes");
			if ( bracket != -1 ) {
				dummy.style.display = "full";
			} else {
				dummy.style.display = "none";
			}

			// these are the done brackets so they don't get revived from the grave
			$(".noreallyhideme").addClass('hidden');
			$("#table_"+bracket).addClass('hidden');

			fixVisual();
		}

		count_paired = function(bracket) {

			var dueAffCount   = 0;
			var dueNegCount   = 0;
			var unpairedCount = 0;

			// I bet if I thought about it a touch I could come up with a more
			// elegant way to do this but holy hell you should have seen the
			// 320 lines of code this replaced. --CLP

			$(".aff_rows_"+bracket).each(function() {
				dueAffCount++;
				if ($(this).attr("opponent")) {
				} else {
					unpairedCount++;
				}
			});

			$(".neg_rows_"+bracket).each(function() {
				dueNegCount++;
				if ($(this).attr("opponent")) {
				} else {
					unpairedCount++;
				}
			});

			$("#due_aff").html(dueAffCount);
			$("#due_neg").html(dueAffCount);
			$("#paired_already").html(dueNegCount + dueAffCount - unpairedCount);
			$("#left_to_pair").html(unpairedCount);

			if (unpairedCount == 0) {
				$("#table_"+bracket).addClass('hidden');
				$("#table_"+bracket).addClass('noreallyhideme');
			} else {
				$("#table_"+bracket).removeClass('noreallyhideme');
				$("#table_"+bracket).removeClass('hidden');
			}
		}

		var pullMeUpScotty = function(pullDirection, entry) {

			//see if they've been pulled up before and confirm if yes
  			var pullups = parseInt($("#"+entry).attr("pullups"));
  			var entryBracket = parseInt($("#"+entry).attr("bracket"));

			if (pullDirection == "DOWN") {

				var newBracket = entryBracket - 1;

				$("#"+entry).attr("bracket", newBracket);

				$("#unpaired_"+entry).attr("bracket", newBracket);
				$("#unpaired_"+entry).addClass("unpaired_"+newBracket);
				$("#unpaired_"+entry).removeClass("unpaired_"+entryBracket);
				$("#unpaired_"+entry).prependTo("#unpaired_"+newBracket);

				$("#"+entry).removeClass("aff_rows_"+entryBracket);
				$("#"+entry).removeClass("neg_rows_"+entryBracket);

				$("#"+entry).addClass("aff_rows_"+newBracket);
				$("#"+entry).addClass("neg_rows_"+newBracket);

				//save it
				$.post("/panel/manipulate/manual_pullup.mhtml",
					{ bracket: newBracket, entry_id: entry },
					function() {
						showBracket(entryBracket);
					});

			} else {

				if (pullups > 0) {
					var confirm = window.confirm("This entry has been pulled up " + n_pulls + " times(s) before.  Pull them up anyway?");
					if (confirm == false) {
						return;
					}
				}

				var newBracket = parseInt($("#bracket_chooser").val());

				if (newBracket != entryBracket) {

					var pullupLevel = Math.abs(newBracket - entryBracket);

					if (pullupLevel > 1) {
						var confirm = window.confirm("This pullup will cross" + pullupLevel + " brackets!  Are you sure?");
						if (confirm == false) {
							return;
						}
					}
				}

				$("#unpaired_"+entry).addClass("hidden");
				$("#"+entry).removeClass("aff_rows_"+entryBracket);
				$("#"+entry).removeClass("neg_rows_"+entryBracket);
				$("#"+entry).addClass("aff_rows_"+newBracket);
				$("#"+entry).addClass("neg_rows_"+newBracket);
				$("#unpaired_"+entry).prependTo("#unpaired_"+newBracket);
				$("#"+entry).attr("bracket", newBracket);

				$.post("/panel/manipulate/manual_pullup.mhtml",
					{bracket: newBracket, entry_id: entry},
					function () {
						showBracket(newBracket);
						$("#unpaired_"+entry).attr("bracket", newBracket);
					}
				);
			}
		}

		updateBye = function(panelId, entry, wins) {

			var entryName;

			//update their row for the onscreen display
			$("#"+entry).attr("opponent", -1);
			entryName = $("#"+entry).attr("entrycode");
			$("#opponent_"+entry).attr("colspan", 3);
			$("#opponent_"+entry).html("<a class='semibold greentext full hover' onclick='deletePanel( " + panelId + ", " + entry + ", -1) '>BYE</a>");
			$("#givebye_"+entry).addClass("hidden");
			$("#pull_"+entry).addClass("hidden");

			$("#unpaired_"+entry).attr("opponent", -1);
			$("#unpaired_"+entry).addClass("hidden");

			//add it to the pairings table
			var pairings_table = document.getElementById("pairings");
			var my_row = pairings_table.insertRow();
			my_row.id = "entrycode_"+panelId;
			var cell1 = my_row.insertCell(0);
			var cell2 = my_row.insertCell(1);
			var cell3 = my_row.insertCell(2);
			var cell4 = my_row.insertCell(3);

			$(my_row).addClass("row");
			$(cell4).addClass("centeralign nospace");
			cell2.innerHTML = "<span class='twothird nowrap'>" + entryName + "</span><span class='third'>" + <% $win_tag %> + "wins</span>";
			cell3.innerHTML = "<span class='twothird nowrap semibold redtext'> BYE </span>";
			cell4.innerHTML = "<a class='redtext buttonwhite fa fa-lg fa-trash' onclick='deletePanel( " + panelId + ", " + entry + ", -1 );'></a>";

			count_paired(wins);
			fixVisual();
		}

		givebye = function(entry, hadbye, wins) {

			//Give user abort option if had bye before
			if (hadbye.length > 5) {
				var doit = window.confirm(hadbye);
				if ( doit == false ) { return; }
			}

			//store the bye and call screen update
			var rd_id = <% $round_id %>,
			bracket   = <% $bracket %>,
			panelId;

			$.post("save_pairing.mhtml",{
					round_id          : rd_id,
					team1             : entry,
					wins1             : wins,
					seed1             : wins,
					team2             : -1,
					wins2             : 0,
					seed2             : 0,
					bracket_to_return : -42
				},
				function(responseMessage){
					if (responseMessage === "FAIL") {
					} else {
						panelId = parseFloat(responseMessage);
						updateBye(panelId, entry, wins);
					}
				}
			);
			fixVisual();
		}

		function deletePanel(panelId, aff, neg) {

			$.post(
				"dump_panel.mhtml",
				{ panel_id: panelId },
				function() {

					// I realized now after doing all this mess that I could
					// have made this an iterative array and cut out half the
					// lines of code so I'm going to leave this here as a
					// monument and example for future generations.

					// Still was about 75 lines shorter than Jon's version

					$("#pairing_"+panelId).remove();

					var affBracket = $("#"+aff).attr("bracket");
					var affSeed = $("#"+aff).attr("entryseed")

					var negBracket = $("#"+neg).attr("bracket");
					var negSeed = $("#"+neg).attr("entryseed")

					$("#givebye_"+aff).removeClass("hidden");
					$("#pull_"+aff).removeClass("hidden");

					$("#opponent_"+aff).removeClass("leftalign");
					$("#opponent_"+aff).addClass("centeralign");

					$("#opponent_"+aff).attr("colspan", 1);
					$("#opponent_"+aff).html("<a class='smallbutton' onclick='savePairing(1, "
						+ aff
						+ ", "
						+ affBracket
						+ ", "
						+ affSeed
						+ ");' > Choose </a>");

					$("#opponent_"+neg).attr("colspan", 1);
					$("#givebye_"+neg).removeClass("hidden");

					$("#opponent_"+neg).removeClass("leftalign");
					$("#opponent_"+neg).addClass("centeralign");

					$("#pull_"+neg).removeClass("hidden");
					$("#opponent_"+neg).html("<a class='smallbutton' onclick='savePairing(1, "
						+ neg
						+ ", "
						+ negBracket
						+ ", "
						+ negSeed
						+ ");' > Choose </a>");

					var bracket = parseInt($("#bracket_chooser").val());
					showBracket(bracket);
				}
			);
		}

		showOpponents = function(entry, wins, seed) {

			var entry_code = $("#"+entry).attr("entrycode");

			//update header
			$('#instruction_header').html("<h5 class=\"nospace\">Find opponent for " + entry_code + " </h5>");

			//store entry id in entry_to_pair element
			$('#entry_to_pair_entry').html(entry);
			$('#entry_to_pair_wins').html(wins);
			$('#entry_to_pair_preset_seed').html(seed);

			$(".entryrows").removeClass('semibold');
			$(".entryrows").removeClass('strong');
			$(".entryrows").removeClass('bluetext');

			$(".entrycodes").removeClass('bluetext');
			$(".entrycodes").removeClass('semibold');
			$(".entrycodes").removeClass('redtext');
			$(".choosebutton").removeClass('redtext');
			$(".entrycodes").removeClass('invert');

			// kill me.  ugh.  I mean I hate doing it this way but it beats the
			// hell out of printing it into a friggin TABLE then PARSING THE
			// CELL LOCATIONS.

			$("#entrycode_"+entry).addClass('bluetext');
			$("#entrycode_"+entry).addClass('semibold');

			var preclusions = <% JSON::encode_json($precluded_ref) %>;

			Object.keys(preclusions[entry]).map(function (oppId) {
				$("#entrycode_"+oppId).addClass('redtext');
				$("#choose_"+oppId).addClass('redtext');
				$("#entrycode_"+oppId).addClass('semibold');
				$("#entrycode_"+oppId).addClass('invert');
			});

			$('#entrycode_'+entry).removeClass('redtext');
			$('#choose_'+entry).removeClass('redtext');
			$('#'+entry).removeClass('redtext');

			$('#'+entry).addClass('bluetext');
			$('#'+entry).addClass('strong');
		}

		updatePairing = function(panelId, aff, neg, bracket) {

			//pull aff name & wins
			var aff_row = document.getElementById(aff);

			var affName = $("#"+aff).attr("entrycode");
			var negName = $("#"+neg).attr("entrycode");

			var affWins = $("#"+aff).attr("entrywins");
			var negWins = $("#"+neg).attr("entrywins");

			$("#"+aff).attr("opponent", neg);
			$("#"+neg).attr("opponent", aff);

			$("#opponent_"+aff).html("<a class='white full padtop padbottom nowrap limit3' onclick='deletePanel(" +panelId+ ", "+aff+", "+neg+");'>"+ negName+"</a>");
			$("#opponent_"+neg).html("<a class='white full padtop padbottom nowrap limit3' onclick='deletePanel(" +panelId+ ", "+neg+", "+aff+");'>"+ affName+"</a>");

			$("#opponent_"+aff).attr("colspan", 3);
			$("#opponent_"+neg).attr("colspan", 3);

			$("#opponent_"+aff).removeClass("centeralign");
			$("#opponent_"+neg).removeClass("centeralign");

			$("#opponent_"+aff).addClass("padleft");
			$("#opponent_"+neg).addClass("padleft");
			$("#opponent_"+aff).addClass("leftalign");
			$("#opponent_"+neg).addClass("leftalign");

			$("#givebye_"+aff).addClass("hidden");
			$("#givebye_"+neg).addClass("hidden");

			$("#pull_"+aff).addClass("hidden");
			$("#pull_"+neg).addClass("hidden");

			//update unpaired table

			$("#unpaired_"+aff+"_opponent").html(neg);
			$("#unpaired_"+neg+"_opponent").html(aff);

			//add it to the pairings table
			var pairings_table = document.getElementById("pairings");
			var my_row = pairings_table.insertRow(1);
			my_row.id = "pairing_"+panelId;

			var cell1 = my_row.insertCell(0);
			var cell2 = my_row.insertCell(1);
			var cell3 = my_row.insertCell(2);
			var cell4 = my_row.insertCell(3);

			$(cell4).addClass("centeralign");
			$(cell4).addClass("nospace");

			var bracket = affWins, affPullup, negPullup;

			if (bracket < negWins) {
				bracket = negWins;
				affPullup = " semibold bluetext";
			}

			if (negWins < affWins) {
				negPullup = " semibold bluetext";
			}

			cell1.innerHTML = bracket;

			cell2.innerHTML = "<span class='twothird nowrap'>"
				+ affName
				+ "</span><span class='third"
				+ affPullup
				+ "'>"
				+ affWins
				+ "wins </span>"
			;

			cell3.innerHTML = "<span class='twothird nowrap'>"
				+ negName
				+ "</span><span class='third"
				+ negPullup
				+ "'>"
				+ negWins
				+ "wins </span>";

			cell4.innerHTML = "<a class='buttonwhite hover redtext fa fa-lg fa-trash'"
					+ "onclick='deletePanel( "
						+ panelId
						+ ", "+ aff
						+ ", "+ neg
						+ ");'></a>";

			$("#instruction_header").html("Tap an entry code to find a match");

			count_paired(bracket);
			fixVisual();
		}

		savePairing = function( side, entry, wins, seed ) {

			//pull the entry team row

			// this change allows you to pair a team against its own side locked side,
			// which in some screwy conditions is a necessary evil.

			var current_row = document.getElementById(entry);
			var bracket = parseInt($("#"+entry).attr("bracket"));

			//get round
			var currentRound = <% $round_id %>;

			//load entry_to_pair values
			var entry_to_pair_entry = document.getElementById('entry_to_pair_entry').innerHTML;
			var entry_to_pair_wins = document.getElementById('entry_to_pair_wins').innerHTML;
			var entry_to_pair_preset_seed = document.getElementById('entry_to_pair_preset_seed').innerHTML;

			if (entry_to_pair_entry.length == 0) {
				alert("You must choose a team to pair first from the left hand column");
				return;
			}

			//set sides correctly
			var team1;
			var wins1;
			var seed1;
			var team2;
			var wins2;
			var seed2;

			if (side == 1) {
				team1 = entry;
				wins1 = wins;
				seed1 = seed;
				team2 = entry_to_pair_entry;
				wins2 = entry_to_pair_wins;
				seed2 = entry_to_pair_preset_seed;
			} else {
				team1 = entry_to_pair_entry;
				wins1 = entry_to_pair_wins;
				seed1 = entry_to_pair_preset_seed;
				team2 = entry;
				wins2 = wins;
				seed2 = seed;
			}


			// save it

			$.post("save_pairing.mhtml",{
					round_id          : currentRound,
					team1             : team1,
					wins1             : wins1,
					seed1             : seed1,
					team2             : team2,
					wins2             : wins2,
					seed2             : seed2,
					bracket_to_return : -42
				},
				function(responseMessage){
					panelId = parseFloat(responseMessage);
					updatePairing(panelId, team1, team2, bracket);
				}
			);

			//clean up screen
			$(".entryrows").removeClass('semibold');
			$(".entrycodes").removeClass('bluetext');
			$(".entrycodes").removeClass('redtext');

			var bracket = parseInt($("#bracket_chooser").val());
			showBracket(bracket);
		}

	</script>

		<div class="nospace">
			<span class="twothird nospace">
				<h4><% $round->realname %> Manual Powermatch</h4>
				<input
					id    = "sideLocked"
					type  = "hidden"
					value = "<% $side_locked %>"
				>
			</span>

%			unless ($bracket_not_set) {
				<span class="third rightalign nospace right">
					<h4 id="bracketlabel"><% $bracket == -1 ? "All Entries" : $bracket ." bracket" %></h4>
				</span>
%			}
		</div>

%		if ($bracket_not_set) {

%			my $other_round_id = $event_settings{"bracket_set"};
%			my $other_round = Tab::Round->retrieve($other_round_id) if $other_round_id;

%			if ($other_round) {

				<p>
					Current brackets are set for <% $other_round->realname %>.
					Recalculating brackets will mess with that round unless
					it's already completed.
				</p>

				<div class="evenrow centeralign full">
					<a
						class="inline dkblue"
						href="reset_bracket.mhtml?round_id=<% $round_id %>&winsonly=true&fromjava=true"
					>
						Calculate Initial Brackets
					</a>
				</div>
<%perl>
			} else {
				$m->redirect("reset_bracket.mhtml?round_id=$round_id&winsonly=true");
			}

		} else {

</%perl>

			<& "/funclib/tablesorter.mas",
				table     => "affbracket",
				nobuttons => 1
			&>

			<div class="nospace">
				<span class="third nospace">
%					if ($side_locked) {
						<h5 id="affheader">
							<%
								$bracket == -1
								? "All ".$aff_string." Entries"
								: $aff_string.": ".$bracket." win bracket"
							%>
						</h5>
%					}
				</span>

				<span class="twothird nospace right martop">
					<div
						id    = "instruction_header"
						class = "nospace rightalign"
					>
						<h6 class="nospace">Tap an entry code to find a match</h6>
					</div>
				</span>
			</div>
<%perl>
			my $side_save = 2;
			$side_save = 1 if $side_locked;

			my @keys = keys %entries;

			@keys = sort {
				$entries{$a}->{'seed'} <=> $entries{$b}->{'seed'}
			} @keys if $powermatch_method;

			@keys = sort {
				$entries{$a}->{'SOP'} <=> $entries{$b}->{'SOP'}
			} @keys if $powermatch_method eq "sop";

			my $sample_key = $keys[0] if @keys;
			my $win_tag = uc(substr($entries{$sample_key}{'tb_desc'}, 0, 1));
			my $win_long_tag = uc(substr($entries{$sample_key}{'tb_desc'}, 0, 3));
</%perl>
			<table
				id    = "affbracket"
				class = "martop"
			>
				<thead>
					<tr class="yellowrow">
						<th class="smaller" title="Entry Designation">
							Code
						</th>

						<th class="smaller" title="Bracket Method: <% $entries{$sample_key}{'tb_long_desc'} %>">
							<% $win_tag %>
						</th>

						<th class="smaller" title="Seed">
							Seed
						</th>

%						if ($powermatch_method eq "sop") {
							<th class="smaller" title="Seed + Opponent Average Seed">
								SOP
							</th>
%						}

						<th class="smaller" title="2nd Tiebreaker: <% $entries{$sample_key}{'next_long_desc'} %>">
							<% uc(substr($entries{$sample_key}{'next_desc'}, 0, 2)) %>
						</th>

						<th class="smaller" title="Overall Seed Excluding Win/Loss">
							BktSd
						</th>

						<th class="smaller" title="Average Opponent Seed">
							OppSd
						</th>

%						if ($event_settings{bracket_by_ballots}) {
							<th class="smaller" title="Average Opponent Ballots">
								OBall
							</th>
%						} else {
							<th class="smaller" title="Average Opp Seed & Avg Opp Wins">
								OppW
							</th>
%						}

						<th class="smaller" title="Sides So Far">
							Sides
						</th>

						<th class="smaller" title="Side Last Round">
							Last
						</th>

						<th class="smaller" title="Got Pulled Up/Debated The Pullup">
							Pull
						</th>

						<th class="smaller" title="Opponent This Round">
							Vs
						</th>

						<th class="smaller nosort" colspan="2">
							Action
						</th>
					</tr>
				</thead>

				<tbody class="smallish">
<%perl>
					foreach my $key (@keys) {

						if ($key and $key > -1 and ($entries{$key}{sidedue} == 1 or not defined $side_locked) ) {

							$aff_teams_in_bracket++ if $entries{$key}{'placement'} == $bracket;
</%perl>
							<tr
								class     = "rightalign aff_rows aff_rows_<% $entries{$key}{"placement"} %> entryrows"
								id        = "<% $key %>"
								bracket   = "<% $entries{$key}{'placement'} %>"
								entrycode = "<% $entries{$key}{"code"} %>"
								entryseed = "<% $entries{$key}{"seed"} %>"
								entrywins = "<% $entries{$key}{"wins"} %>"
								opponent  = "<% $entries{$key}{'opponent'} %>"
								pullups   = "<% $entries{$key}{'pulled_up'} %>"
								title     = "Bracket <% $entries{$key}{'placement'} %>"
							>

								<!-- Col 0, entry -->
								<td class="nospace leftalign limit3" id="entry_<% $key %>">
%									unless ($key == $entry_to_pair) {
										<a
											class     = "padleft limit3 nowrap white padtop padbottom entrycodes"
											id        = "entrycode_<% $key %>"
											title     = "<% $entries{$key}{'code'} %>"
											onclick   = "showOpponents(
												<% $key %>,
												<% $entries{$key}{'wins'} %>,
												<% $entries{$key}{'seed'} %>
											);"
										>
%									}
										<% $entries{$key}{'code'} %>
									</a>
								</td>

								<!-- Col 1, wins -->
								<td class="centeralign">
									<% $entries{$key}{'wins'} %>
								</td>

								<!-- Col 2, seed -->
								<td>
									<% $entries{$key}{'seed'} %>
								</td>

								<!-- Col 3, SOP -->
%								if ($powermatch_method eq "sop") {
									<td>
										<% sprintf("%.1f", $entries{$key}{'SOP'}) %>
									</td>
%								}

								<!-- Col 4, TB after wins -->
								<td>
									<% sprintf("%.1f", $entries{$key}{'next_tb'}) %>
								</td>

								<!-- Col 5, seed w/o wins -->
								<td>
									<% $entries{$key}{'seed_nowins'} %>
								</td>

								<!-- Col 6, avg opp wins -->
								<td class="nospace centeralign">
									<% sprintf("%.1f", $entries{$key}{'opp_seed'}) %>
								</td>

								<td class="centeralign">
%									if ($event_settings{bracket_by_ballots}) {
										<% sprintf("%.1f", $entries{$key}{'opp_ballots'}) %>
%									} else {
										<% sprintf("%.1f", $entries{$key}{'opp_wins'}) %>
%									}
								</td>

								<!-- Col 7, side due -->

								<td class="centeralign"
									title="<% $entries{$key}{"aff_count"}.substr($aff_string, 0, 1) %> <% $entries{$key}{"neg_count"}.substr($neg_string, 0, 1) %>">
									<% $entries{$key}{"aff_count"} %>-<% $entries{$key}{"neg_count"} %>
								</td>

								<td class="centeralign" title="Side Last Round">
									<% $entries{$key}{"last_side"} == 1 ? substr($aff_string, 0, 1) : "" %>
									<% $entries{$key}{"last_side"} == 2 ? substr($neg_string, 0, 1) : "" %>
								</td>

								<!-- Col 8, pullup status -->
								<td class="centeralign">
									<% $entries{$key}{'pulled_up'} %> / <% $entries{$key}{'got_pullup'} %>
								</td>

								<!-- Col 9, oppn -->
%								if ( $entries{$key}{'opponent'} > 0 ) {

									<td
										class   = "leftalign padleft nospace"
										id      = "opponent_<% $key %>"
										colspan = "3"
									>

										<a class="white full limit3 padtop padbottom nowrap"
											onclick="deletePanel(
												<% $entries{$key}{'panel'} %>,
												<% $key %>,
												<% $entries{$key}{'opponent'} %>
											)"
										>
											<% $entries{$entries{$key}{'opponent'}}{'code'} %>
										</a>

%									} elsif ( $entries{$key}{'opponent'} == -1 ) {

										<td
											class   = "leftalign nospace"
											colspan = "3"
											id      = "opponent_<% $key %>"
										>

											<a class="semibold greentext full hover marno padleftmore"
												onclick="deletePanel(
													<% $entries{$key}{'panel'} %>,
													<% $key %>,
													<% $entries{$key}{'opponent'} %>
												)"
											> BYE </a>

%									} else {
										<td class = "centeralign nospace"
											id    = "opponent_<% $key %>"
										>
											<a class="smallbutton choosebutton"
												id = "choose_<% $key %>"
												onclick="savePairing( <% $side_save %>,
													<% $key %>,
													<% $entries{$key}{'wins'} %>,
													<% $entries{$key}{'seed'} %>
												)">
												Choose
											</a>
%									}
								</td>

								<!-- Col 10, the bye button -->
%#								set display flag for columns 10 and 11

%								undef $display_flag;

%								$display_flag="hidden"
%									if $entries{$key}{'opponent'} == -1
%									|| $entries{$key}{'opponent'} > 0;

								<td
									class = "centeralign nospace <% $display_flag %>"
									id    = "givebye_<% $key %>"
								>

%								my $warn = had_bye_already($key);

									<a
										id      = "affbyebutton<% $key %>"
										class   = "smallbutton"
										onclick = "givebye(
											<% $key %>,
											'<% $warn %>',
											<% $entries{$key}{'wins'} %>
										);"
									>
										Bye
									</a>
								</td>

								<!-- Col 11, pull up/down button -->
								<td
									id    = "pull_<% $key %>"
									class = "nospace centeralign <% $display_flag %>"
								>
									<a
										id      = "affpullbutton<% $key %>"
										class   = "smallbutton"
										onclick = "pullMeUpScotty('DOWN', <% $key %>);"
									>
										Pull &darr;
									</a>
								</td>
							</tr>
%						}

%					}
				</tbody>
			</table>

%		if ($side_locked) {

			<& "/funclib/tablesorter.mas",
				table     => "negbracket",
				nobuttons => 1
			&>

			<table id="negbracket">

				<h5 id="negheader">
					<%
						$bracket == -1
						? "All ".$neg_string." Entries"
						: $neg_string." ".$bracket." win bracket"
					%>
				</h5>

				<thead>
					<tr class="yellowrow">
						<th class="smaller" title="Entry Designation">
							Code
						</th>

						<th class="smaller" title="Bracket Method: <% $entries{$sample_key}{'tb_long_desc'} %>">
							<% $win_tag %>
						</th>

						<th class="smaller" title="Seed" >Seed</th>
						<th class="smaller" title="Seed + Opponent Average Seed">SOP</th>

						<th class="smaller" title="2nd Tiebreaker: <% $entries{$sample_key}{'next_long_desc'} %>">
							<% uc(substr($entries{$sample_key}{'next_desc'}, 0, 2)) %>
						</th>

						<th class="smaller" title="Overall Seed Excluding Win/Loss">
							BktSd
						</th>

						<th class="smaller" title="Average Opponent Seed">
							OppSd
						</th>

%						if ($event_settings{bracket_by_ballots}) {
							<th class="smaller" title="Average Opponent Ballots">
								OBall
							</th>
%						} else {
							<th class="smaller" title="Average Opp Seed & Avg Opp Wins">
								OppW
							</th>
%						}

						<th class="smaller" title="Side Due">
							Sides
						</th>

						<th class="smaller" title="Side Last Round">
							Last
						</th>

						<th class="smaller" title="Got Pulled Up/Debated The Pullup">
							Pullup
						</th>

						<th class="smaller" title="Opponent This Round">
							Vs
						</th>

						<th class="smaller nosort" colspan="2">
							Action
						</th>
					</tr>
				</thead>

				<tbody class="smallish">
<%perl>
					my @keys = keys %entries;

					@keys =
						sort {$entries{$a}->{'seed'} <=> $entries{$b}->{'seed'}} @keys
						if $powermatch_method;

					@keys =
						sort {$entries{$a}->{'SOP'} <=> $entries{$b}->{'SOP'}} @keys
						if $powermatch_method eq "sop";

					foreach my $key (@keys) {

						if ($key and $key > -1 and $entries{$key}{sidedue} == 2 ) {
</%perl>
							<tr
								id        = "<% $key %>"
								class     = "rightalign neg_rows neg_rows_<% $entries{$key}{"placement"} %> entryrows"
								bracket   = "<% $bracket %>"
								entrycode = "<% $entries{$key}{"code"} %>"
								entryseed = "<% $entries{$key}{"seed"} %>"
								opponent  = "<% $entries{$key}{'opponent'} %>"
								pullups   = "<% $entries{$key}{'pulled_up'} %>"
								title     = "Due Neg Bracket <% $bracket %>"
							>

%								$neg_teams_in_bracket++ if $entries{$key}{'placement'} == $bracket;
								<!-- Col 0, entry -->
								<td class="nospace leftalign limit3">
									<a
										class     = "padleft limit3 nowrap white padtop padbottom entrycodes"
										id        = "entrycode_<% $key %>"
										title     = "<% $entries{$key}{'code'} %>"
										onclick   = "showOpponents(
											<% $key %>,
											<% $entries{$key}{'wins'} %>,
											<% $entries{$key}{'seed'} %>
										)">
										<% $entries{$key}{'code'} %>
									</a>
								</td>

								<!-- Col 1, wins -->
								<td class="centeralign padno">
									<% $entries{$key}{'wins'} %>
								</td>

								<!-- Col 2, seed -->
								<td>
									<% $entries{$key}{'seed'} %>
								</td>

%								if ($powermatch_method eq "sop") {
									<td>
										<% sprintf("%.1f", $entries{$key}{'SOP'}) %>
									</td>
%								}

								<!-- Col 4, 1st TB after wins -->
								<td>
									<% sprintf("%.1f", $entries{$key}{'next_tb'}) %>
								</td>

								<td>
									<% $entries{$key}{'seed_nowins'} %>
								</td>

								<td class="centeralign">
%									if ($event_settings{bracket_by_ballots}) {
										<% sprintf("%.1f", $entries{$key}{'opp_ballots'}) %>
%									} else {
										<% sprintf("%.1f", $entries{$key}{'opp_wins'}) %>
%									}
								</td>

								<td class="nospace centeralign">
									<% sprintf("%.1f", $entries{$key}{'opp_seed'}) %>
								</td>


								<td class="centeralign"
									title="<% $entries{$key}{"aff_count"}.substr($aff_string, 0, 1) %> <% $entries{$key}{"neg_count"}.substr($neg_string, 0, 1) %>">
									<% $entries{$key}{"aff_count"} %>-<% $entries{$key}{"neg_count"} %>
								</td>

								<td class="centeralign" title="Side Last Round">
									<% $entries{$key}{"last_side"} == 1 ? substr($aff_string, 0, 1) : "" %>
									<% $entries{$key}{"last_side"} == 2 ? substr($neg_string, 0, 1) : "" %>
								</td>

								<!-- Col 8, pullup status -->
								<td class="centeralign">
									<% $entries{$key}{'pulled_up'} %> / <% $entries{$key}{'got_pullup'} %>
								</td>

								<!-- Col 9, oppn -->
%								if ( $entries{$key}{'opponent'} > 0 ) {
									<td
										class   = "leftalign padleft nospace"
										colspan = "3"
										id      = "opponent_<% $key %>"
									>
										<a class="white full limit3 padtop padbottom nowrap"
											onclick="deletePanel(
												<% $entries{$key}{'panel'} %>,
												<% $key %>,
												<% $entries{$key}{'opponent'} %>
											)"
										>
											<% $entries{$entries{$key}{'opponent'}}{'code'} %>
										</a>

%									} elsif ( $entries{$key}{'opponent'} == -1 ) {

										<td
											class   = "nospace centeralign"
											colspan = "3"
											id      = "opponent_<% $key %>"
										>
											<a
												class   = "semibold greentext full hover"
												onclick = "deletePanel(
													<% $entries{$key}{'panel'} %>,
													<% $key %>,
													<% $entries{$key}{'opponent'} %>
												)"
											> BYE </a>

%									} else {
										<td
											class="centeralign nospace"
											id      = "opponent_<% $key %>"
										>
											<a
												class   = "smallbutton"
												onclick="savePairing( 2,
													<% $key %>,
													<% $entries{$key}{'wins'} %>,
													<% $entries{$key}{'seed'} %>
												)"
											>
												Choose
											</a>
%									}
								</td>

								<!-- Col 10, bye button -->
%								#set display flag for both columns 10 and 11
%								undef $display_flag;
%								$display_flag="hidden" if $entries{$key}{'opponent'} == -1 || $entries{$key}{'opponent'} > 0;

								<td
									class="centeralign nospace <% $display_flag %>"
									id    = "givebye_<% $key %>"
								>
%									my $warn = had_bye_already($key);
									<a
										id      = "negbyebutton<% $key %>"
										class   = "smallbutton"
										onclick = "givebye(
											<% $key %>,
											'<% $warn %>',
											<% $entries{$key}{'wins'} %>
										);">
										Bye
									</a>
								</td>

								<!-- Col 11, pull up/down button -->
								<td
									class="centeralign nospace <% $display_flag %>"
									id    = "pull_<% $key %>"
								>
									<a
										id      = "negpullbutton<% $key %>"
										class   = "smallbutton"
										onclick = "pullMeUpScotty('DOWN', <% $key %>);">
										Pull &darr;
									</a>
								</td>
							</tr>

%						}

%					}

				</tbody>
			</table>

%		} #don't show neg table in a non-sidelocked round

			<hr>
<%perl>
			foreach my $this_bracket (@brackets) {

				next if $this_bracket == -1;
				my $hidden = "hidden" if $this_bracket == $bracket;
</%perl>
				<div
					id      = "table_<% $this_bracket %>"
					bracket = "<% $this_bracket %>"
					class   = "unpaired unpaired_<% $this_bracket %> nospace <% $hidden ? "hidden" : "" %>"
				>

					<h4 class="martop">
						Unpaired entries in the <% $this_bracket %> bracket
					</h4>

					<& "/funclib/tablesorter.mas",
						table     => $this_bracket,
						nobuttons => 1
					&>

					<table id="<% $this_bracket %>" class="unpaired">

						<thead>

							<tr class="yellowrow">

								<th
									class="smaller"
									title="Entry Designation"
								>Code</th>

								<th
									class="smaller"
									title="Rounds Won"
								>W</th>

								<th
									class="smaller"
									title="Seed"
								>Seed</th>

%								if ($powermatch_method eq "sop") {
									<th
										class="smaller"
										title="Seed + Opponent Average Seed"
									>SOP</th>
%								}

								<th
									class="smaller"
									title="2nd Tiebreaker (usually Points)"
								>TB2</th>

								<th class="smaller" title="Average Opponent Seed">
									OppSd
								</th>

%								if ($event_settings{bracket_by_ballots}) {
									<th class="smaller" title="Average Opponent Ballots">
										OBall
									</th>
%								} else {
									<th class="smaller" title="Average Opp Seed & Avg Opp Wins">
										OppW
									</th>
%								}

								<th class="smaller" title="Side Due">
									Sides
								</th>

								<th class="smaller" title="Side Last Round">
									Last
								</th>

								<th
									class="smaller"
									title="Got Pulled Up/Debated The Pullup"
								>Pl-up</th>

								<th
									class   = "smaller nosort"
									colspan = "2"
								>Action</th>
							</tr>
						</thead>

						<tbody class="rightalign smallish" id="unpaired_<% $this_bracket %>">
<%perl>
							foreach my $key (
								sort {
									$entries{$a}->{'seed'} <=> $entries{$b}->{'seed'}
								} keys %entries
							) {

								next unless $key && $key > -1;
								next unless $entries{$key}{'placement'} == $this_bracket;
								next if $entries{$key}{'opponent'};
</%perl>

								<tr
									id        = "unpaired_<% $key %>"
									class     = "unpaired unpaired_<% $entries{$key}{"placement"} %> entryrows"
									bracket   = "<% $entries{$key}{"placement"} %>"
									entrycode = "<% $entries{$key}{"code"} %>"
									entrywins = "<% $entries{$key}{"wins"} %>"
								>

									<td class="nospace leftalign">
										<span
											class   = "padleft nowrap white padtop padbottom entrycodes"
											title = "<% $entries{$key}{'code'} %>"
										>
											<% $entries{$key}{'code'} %>
										</span>
									</td>

									<td class="centeralign padno">
										<% $entries{$key}{'wins'} %>
									</td>

									<td>
										<% $entries{$key}{'seed'} %>
									</td>

%									if ($powermatch_method eq "sop") {
										<td>
											<% sprintf("%.1f", $entries{$key}{'SOP'}) %>
										</td>
%									}
									<td>
										<% sprintf("%.1f", $entries{$key}{'next_tb'}) %>
									</td>

									<td class="centeralign">
										<% sprintf("%.1f", $entries{$key}{'opp_seed'}) %>
									</td>

									<td class="centeralign">
%										if ($event_settings{bracket_by_ballots}) {
											<% sprintf("%.1f", $entries{$key}{'opp_ballots'}) %>
%										} else {
											<% sprintf("%.1f", $entries{$key}{'opp_wins'}) %>
%										}
									</td>

									<td>
										<% sprintf("%.1f", $entries{$key}{'oppseed'}) %>
									</td>

									<td class="centeralign"
										title="<% $entries{$key}{"aff_count"}.substr($aff_string, 0, 1) %> <% $entries{$key}{"neg_count"}.substr($neg_string, 0, 1) %>">
										<% $entries{$key}{"aff_count"} %>-<% $entries{$key}{"neg_count"} %>
									</td>

									<td class="centeralign" title="Side Last Round">
										<% $entries{$key}{"last_side"} %>
									</td>

									<td class="centeralign">
										<% $entries{$key}{'pulled_up'} %>/<% $entries{$key}{'got_pullup'} %>
									</td>

									<td class="nospace centeralign">
										<a
											class   = "smallbutton"
											onclick = "pullMeUpScotty('UP', <% $key %>);"
										>
											Pull &uarr;
										</a>
									</td>

									<td class="nospace centeralign">
%										my $warn = had_bye_already($key);
										<a
											class   = "smallbutton"
											onclick = "givebye(
												<% $key %>,
												'<% $warn %>',
												<% $entries{$key}{'wins'} %>
											);">
											Bye
										</a>
									</td>

								</tr>

%							}	# end team loop

						</tbody>
					</table>
				</div>
%	 		}

		<h5>Current Pairings</h5>

		<&
			"/funclib/tablesorter.mas",
			table     => "pairings",
			nobuttons => 1
		&>

		<table id="pairings">

			<thead>
				<tr class="yellowrow">
					<th class="smaller">Bracket</th>
					<th class="smaller"><% $aff_string %></th>
					<th class="smaller"><% $neg_string %></th>
					<th class="smaller nosort" colspan="3">Action</th>
				</tr>
			</thead>

			<tbody class="smallish">
<%perl>

				my @panels = Tab::Panel->search( round => $round_id );

				foreach my $panel (sort {$b->bracket <=> $a->bracket} @panels) {

					my @ballots = Tab::Ballot->search( panel => $panel->id );

					my $aff = 0;
					my $neg = 0;
					my $bye = "";
					my $warning = "";

					foreach my $ballot (@ballots) {

						if ($ballot->side == 1) {
							$aff = $ballot->entry;
						}

						if ($ballot->side == 2) {
							$neg = $ballot->entry;
						}

						if ($panel->bye or $ballot->bye) {
							$aff = $ballot->entry;
							$bye = "BYE";
						}

						if ($ballot->side != 1 and $ballot->side != 2 and $bye eq "" and $aff == 0) {
							$aff = $ballot->entry;
							$warning = "SIDE ERROR";
						} elsif ($ballot->side != 1 and $ballot->side != 2 and $bye eq "" and $neg == 0) {
							$neg = $ballot->entry;
							$warning = "SIDE ERROR";
						}
					}
</%perl>

					<tr id="pair<% $panel->id %>">

						<td>
							<% $panel->bracket %>
						</td>

						<td>
							<span class="twothird nowrap leftalign">
								<% $entries{$aff}{'code'} %>
							</span>

							<span class="third <% $entries{$aff}{"wins"} ne $panel->bracket ? "semibold bluetext" : "" %>">
								<% $entries{$aff}{'wins'} %> <% $win_long_tag %> <% $warning %>
							</span>
						</td>

						<td>
%							if ($bye) {
								<span class="full padleft redtext semibold marno">
									<% $bye %>
								</span>
%							} elsif ($entries{$neg}) {
								<span class="twothird nowrap leftalign">
									<% $entries{$neg}{'code'} %>
								</span>
								<span class="third <% $entries{$neg}{"wins"} ne $panel->bracket ? "semibold bluetext" : "" %>">
									<% $entries{$neg}{'wins'} %> <% $win_long_tag %> <% $bye %> <% $warning %>
								</span>
%							}
						</td>

						<td class="centeralign nospace">
							<a
								class="buttonwhite redtext fa fa-trash fa-sm"
									onclick="deletePanel(
										<% $panel->id %>,
										<% $aff %>,
										<% $neg %>
									);"
							>
							</a>
						</td>
					</tr>
%				}
			</tbody>
			</table>
%		}

		<p id="entry_to_pair_entry" style="display:none;"></p>
		<p id="entry_to_pair_wins" style="display:none;"></p>
		<p id="entry_to_pair_preset_seed" style="display:none;"></p>
</div>

	<div class="menu">

		<div class="sidenote">

			<h4>Bracket <% $round->name %></h4>

			<div class="row centeralign">

				<form
					action = "manual_powermatch.mhtml?round_id = <% $round_id %>"
					method = "POST"
				>

					<select
						id       = "bracket_chooser"
						name     = "bracket"
						onchange = 'showBracket(this.value)'
						class    = "fixedmost"
					>
%						print "ROUND IS".$round->name."<br>";
%						foreach my $key (sort {$b <=> $a} keys %bracket_keys) {
							<option value="<% $key %>" <% $key == $bracket ? "selected" : "" %>>
								Bracket <% $key %>
							</option>
%						}
						<option
							value="-1"
							<% $bracket == -1 ? "selected" : "" %>
						>Show All</option>
					</select>
				</form>
				<noscript>
					<input
						class = "thin"
						type  = "submit"
						value = "Load"
					>
				</noscript>
			</div>

%			unless ($side_locked) {
				<div class="row">
					<span class="half">
						Entries in bracket
					</span>
					<span id="due_aff" class="half">
						<% $aff_teams_in_bracket %>
					</span>
				</div>

%			} else {
				<div class="row">
					<span class="half">
						Due <% $aff_string %> Entries
					</span>
					<span id="due_aff" class="half">
						<% $aff_teams_in_bracket %>
					</span>
				</div>

				<div class="row">
					<span class="half">
						Due <% $neg_string %> Entries
					</span>
					<span id="due_neg" class="half">
						<% $neg_teams_in_bracket %>
					</span>
				</div>
%			}

			<div class="row">
				<span class="half">
					Paired Already
				</span>
				<span id="paired_already" class="half">
					<% $paired_teams %>
				</span>
			</div>

			<div class="row">
				<span class="half">
					Left to Pair
				</span>
				<span id="left_to_pair" class="half">
					<% $unpaired_teams %>
				</span>
			</div>

			<a
				class="blue full"
				href="/panel/schemat/show.mhtml?round_id=<% $round_id %>"
			>
				<% $round->realname %> Schematic
			</a>

		</div>

		<div
			class="sidenote"
			id="bracket_changes"
			<% $bracket_change_display_str %>
		>

			<h4>Bracket Changes</h4>

				<a
					id    = "autopairlink"
					class = "yellow full"
					href  = "/panel/round/pair_bracket.mhtml?round_id=<% $round_id %>&bracket_to_pair=<% $bracket %>&fromjava=true">
					Auto-pair remaining entries
				</a>

				<a
					id    = "collapse_up"
					class = "yellow full"
					href  = "collapse_bracket.mhtml?round_id=<% $round %>&bracket=<% $bracket %>&pull_iterator=1&fromjava=true">
					Collapse <% $bracket %> into <% $bracket + 1 %> bracket
				</a>

				<a
					id    = "collapse_down"
					class = "yellow full"
					href="collapse_bracket.mhtml?round_id=<% $round %>&bracket=<% $bracket %>&pull_iterator=-1&fromjava=true">
					Collapse <% $bracket %> into <% $bracket - 1 %> bracket
				</a>

				<a
					id    = "dump_bracket"
					class = "martop dkred full"
					href="dump_bracket.mhtml?round_id=<% $round_id %>&bracket_to_pair=<% $bracket %>&fromjava=true"
				>
					Dump debates in <% $bracket %> bracket
				</a>

				<a
					id    = "dump_and_autopair_bracket"
					class = "martop dkred full"
					href  = "/panel/round/pair_bracket.mhtml?round_id=<% $round_id %>&bracket_to_pair=<% $bracket %>&delete_existing=Seaver"
				>
					Dump <% $bracket %> debates &amp; autopair
				</a>

		</div>

		<div class="sidenote">

			<h4>Round Changes</h4>

			<a
				class="yellow full"
				href="reset_bracket.mhtml?round_id=<% $round_id %>&winsonly=false&fromjava=true"
			>Reset brackets using current pairings</a>

			<a
				class="yellow full"
				href="reset_bracket.mhtml?round_id=<% $round_id %>&winsonly=true&fromjava=true"
			>Reset brackets to win totals</a>

%			unless ($side_locked) {
				<a
					class="yellow full"
					href="snake_sides.mhtml?round_id=<% $round_id %>"
				>Assign debate sides</a>
%			}

<!--			<a class="yellow full" href="index.mhtml">Exit and assign rooms (inactive) </a>
				<a class="yellow full" href="index.mhtml">Exit and assign judges (inactive)</a>
-->
			<a
				class="martop dkred full"
				href="round_dump.mhtml?round_id=<% $round_id %>&from_pairing=Redsox&fromjava=true"
			>Dump Whole Round</a>

		</div>

	</div>
