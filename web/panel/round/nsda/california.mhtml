<%args>
	$tourn
	$tourn_settings
	$person
	$round_id => undef
	$round    => undef
	$next     => undef
	$default  => undef
</%args>
<%init>

	$round = Tab::Round->retrieve($round_id) if $round_id;
	$m->abort unless $round;

	my $previous_round;

	if ($next) {

		$previous_round = $round;

		my $next_round = Tab::Round->search(
			event => $previous_round->event->id,
			name  => ($round->name + 1)
		)->first;

		if ($next_round > 0) {

			$round = $next_round;
			undef $next;

		} else {
			undef $round;
		}

	} else  {

		$previous_round = Tab::Round->search(
			event => $round->event->id,
			name  => ($round->name - 1)
		)->first;
	}

	my $event = $previous_round->event if $previous_round;
	$event = $round->event unless $event || (not defined $round);

	my $next_number = $round->name if $round;
	$next_number = ($previous_round->name + 1) unless $next_number;

	$m->abort unless $event;
	$m->abort unless $event->tourn == $tourn;

	my $method = $tourn_settings->{"nsda_speech_method"};
	my $district = Tab::District->retrieve($tourn_settings->{"nsda_district"});
	$method =~ s/[\D_]//g;

	$method = "Snaked Prelim" unless $district;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my %event_settings = $event->all_settings;
	my %round_settings = $round->all_settings if $round;

	my @panels = $round->panels if $round;

	my @tabs;
	my $entries_ref;

	if ($previous_round) {

		my @results = $m->comp(
			"/tabbing/results/order_entries.mas",
			round => $previous_round,
		) if $previous_round;

		$entries_ref = pop @results if @results;

		push @tabs, "results";
	}

	push @tabs, "create";

	if (@panels && scalar @panels > 0) {
		push @tabs, "checks";
	}

	unless ($default) {
		$default = "create";
		$default = "checks" if (@panels && scalar @panels > 0);
	}

	my %entries_by_id =
		map {$_->id => $_}
		$event->entries( active => 1) ;

	my $num_entries = keys(%entries_by_id);
	my $num_prelims;

	my $min_prelims = $event_settings{"nsda_min_prelims"};

	$num_prelims = 5;
	$num_prelims-- if $num_entries < 43;
	$num_prelims-- if $num_entries < 25;
	$num_prelims-- if $num_entries < 15;

	$num_prelims = $min_prelims if $num_prelims < $min_prelims;

	my $final_time;
	my $final_option;
	my $semi_time;
	my $break_time;

	my $num_judges = $method;

	if ($next_number > ($num_prelims + 1)) {
		$final_time++;
		$num_judges = 5;
	} elsif ($next_number > $num_prelims) {
		$semi_time++;
		$num_judges = 3;
	} elsif ($next_number == $num_prelims) {
		$break_time++;
		$num_judges = $method;
	}

	$final_option++ if $num_entries < 15 && $next_number > 2;

	my $limit;
	my $final_limit;
	my $final_limit_done;

	if ($semi_time || $final_time || $final_option) {

		foreach my $key (sort {$a <=> $b} keys %{${$entries_ref}{"by_place"}}) {

			$limit += scalar @{${${$entries_ref}{"by_place"}}{$key}}
				if $semi_time || $final_time;

			$final_limit += scalar @{${${$entries_ref}{"by_place"}}{$key}}
				unless $final_limit_done;

			last if $semi_time && $limit >= 12;
			last if $final_time && $limit >= 6;

			$final_limit_done++ if $final_option && $final_limit >= 6;

		}
	}

	$limit = $num_entries unless $limit;

	my (
		$total_quals, $alternates, $total_entries
	) = $m->comp("/funclib/nsda_qualifier_count.mas", event => $event);

	if ($method eq "Snaked Prelim") {

		$limit = $num_entries;
		undef $final_time;
		undef $final_option;
		undef $semi_time;

		$num_judges = $round->setting("num_judges") if $round;
		$num_judges = 1 unless $num_judges;

	}

</%init>

	<& 	"menu.mas",
		tourn          => $tourn,
		tourn_settings => $tourn_settings,
		round          => $round,
		event          => $event,
		whoami         => "california",
		round_settings => \%round_settings,
		event_settings => \%event_settings,
		district       => $district,
		total_quals    => $total_quals,
		total_entries  => $total_entries,
		alternates     => $alternates
	&>

	<div class="main">

		<div class="full nospace">

			<span class="half nospace">
				<h2><% $next ? "Create Next Round" : $round->realname %></h2>
			</span>

			<span class="half rightalign nospace">
				<h2><% $event->abbr %></h2>
			</span>

		</div>

%		unless (scalar @tabs < 2) {

			<&
				"/funclib/tabs.mas",
					tabs    => \@tabs,
					default => $default
			&>

%		}

%		if ($next_number > 1) {

			<div
				id    = "results"
				class = "results screens"
			>
				<h4><% $previous_round->realname %> Results</h4>
<%perl>
				$m->comp(
					"/tabbing/results/results_table.mas",
					round     => $previous_round
				);
</%perl>

			</div>
%		}

		<div
			id    = "create"
			class = "create screens"
		>

			<form
				action = "/panel/round/panel_master.mhtml"
				method = "post"
			>

			<input
				type  = "hidden"
				name  = "whoami"
				value = "california.mhtml"
			>

%			if ($final_option) {
				<input
					type     = "hidden"
					name     = "limit_to"
					id       = "final_limit"
					value    = "<% $final_limit %>"
					disabled = "true"
				>
%			}

			<input
				type  = "hidden"
				name  = "limit_to"
				id    = "normal_limit"
				value = "<% $limit %>"
			>

%			if ($next) {

				<h4>Create round <% $next_number %></h4>

				<input
					type  = "hidden"
					name  = "new_round"
					value = "<% $next_number %>"
				>

				<input
					type  = "hidden"
					name  = "event_id"
					value = "<% $event->id %>"
				>

%			} else {

				<h4>Section <% $round->realname %></h4>

				<input
					type  = "hidden"
					name  = "round_id"
					value = "<% $round->id %>"
				>

%			}

%			if (@panels) {

				<div class="ltyellow row marbottom">

					<div class="full warning centeralign">
						This round has already been sectioned!
					</div>

					<span class="threequarters rightalign">
						Type "I am certain" to confirm deleting existing
						sections and creating new ones:
					</span>

					<span class="quarter">
						<input
							type           = "text"
							size           = '16'
							name           = "certain"
							autocomplete   = "off"
							autocorrect    = "off"
							autocapitalize = "off"
							spellcheck     = "false"
						>
					</span>
				</div>

%			}

			<div class="row">

				<span class="eighth">
					Timeslot
				</span>

				<span class="threeeighths">

					<select
						name  = "timeslot_id"
						class = "fixedmed"
					>

<%perl>
					my $round_timeslot_id;

					if ($round && $round->timeslot) {
						$round_timeslot_id = $round->timeslot->id;
					}

					my $minimum_start = $previous_round->timeslot->end->set_time_zone($tz) if $previous_round;

					foreach my $timeslot ($tourn->timeslots) {

						my $start = $timeslot->start->set_time_zone($tz);
						next if $start < $minimum_start;

</%perl>

						<option
							value="<% $timeslot->id %>"
							<% $round_timeslot_id == $timeslot->id ? 'selected="true"' : "" %>
						><% $timeslot->name %> &ndash; <% Tab::niceshortdayt($start) %></option>
%					}
					</select>

				</span>

				<span class="quarter">
					Number of Judges
				</span>

				<span class="quarter nospace">

%					if ($num_judges == 5 && $method ne "Snaked Prelim") {

%						foreach my $nj (5, 7) {

							<label for="<% $nj %>_judges">
								<span class="third hover marno">
									<input
										type  = "radio"
										name  = "num_judges"
										value = "<% $nj %>"
										id    = "<% $nj %>_judges"
										<% $nj == $num_judges ? 'checked="true"' : "" %>
									>
									<% $nj %>
								</span>
							</label>
%						}

%					} else {

						<input
							type     = "number"
							name     = "num_judges"
							value    = "<% $num_judges %>"
							id       = "numjudges"
							<% $district  ? "readonly='true'" : "" %>
						>

%					}

				</span>

			</div>

%			my @rpools = $tourn->rpools;
%			my @jpools = $event->category->jpools;

%			if (@rpools) {

				<div class="row">

					<span class="fifth">
						Room Pool(s):
					</span>

					<span class="twofifths">
%						if ($round) {
%							foreach my $rpool ($round->rpools) {
								<% $rpool->name %>
%							}
%						}
					</span>

					<span class="tenth">
						Add:
					</span>
					<span class="quarter">
						<select
							name="rpool_id"
							class="fixedmed"
						>

							<option value=""></option>

%							foreach my $rpool (@rpools) {
								<option
									value="<% $rpool->id %>"
								><% $rpool->name %></option>
%							}

						</select>

%						if ($round) {
							</span>
%						}

					</span>

				</div>

%			}

%			if (@jpools) {

				<div class="row">

					<span class="fifth">
						Judge Pool(s):
					</span>

					<span class="twofifths">
%						if ($round) {
%							foreach my $jpool ($round->jpools) {
								<% $jpool->name %>
%							}
%						}

					</span>

					<span class="twofifths">
						<select
							name="jpool_id"
							class="fixedsmall"
						>
							<option value=""></option>
%							foreach my $jpool (@jpools) {
								<option
									value="<% $jpool->id %>"
								><% $jpool->name %></option>
%							}
						</select>

					</span>

				</div>
%			}

<%perl>

			my %entry_seeds = ();
			my $seeding_protocol;

			my $minpanelsize = $event_settings{"min_panel_size"};
			$minpanelsize = 5 unless $minpanelsize;

			my $maxpanelsize = $event_settings{"max_panel_size"};
			$maxpanelsize = 7 unless $maxpanelsize;

			my $defaultpanelsize = $event_settings{"default_panel_size"};
			$defaultpanelsize = 6 unless $defaultpanelsize;

			my $max_panel_number = POSIX::ceil($num_entries / $minpanelsize);

			my $min_panel_number = POSIX::ceil($num_entries / $maxpanelsize);

			my $default_panel_number = POSIX::ceil($num_entries / $defaultpanelsize);

</%perl>

			<div class="full row nospace">

%				if ($final_time || $semi_time) {
					<span class="centeralign quarter">
						<% $limit %> advance
					</span>
%				} else {
					<span class="centeralign sixth">
						<% $num_entries %> entries
					</span>
%				}

				<span class="sixth">

%					my $round_type = "hidden";

%					if ($final_option &! $final_time) {

						<script>

							function setPanels() {

								if ($("#finaltime").prop('checked') === true) {

									$(".section_options").prop('disabled', true);
									$("#finaltime_sections").prop('disabled', false);
									$("#final_limit").prop('disabled', false);
									$("#normal_limit").prop('disabled', true);
									$(".sections").addClass("hidden");
									$(".finaltime").removeClass("hidden");
									$("#numjudges").val("5");

								} else {

									$(".section_options").prop('disabled', false);
									$("#finaltime_sections").prop('disabled', true);
									$(".sections").removeClass("hidden");
									$(".finaltime").addClass("hidden");
									$("#final_limit").prop('disabled', true);
									$("#normal_limit").prop('disabled', false);
									$("#numjudges").val("<% $num_judges %>");
								}

							}

						</script>

%						$round_type = "radio";

						<label for="finaltime">
						<div class="marno padless full hover">

							<input
								type     = "<% $round_type %>"
								name     = "round_type"
								value    = "final"
								id       = "finaltime"
								onChange = "setPanels();"

							>
							Final

							<input
								id       = "finaltime_sections"
								type     = "hidden"
								name     = "num_panels"
								class    = "section_options"
								value    = "1"
								disabled = "true"
							>

						</div>
						</label>

						<label for="notfinaltime">
						<div class="marno padless full hover">

%					}

%					if ($final_time) {

						<input
							type  = "hidden"
							name  = "round_type"
							value = "final"
						>
						Final

						<input
							type  = "hidden"
							name  = "num_panels"
							value = "1"
						>

%					} elsif ($semi_time) {

						<input
							type     = "<% $round_type %>"
							name     = "round_type"
							value    = "semi"
							id       = "notfinaltime"
							onChange = "setPanels();"
							<% $round_type eq "radio" ? 'checked="true"' : "" %>
						>
						Semi

						<input
							type  = "hidden"
							name  = "num_panels"
							class = "section_options"
							value = "2"
						>

%					} elsif ($break_time) {

						<input
							type     = "<% $round_type %>"
							name     = "round_type"
							value    = "last_prelim"
							onChange = "setPanels();"
							id       = "notfinaltime"
							<% $round_type eq "radio" ? 'checked="true"' : "" %>
						>
						Last Prelim

%					} else {

						<input
							type     = "<% $round_type %>"
							name     = "round_type"
							value    = "prelim"
							id       = "notfinaltime"
							onChange = "setPanels();"
							<% $round_type eq "radio" ? 'checked="true"' : "" %>
						>
						Prelim <% $next_number %> of <% $num_prelims %>
%					}

%					if ($final_option &! $final_time) {
						</div>
%					}

				</span>

%				unless ($final_time || $semi_time) {

					<span
						class="rightalign eighth sections"
						title="
							Minimum size : <% $minpanelsize %>
							Default      : <% $defaultpanelsize %>
							Maximum      : <% $maxpanelsize %>
						"
					>
						# Sections:
					</span>

					<span
						class="third sections"
						title="
							Minimum size : <% $minpanelsize %>
							Default      : <% $defaultpanelsize %>
							Maximum      : <% $maxpanelsize %>
						"
					>
<%perl>
						my $last_panel_size;

						foreach my $num_panels ($min_panel_number .. $max_panel_number) {

							next unless $num_panels > 0;

							my $panel_size = POSIX::ceil($num_entries/$num_panels);

							my $entries_if_panels_full = $num_panels * $panel_size;

							my $num_short_panels = $entries_if_panels_full - $num_entries;

							my $num_full_panels = $num_panels - $num_short_panels;

							next if $num_short_panels < 0 or $num_full_panels <= 0;


							$last_panel_size = $panel_size;
</%perl>

							<label for="num_panels_<% $num_panels %>">

								<span class="fifth hover marno padleft padright">

									<input
										type  = "radio"
										name  = "num_panels"
										id    = "num_panels_<% $num_panels %>"
										value = " <% $num_panels %> "
										class = "section_options"
										<% ($num_panels == $default_panel_number) ? 'checked' : '' %>
									>

										<% $num_panels %>
								</span>

							</label>

%						}

					</span>
%				}

%				if ($final_option) {

					<span class="rightalign eighth finaltime hidden">
					</span>

					<span class="rightalign third finaltime hidden">
					</span>

%				}

				<span class="eighth">
					<input
						type  = "submit"
						value = "Create"
						class = "thin"
					>
				</span>

			</div>

			</form>

		</div>

%		my %seeds = %{$entries_ref->{'seed'}} if $entries_ref && $entries_ref->{'seed'};
%		undef %entries_by_id;

%		if (@panels) {

			<div
				id    = "checks"
				class = "checks screens"
			>

				<& "speech_checks.mas",
					round    => $round,
					tourn    => $tourn,
					person   => $person,
					whoami   => "california",
					seeds    => \%seeds,
					strength => ${$entries_ref}{"tiebreak"}{"1"}
				&>

			</div>

%		}

	</div>
