<%args>
	$tourn
	$tourn_settings
	$person
	$round_id
	$next    => undef
	$default => undef
	$manual  => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);

	$m->abort unless $round;

	my $final_protocol = Tab::Protocol->search(
		tourn => $tourn->id,
		name => "Debate Final"
	)->first;

	my $previous_round;

	if ($next) {

		$previous_round = $round;

		my $next_round = Tab::Round->search(
			event => $previous_round->event->id,
			name  => ($round->name + 1)
		)->first;

		if ($next_round > 0) {

			$round = $next_round;
			undef $next;

		} else {
			undef $round;
		}

	} else  {

		$previous_round = Tab::Round->search(
			event => $round->event->id,
			name  => ($round->name - 1)
		)->first;
	}

	my $event = $previous_round->event if $previous_round;
	$event = $round->event
		unless $event
		|| (not defined $round);

	my $next_number = $round->name if $round;

	$next_number = ($previous_round->name + 1)
		unless $next_number;

	$m->abort unless $event;
	$m->abort unless $event->tourn == $tourn;

	my $weekend_id = $event->setting("weekend");
	my $weekend = Tab::Weekend->retrieve($weekend_id)
		if $weekend_id;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my %event_settings = $event->all_settings;
	my %round_settings = $round->all_settings if $round;

	my @panels = $round->panels if $round;

	my @tabs;
	my $entries_ref;

	if ($previous_round) {

		my @results = $m->comp(
			"/tabbing/results/order_entries.mas",
			round => $previous_round,
		) if $previous_round;

		$entries_ref = pop @results if @results;

		push @tabs, "results";
	}

	push @tabs, "create";
	my $pairing_log = $round->setting("nsda_pairing_log") if $round;
	push @tabs, "log" if $pairing_log;

	if (@panels && scalar @panels > 0) {
		push @tabs, "checks";
	}

	unless ($default) {
		$default = "create";
		$default = "checks"
			if (@panels && scalar @panels > 0);
	}

	my @entries;

	unless ($round && $round->name == 1) {
		@entries = $m->comp("/funclib/round_entries.mas", round => $previous_round, active => 1);
	}

	unless (@entries) {
		@entries = $event->entries( active => 1);
	}

	my %entries_by_id = map {$_->id => $_} @entries;

	undef @entries;
	my $num_entries = scalar(keys(%entries_by_id));

	my %outs;
	my $num_outs;
	my $district;

	my $total_quals;
	my $alternates;
	my $total_entries;

	my $threshold = 2;
	my $threshold_direction;

	my $first_elim;

	if ($tourn_settings->{"nsda_district"}) {

		$district = Tab::District->retrieve(
			$tourn_settings->{"nsda_district"}
		);

		($total_quals, $alternates, $total_entries) =
			$m->comp(
				"/funclib/nsda/qualifier_count.mas",
				event => $event,
				round => $round
			);

	}  elsif ($tourn_settings->{"nsda_nats"} && $event_settings{'supp'}) {

		# Extemp debate is double elimination out of prelims
		$threshold = $event_settings{"clearing_threshold"};
		$threshold = "2";
		undef $threshold_direction;

	}  elsif ($tourn_settings->{"nsda_nats"}) {

		# This aims us towards a final round at nationals

		$total_quals = 2;
		$alternates = 0;

		if ($previous_round
			&& ($previous_round->type eq "prelim" || $previous_round->type eq "highlow")
		) {
			$first_elim++;
			$threshold = $event_settings{"clearing_threshold"};
			$threshold = "8" unless $threshold;
			$threshold_direction = "desc";
		}

	}

</%init>

	<& 	"menu.mas",
		tourn          => $tourn,
		tourn_settings => $tourn_settings,
		round          => $round,
		event          => $event,
		whoami         => "debate",
		round_settings => \%round_settings,
		event_settings => \%event_settings,
		district       => $district,
		total_quals    => $total_quals,
		total_entries  => $total_entries,
		alternates     => $alternates
	&>

	<div class="main">

		<div class="full nospace">
			<span class="half nospace">
				<h2><% $next ? "Create Next Round" : $round->realname %></h2>
			</span>

			<span class="half rightalign nospace">
				<h2><% $event->abbr %></h2>
			</span>
		</div>

%		unless (scalar @tabs < 2) {
			<&
				"/funclib/tabs.mas",
					tabs    => \@tabs,
					default => $default
			&>
%		}

%		if ($next_number > 1) {

			<div
				id    = "results"
				class = "results screens"
			>

				<div class="full nospace">
					<span class="twothirds nospace">
						<h4><% $previous_round->realname %> Results</h4>
					</span>

					<span
						id="<% $previous_round->id %>_buttonarea"
						class="third nospace rightalign"
					>
				</div>
<%perl>
				%outs = $m->comp(
					"/tabbing/results/results_table.mas",
					round               => $previous_round,
					threshold           => $threshold,
					threshold_direction => $threshold_direction,
					printok             => 1,
				);

				$num_outs = scalar(keys %outs);
				$num_entries -= $num_outs;

				if ($total_quals == $num_entries) {

					# Hurrah, you are done!

					if ($tourn_settings->{"nsda_nats"}) {

						# Find an existing final if one exists;

						my $final = $event->rounds(type => "final")->first;

						unless ($final) {
							$round->type("final");
							$round->protocol($final_protocol);
							$round->update();
							$final = $round;
						}

						my @killme;

						foreach my $other ($event->rounds(type => "elim")) {
							next if $other->id == $final->id;
							next if $other->name <= $previous_round->name;
							push @killme, $other;
						}

						$round = $final;

						foreach my $victim (@killme) {
							$victim->delete();
						}

						$m->comp("/funclib/renumber_rounds.mas", event => $event);

						undef $next;

					} else {

						my $msg = "You have reached the end! Qualifiers determined.";
						$m->redirect("/panel/schemat/show.mhtml?round_id=".$previous_round->id."&msg=$msg");
					}
				}
</%perl>

			</div>
%		}

		<div
			id    = "create"
			class = "create screens"
		>

%		if (not defined $manual) {

			<form
				action = "/panel/round/panel_master.mhtml"
				method = "post"
			>

			<input
				type  = "hidden"
				name  = "whoami"
				value = "debate.mhtml"
			>

			<input
				type  = "hidden"
				name  = "nats_elims"
				value = "1"
			>

%			if ($next) {

				<h4>Create round <% $next_number %></h4>

				<input
					type  = "hidden"
					name  = "new_round"
					value = "<% $next_number %>"
				>

				<input
					type  = "hidden"
					name  = "event_id"
					value = "<% $event->id %>"
				>

%			} else {

				<h4>Section <% $round->realname %></h4>

				<input
					type  = "hidden"
					name  = "round_id"
					value = "<% $round->id %>"
				>

%			}

%			if (@panels) {
				<div class="row blueborderbottom marbottom">
					<div class="full warning centeralign padtop">
						This round has already been sectioned!
					</div>

					<span class="threequarters rightalign">
						Type "I am certain" to confirm deleting existing
						sections and creating new ones:
					</span>

					<span class="quarter">
						<input
							type           = "text"
							size           = '16'
							name           = "certain"
							autocomplete   = "off"
							autocorrect    = "off"
							autocapitalize = "off"
							spellcheck     = "false"
						>
					</span>
				</div>
%			}

			<div class="full row marvertno flexrow">
				<span class="eighth semibold padleft">
					Timeslot
				</span>

				<span class="threeeighths">

					<select
						name  = "timeslot_id"
						class = "fixedmed"
					>
<%perl>
					my $round_timeslot_id;

					if ($round && $round->timeslot) {
						$round_timeslot_id = $round->timeslot->id;
					}

					my $minimum_start = $previous_round->timeslot->end->set_time_zone($tz)
						if $previous_round;

					foreach my $timeslot ($tourn->timeslots) {

						my $start = $timeslot->start->set_time_zone($tz);
						next if $start < $minimum_start;
</%perl>
						<option
							value="<% $timeslot->id %>"
							<% $round_timeslot_id == $timeslot->id ? 'selected="true"' : "" %>
						><% $timeslot->name %> &ndash; <% Tab::niceshortdayt($start) %></option>
%					}
					</select>
				</span>

				<span class="quarter semibold">
					Number of Judges
				</span>

				<span class="quarter">
<%perl>
					if ($next_number > 1) {

						my $judge_min = 1;
						my $judge_default;

						unless ($tourn_settings->{"nsda_nats"}) {

							$judge_min = 3 if $num_entries < 9 && $next_number > 2;

							foreach my $other_round ($event->rounds) {

								next if $other_round->name >= $next_number;
								my $num_judges = $other_round->setting("num_judges");

								$judge_min = $num_judges if $num_judges > $judge_min;
							}


						} elsif ($round && $round->type eq "elim") {
							$judge_min = 3;
						}

						if ($judge_default < $judge_min) {
							$judge_default = $judge_min;
						}
</%perl>

						<input
							type  = "number"
							name  = "num_judges"
							step  = 2
							min   = "<% $judge_min %>"
							value = "<% $judge_default %>"
						>

%					} else {

						<label for="1">
							<span class="hover half">
								<input
									type     = "radio"
									name     = "num_judges"
									value    = "1"
									checked  = "true"
								>
								1
							</span>
						</label>

						<label for="3">
							<span class="hover half">
								<input
									type     = "radio"
									name     = "num_judges"
									value    = "3"
								>
								3
							</span>
						</label>

%					}
				</span>

			</div>

%			my @rpools = $tourn->rpools;

%			if (@rpools) {

				<div class="full row marvertno flexrow">

					<span class="fifth semibold padleft">
						Room Pool(s):
					</span>

					<span class="twofifths">
%						if ($round) {
%							foreach my $rpool ($round->rpools) {
								<div class='full padless marno'>
									<% $rpool->name %>
								</div>
%							}
%						}
					</span>

					<span class="twofifths">

						<select
							name="rpool_id"
							class="fixedsmall"
						>

							<option value=""></option>

%							foreach my $rpool (@rpools) {
								<option
									value="<% $rpool->id %>"
								><% $rpool->name %></option>
%							}

						</select>

					</span>

				</div>

<%perl>
			}

			Tab::JPool->set_sql(event => "
				select jpool.*
				from jpool, event
				where event.id = ?
				and event.category = jpool.category
				order by jpool.name
			");

			my @jpools = Tab::JPool->search_event($event);

			if (@jpools) {
</%perl>

				<div class="full row marvertno flexrow">

					<span class="fifth semibold padleft">
						Judge Pool(s):
					</span>

					<span class="twofifths">
%						if ($round) {
%							foreach my $jpool ($round->jpools) {
								<div class='full padless marno'>
									<% $jpool->name %>
								</div>
%							}
%						}
					</span>

					<span class="twofifths">
						<select
							name="jpool_id"
							class="fixedsmall"
						>

							<option value=""></option>
%							foreach my $jpool (@jpools) {
								<option
									value="<% $jpool->id %>"
								><% $jpool->name %></option>
%							}
						</select>

					</span>

				</div>
%			}

<%perl>
			my $final_time;

			if ($next_number > 2) {

				my @seed_results = $m->comp(
					"/tabbing/results/order_entries.mas",
					round        => $previous_round
				);

				$entries_ref = pop @seed_results if @seed_results;
			}

			if ($tourn_settings->{"nsda_nats"}) {
				if ($round->type eq "final") {
					$final_time++;
				}
			}

</%perl>

%			if ($next_number > 2) {

				<input
					type  = "hidden"
					name  = "limit_to"
					value = "<% $num_entries %>"
				>

%			}

			<div class="full row padno marvertno">

				<span class="centeralign sixth semibold bluetext">
					<% $num_entries %> entries
				</span>

				<span class="centeralign eighth redtext semibold">

%					if ($final_time) {

						<input
							type  = "hidden"
							name  = "round_type"
							value = "final"
						>
						Final

%					} elsif ($next_number > 2) {

						<input
							type  = "hidden"
							name  = "round_type"
							value = "prelim"
						>
						Elim

%					} else {

						<input
							type  = "hidden"
							name  = "round_type"
							value = "prelim"
						>
						Prelim
%					}

				</span>

				<span class="rightalign eighth semibold">
					Flights:
				</span>

				<span class="quarter">

%					if ($tourn_settings->{"nsda_nats"}) {

						<input
							type  = "number"
							name  = "num_flights"
							value = "1"
							min   = "1"
							max   = "99"
							size  = "4"
						>

%					} else {

						<label for="1">

							<span class="half hover centeralign">

								<input
									type    = "radio"
									name    = "num_flights"
									value   = "1"
									id      = "1"
									checked = "true"
								> 1
							</span>

						</label>

						<label for="2">

							<span class="half hover centeralign">

								<input
									type  = "radio"
									name  = "num_flights"
									value = "2"
									id    = "2"
								> 2
							</span>

						</label>
%					}

				</span>

				<span class="quarter rightalign padrightmore">
					<input
						type  = "submit"
						value = "Create"
						class = "thinnish"
					>
				</span>
			</div>

			</form>
<%perl>
			if ($num_outs > 0 && (not defined $first_elim) ) {

				my @codes;
				my @ids;

				foreach my $out (keys %outs) {

					unless ($entries_by_id{$out}) {
						# How the hell did someone break this?
						delete $entries_by_id{$out};

					} else {
						push @codes, $entries_by_id{$out}->code;
						push @ids, $out;
					}
				}

				@codes = sort {$a cmp $b} @codes;
				@codes = sort {$a <=> $b} @codes;
				@ids = sort {$a <=> $b} @ids;

				my $downcodes = join(',', @codes);
				my $downids = join(',', @ids);

</%perl>

				<div class="full nospace padtopmore borderbottom">

					<hr />

					<span class="twothirds nospace martop marbottom">
						<h4 class="nospace">
							Down &amp; outs:
						</h4>
					</span>

					<span
						id    = "downs_buttonarea"
						class = "nospace third rightalign"
					>

%						my $warning = "This will post the downs and outs listed below publicly on the web.  Be sure they are correct before doing so!  You will have to change each entry individually if you make a mistake.";

						<form
							action = "publish_downs.mhtml"
							method = "post"
							id     = "postsubmit"
							class  = "nospace"
						>

							<input
								type  = "hidden"
								name  = "round_id"
								value = "<% $round ? $round->id : "" %>"
							>

							<input
								type  = "hidden"
								name  = "previous_round_id"
								value = "<% $previous_round->id %>"
							>

							<input
								type  = "hidden"
								name  = "downs"
								value = "<% $downids %>"
							>

							<button
								type  = "submit"
								title = "Post on Web"
								class = "buttonwhite purpletext fa-sm fa fa-share-alt marleft"
								style = "margin-top: -1px; margin-right: -4px;"
							></button>

						</form>

						<script>

							$("#postsubmit").submit(function(event){

								event.preventDefault();

								alertify.confirm("<% $warning %>", function (e) {
									if (e) {
										$("#postsubmit")[0].submit();
									} else {
										alertify.error("Cold feet eh?  Extra checking never hurt.");
									}
								});
							});

						</script>

						<form
							action = "print_downs.mhtml"
							method = "post"
							target = "_blank"
							class  = "nospace"
						>

							<input
								type  = "hidden"
								name  = "round_id"
								value = "<% $previous_round->id %>"
							>

							<input
								type  = "hidden"
								name  = "downs"
								value = "<% $downcodes %>"
							>

							<button
								type  = "submit"
								title = "Public Posting"
								class = "buttonwhite fa-sm fa fa-file-o bluetext marleft"
								style = "margin-top: -1px; margin-right: -4px;"
							></button>

						</form>

					</span>


				<& "/funclib/tablesorter.mas",
					table => "downs"
				&>

				<table id="downs">

					<thead>

						<tr class="yellowrow">
							<th>Name</th>
							<th>Code</th>
							<th>School</th>
						</tr>

					</thead>

					<tbody>
<%perl>
				foreach my $out (keys %outs) {

					# How do people manage to screw this up?  Seriously!?

					my $id = eval {
						return $entries_by_id{$out};
					};

					unless ($id) {
						delete $entries_by_id{$out};
					}
				}

				foreach my $out_id (
					sort {$entries_by_id{$a}->code <=> $entries_by_id{$b}->code}
					keys %outs
				) {

</%perl>

					<tr>

						<td class="nospace">
							<a
								class  = "white full marno"
								target = "_blank"
								href   = "/register/entry/edit.mhtml?entry_id=<% $out_id %>"
							>
								<% $entries_by_id{$out_id}->code %>
							</a>
						</td>

						<td>
							<% $entries_by_id{$out_id}->name %>
						</td>

						<td>
							<% $entries_by_id{$out_id}->schoolname %>
						</td>

					</tr>

%				}

				</tbody>

				</table>

			</div>

%			} elsif ($first_elim) {

				<div class="full nospace bordertop padtopmore borderbottom">

					<span class="half">
						<h4>
							Clearing Entries
						</h4>
					</span>

					<span class="half rightalign">
						<h5>
							<% $threshold %>+ ballots to clear
						</h5>
					</span>

<%perl>

				my $counter;

				foreach my $entry_id (
					sort {$entries_by_id{$a}->code <=> $entries_by_id{$b}->code}
					keys %entries_by_id
				) {

					next if $outs{$entry_id};

					if ($counter < 1) {
</%perl>
						</div>
						<div class="full row nospace">
%						$counter = 3;
%					}

%					$counter--;

					<span class="third padtop padbottom">
						<% $entries_by_id{$entry_id}->code %> &mdash;
						<% $entries_by_id{$entry_id}->name %>
					</span>
%				}

				</div>
<%perl>
			}

		} else {

			if ($next_number && (not defined $round)) {

				my $site_id = $previous_round->site->id
					if $previous_round
					&& $previous_round->site;

				$site_id = $weekend->site->id
					unless $site_id
					&& (not defined $weekend);

				my $protocol = Tab::Protocol->search(
					name => "DEB",
					tourn => $tourn->id
				)->first;

				$round = Tab::Round->create({
					type         => "prelim",
					name         => $next_number,
					flighted     => 1,
					event        => $event->id,
					site         => $site_id,
					protocol => $protocol->id
				});
			}
</%perl>
			<& "pair_powermatch.mas",
					round          => $round,
					tourn          => $tourn,
					person         => $person,
					tourn_settings => $tourn_settings,
			&>
%		}

		</div>

%		if ($pairing_log)  {
			<div
				id    = "log"
				class = "log screens"
			>
				<h4>Log of pairing steps:</h4>
				<% $pairing_log %>
			</div>
%		}

%		if (@panels) {

%			undef %entries_by_id;

			<div
				id    = "checks"
				class = "checks screens"
			>
				<& "debate_checks.mas",
					round          => $round,
					previous_round => $previous_round,
					tourn          => $tourn,
					tourn_settings => $tourn_settings,
					person         => $person,
					bracket        => ${$entries_ref}{"tiebreak"}{"1"}
				&>

			</div>
%		}
	</div>
