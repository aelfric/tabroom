<%args>
	$tourn
	$tourn_settings
	$person
	$round_id
	$next    => undef
	$default => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	$m->abort unless $round;

	my $previous_round;

	if ($next) {

		$previous_round = $round;

		my $next_round = Tab::Round->search(
			event => $previous_round->event->id,
			name  => ($round->name + 1)
		)->first;

		if ($next_round > 0) {

			$round = $next_round;
			undef $next;

		} else {
			undef $round;
		}

	} else  {

		$previous_round = Tab::Round->search(
			event => $round->event->id,
			name  => ($round->name - 1)
		)->first;
	}

	my $event = $previous_round->event if $previous_round;
	$event = $round->event unless $event || (not defined $round);

	my $next_number = $round->name if $round;
	$next_number = ($previous_round->name + 1) unless $next_number;

	$m->abort unless $event;
	$m->abort unless $event->tourn == $tourn;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my %event_settings = $event->all_settings;
	my %round_settings = $round->all_settings if $round;

	my @panels = $round->panels if $round;

	my @tabs;

	if ($previous_round) {
		push @tabs, "results";
	}

	push @tabs, "create";

	if (@panels && scalar @panels > 0) {
		push @tabs, "checks";
	}

	unless ($default) {
		$default = "create";
		$default = "checks" if (@panels && scalar @panels > 0);
	}

	my %outs;
	my %entries_by_id = ();

	if ($previous_round) {
		%entries_by_id =
			map {$_->id => $_}
			$m->comp("/funclib/round_entries.mas",
				round => $previous_round,
				active => 1
			);

	} else {
		%entries_by_id =
			map {$_->id => $_}
			$event->entries( active => 1) ;

	}

	my $district = Tab::District->retrieve($tourn_settings->{"nsda_district"});

	my ($total_quals, $alternates, $total_entries) =
		$m->comp("/funclib/nsda_qualifier_count.mas", event => $event);

</%init>

	<& 	"menu.mas",
		tourn          => $tourn,
		tourn_settings => $tourn_settings,
		round          => $round,
		event          => $event,
		whoami         => "doubledown",
		round_settings => \%round_settings,
		event_settings => \%event_settings,
		district       => $district,
		total_quals    => $total_quals,
		total_entries  => $total_entries,
		alternates     => $alternates
	&>

	<div class="main">

		<div class="full nospace">

			<span class="half nospace">
				<h2><% $next ? "Create Next Round" : $round->realname %></h2>
			</span>

			<span class="half rightalign nospace">
				<h2><% $event->abbr %></h2>
			</span>

		</div>

%		unless (scalar @tabs < 2) {
			<&
				"/funclib/tabs.mas",
					tabs    => \@tabs,
					default => $default
			&>
%		}

%		if ($next_number > 1) {

			<div
				id    = "results"
				class = "results screens"
			>
				<span class="threequarters">
					<h4><% $previous_round->realname %> Results</h4>
				</span>

				<span
					class="quarter rightalign"
					id="<% $previous_round->id %>_buttonarea"
				>
				</span>

<%perl>
				%outs = $m->comp(
					"/tabbing/results/results_table.mas",
					round     => $previous_round,
					printok   => 1,
					threshold => 2
				);
</%perl>

			</div>
%		}

		<div
			id    = "create"
			class = "create screens"
		>

			<form
				action = "/panel/round/panel_master.mhtml"
				method = "post"
			>

			<input
				type  = "hidden"
				name  = "whoami"
				value = "doubledown.mhtml"
			>

%			if ($next) {

				<h4>Create round <% $next_number %></h4>

				<input
					type  = "hidden"
					name  = "new_round"
					value = "<% $next_number %>"
				>

				<input
					type  = "hidden"
					name  = "event_id"
					value = "<% $event->id %>"
				>

%			} else {

				<h4>Section <% $round->realname %></h4>

				<input
					type  = "hidden"
					name  = "round_id"
					value = "<% $round->id %>"
				>

%			}

%			if (@panels) {

				<div class="row">

					<div class="full warning centeralign">
						This round has already been sectioned!
					</div>

					<span class="threequarters rightalign">
						Type "I am certain" to confirm deleting existing
						sections and creating new ones:
					</span>

					<span class="quarter">
						<input
							type           = "text"
							size           = '16'
							name           = "certain"
							autocomplete   = "off"
							autocorrect    = "off"
							autocapitalize = "off"
							spellcheck     = "false"
						>
					</span>
				</div>

%			}

			<div class="row">

				<span class="eighth">
					Timeslot
				</span>

				<span class="threeeighths">

					<select
						name  = "timeslot_id"
						class = "fixedmed"
					>

<%perl>
					my $round_timeslot_id;

					if ($round && $round->timeslot) {
						$round_timeslot_id = $round->timeslot->id;
					}

					my $minimum_start = $previous_round->timeslot->end->set_time_zone($tz) if $previous_round;

					foreach my $timeslot ($tourn->timeslots) {

						my $start = $timeslot->start->set_time_zone($tz);
						next if $start < $minimum_start;

</%perl>

						<option
							value="<% $timeslot->id %>"
							<% $round_timeslot_id == $timeslot->id ? 'selected="true"' : "" %>
						><% $timeslot->name %> &ndash; <% Tab::niceshortdayt($start) %></option>
%					}
					</select>

				</span>

				<span class="quarter rightalign">
					Number of Judges
				</span>

				<span class="quarter">

%					if ($next_number > 2 ) {

						<input
							type     = "number"
							name     = "num_judges"
							value    = "3"
							readonly = "true"
						>

%					} else {

						<span
							class = "half hover centeralign"
							label = "judge1"
						>

							<input
								type    = "radio"
								name    = "num_judges"
								value   = "1"
								id      = "judge1"
								checked = "true"
							>
							1

						</span>

						<span
							class = "hover half centeralign"
							label = "judge3"
						>

							<input
								type  = "radio"
								name  = "num_judges"
								value = "3"
								id    = "judge3"
							>
							3
						</span>

%					}
				</span>

			</div>

%			my @rpools = $tourn->rpools;
%			my @jpools = $event->category->jpools;

%			if (@jpools || @rpools) {

				<div class="row">

%					if (@rpools) {
						<span class="sixth semibold">
							Room Pool(s):
						</span>

						<span class="third">
%							if ($round) {
%								foreach my $rpool ($round->rpools) {
									<div class='full semibold'>
										<% $rpool->name %>
									</div>
%								}
%							}

							<select
								name="rpool_id"
								class="fixedmed"
							>
								<option value=""></option>

%								foreach my $rpool (@rpools) {
									<option
										value="<% $rpool->id %>"
									><% $rpool->name %></option>
%								}

							</select>

						</span>

%					}

%					if (@jpools) {

						<span class="sixth semibold">
							Judge Pool(s):
						</span>

						<span class="third">
%							if ($round) {
%								foreach my $jpool ($round->jpools) {
									<div class='full'>
										<% $jpool->name %>
									</div>
%								}
%							}

							<select
								name="jpool_id"
								class="fixedmed"
							>
								<option value=""></option>
%								foreach my $jpool (@jpools) {
									<option
										value="<% $jpool->id %>"
									><% $jpool->name %></option>
%								}
							</select>
						</span>
%					}

				</div>
%			}

<%perl>

			my $final_time;

			my $minpanelsize;
			my $maxpanelsize;
			my $defaultpanelsize;
			my $max_panel_number;
			my $min_panel_number;
			my $num_entries = scalar(keys %entries_by_id);
			my $num_outs = scalar(keys %outs);

			$num_entries -= $num_outs;

			my %entry_seeds = ();
			my $seeding_protocol;

			my $entries_ref;

			if ($num_entries <= 7 && $previous_round && $previous_round->name > 1) {

				$final_time++;

			} else {

				$minpanelsize = $event_settings{"min_panel_size"};
				$minpanelsize = 4 unless $minpanelsize;

				$maxpanelsize = $event_settings{"max_panel_size"};
				$maxpanelsize = 7 unless $maxpanelsize;

				$defaultpanelsize = $event_settings{"default_panel_size"};
				$defaultpanelsize = 6 unless $defaultpanelsize;

				$max_panel_number = POSIX::floor($num_entries / $minpanelsize);

				$min_panel_number = POSIX::ceil($num_entries / $maxpanelsize);

				$defaultpanelsize = POSIX::ceil($num_entries / $min_panel_number)
					if ($num_entries / $minpanelsize) < $min_panel_number;

				$defaultpanelsize = POSIX::ceil($num_entries / $min_panel_number)
					if $min_panel_number
					&& (($num_entries / $min_panel_number) < $min_panel_number);

				if ($next_number > 2) {

					$seeding_protocol = Tab::Protocol->search(
						tourn => $tourn,
						name  => "IE Prelim Seeding"
					)->first;

					my @seed_results = $m->comp(
						"/tabbing/results/order_entries.mas",
						round        => $previous_round,
						protocol => $seeding_protocol
					);

					$entries_ref = pop @seed_results if @seed_results;

				}

			}

</%perl>

%			if ($next_number > 2) {

				<input
					type  = "hidden"
					name  = "seed_basis"
					value = <% $seeding_protocol %>
				>

				<input
					type  = "hidden"
					name  = "limit_to"
					value = "<% $num_entries %>"
				>

%			}

			<div class="full row nospace">

				<span class="centeralign sixth">
					<% $num_entries %> entries
				</span>

				<span class="centeralign eighth">

%					if ($final_time) {

						<input
							type  = "hidden"
							name  = "round_type"
							value = "final"
						>
						Final

						<input
							type  = "hidden"
							name  = "num_panels"
							value = "1"
						>

%					} elsif ($next_number > 2) {

						<input
							type  = "hidden"
							name  = "round_type"
							value = "elim"
						>
						Elim

%					} else {

						<input
							type  = "hidden"
							name  = "round_type"
							value = "prelim"
						>
						Prelim
%					}
				</span>

%				unless ($final_time) {

					<span
						class="rightalign eighth"
						title="
							Minimum size: <% $minpanelsize %>
							Default: <% $defaultpanelsize %>
							Maximum: <% $maxpanelsize %>
						"
					>
						# Sections:
					</span>

					<span
						class="twofifths"
						title="
							Minimum size: <% $minpanelsize %>
							Default: <% $defaultpanelsize %>
							Maximum: <% $maxpanelsize %>
						"
					>
<%perl>
						my $last_panel_size;

						foreach my $num_panels ($min_panel_number .. $max_panel_number) {

							next unless $num_panels > 0;

							my $panel_size = POSIX::ceil($num_entries/$num_panels);
							my $entries_if_panels_full = $num_panels * $panel_size;
							my $num_short_panels = $entries_if_panels_full - $num_entries;
							my $num_full_panels = $num_panels - $num_short_panels;

							next if $num_short_panels < 0 or $num_full_panels <= 0;

							$defaultpanelsize = $panel_size
								if $last_panel_size > $defaultpanelsize
								&& $panel_size < $defaultpanelsize;

							$last_panel_size = $panel_size;
</%perl>

							<label for="num_panels_<% $num_panels %>">

								<span class="fifth hover marno padleft padright">

									<input
										type  = "radio"
										name  = "num_panels"
										id    = "num_panels_<% $num_panels %>"
										value = " <% $num_panels %> "
										<% ($panel_size == $defaultpanelsize) ? 'checked' : '' %>
									>

										<% $num_panels %>
								</span>

							</label>

%						}

					</span>
%				}

				<span class="eighth">
					<input
						type  = "submit"
						value = "Create"
					>
				</span>

			</div>

			</form>
<%perl>

			if ($num_outs > 0) {


				my @codes;
				my @ids;

				my $alert_out;

				foreach my $out (keys %outs) {

					unless ($entries_by_id{$out}) {
						$entries_by_id{$out} = Tab::Entry->retrieve($out);
					}

					unless ($entries_by_id{$out}) {
						$alert_out = "You have an entry ID $out who was not marked as competing the previous round?";
					} else {

						my $codestring = $entries_by_id{$out}->code unless $event_settings{"schem_designation"} eq "names";
						$codestring .= "-" if $codestring;
						$codestring .= $entries_by_id{$out}->name unless $event_settings{"schem_designation"} eq "codes";
						push @codes, $codestring;
						push @ids, $out;
					}
				}

				@codes = sort @codes;
				my $downcodes = join(',', @codes);
				my $downids = join(',', @ids);

</%perl>

			<div class="full nospace padtopmore borderbottom">

				<hr />

				<div class="full centeralign redtext semibold">
					<% $alert_out %>
				</div>


				<span class="twothirds nospace martop marbottom">
					<h4 class="nospace">
						Down &amp; outs:
					</h4>
				</span>

				<span
					id    = "downs_buttonarea"
					class = "nospace third rightalign"
				>

%					my $warning = "This will post the downs and outs listed below publicly on the web.  Be sure they are correct before doing so!  You will have to change each entry individually if you make a mistake.";

					<form
						action = "publish_downs.mhtml"
						method = "post"
						id     = "postsubmit"
						class  = "nospace"
					>

						<input
							type  = "hidden"
							name  = "round_id"
							value = "<% $round ? $round->id : "" %>"
						>

						<input
							type  = "hidden"
							name  = "previous_round_id"
							value = "<% $previous_round->id %>"
						>

						<input
							type  = "hidden"
							name  = "downs"
							value = "<% $downids %>"
						>

						<button
							type  = "submit"
							title = "Post on Web"
							class = "buttonwhite purpletext fa-sm fa fa-share-alt marleft"
							style = "margin-top: -1px; margin-right: -4px;"
						></button>

					</form>

					<script>

						$("#postsubmit").submit(function(event){

							event.preventDefault();

							alertify.confirm("<% $warning %>", function (e) {
								if (e) {
									$("#postsubmit")[0].submit();
								} else {
									alertify.error("Cold feet eh?  Extra checking never hurt.");
								}
							});
						});

					</script>

					<form
						action = "print_downs.mhtml"
						method = "post"
						target = "_blank"
						class  = "nospace"
					>

						<input
							type  = "hidden"
							name  = "round_id"
							value = "<% $previous_round->id %>"
						>

						<input
							type  = "hidden"
							name  = "downs"
							value = "<% $downcodes %>"
						>

						<button
							type  = "submit"
							title = "Public Posting"
							class = "buttonwhite fa-sm fa fa-file-o bluetext marleft"
							style = "margin-top: -1px; margin-right: -4px;"
						></button>

					</form>

				</span>


				<& "/funclib/tablesorter.mas",
					table => "downs"
				&>

				<table id="downs">

					<thead>

						<tr class="yellowrow">
							<th>Name</th>
							<th>Code</th>
							<th>School</th>
						</tr>

					</thead>

					<tbody>
<%perl>
				foreach my $out_id (
					sort {$entries_by_id{$a}->code <=> $entries_by_id{$b}->code}
					keys %outs
				) {

</%perl>

					<tr>

						<td class="nospace">
							<a
								class  = "white full marno"
								target = "_blank"
								href   = "/register/entry/edit.mhtml?entry_id=<% $out_id %>"
							>
								<% $entries_by_id{$out_id}->code %>
							</a>
						</td>

						<td>
							<% $entries_by_id{$out_id}->name %>
						</td>

						<td>
							<% $entries_by_id{$out_id}->schoolname %>
						</td>

					</tr>

%				}

				</tbody>

				</table>

			</div>

%			}


		</div>

%		foreach my $entry_id (keys %entries_by_id) {
%			undef $entries_by_id{$entry_id};
%		}

%		if (@panels) {

			<div
				id    = "checks"
				class = "checks screens"
			>

				<& "speech_checks.mas",
					round    => $round,
					tourn    => $tourn,
					person   => $person,
					whoami   => "doubledown",
					strength => ${$entries_ref}{"tiebreak"}{"1"}
				&>

			</div>

%		}

	</div>
