<%args>
	$tourn
	$person
	$round
	$seeds	=> undef
	$strength => undef
	$whoami   => undef
</%args>
<%init>

	$m->abort unless $round;
	my $event = $round->event;

	$m->abort unless $event->tourn == $tourn->id;

	my %event_settings = $event->all_settings;

	my @panels = $round->panels;

	my %panel_entries = ();
	my %school_codes = ();

	my @round_entries = $m->comp("/funclib/round_entries.mas", round => $round);

	my %in_round = ();

	foreach my $entry (@round_entries) {
		$in_round{$entry->id}++;
		push (@{$panel_entries{$entry->panelid}}, $entry);
		$school_codes{$entry->schoolid} = $entry->schoolcode;
	}

	my %title_by_entry;

	if ($event_settings{"ask_for_titles"}) {

		my @titles = $m->comp(
			"/funclib/event_entry_settings.mas",
			event => $event,
			tag   => "title"
		);

		%title_by_entry =
			map {$_->entry->id => $_->value}
			@titles;
	}

	my %cross_entries = $m->comp(
		"/funclib/event_doubled.mas",
		round => $round
	);

	my %event_speaker_order = $m->comp(
		"/funclib/event_speaker_order.mas",
		round => $round
	);

	my %hit_before = $m->comp(
		"/funclib/event_entry_hits.mas",
		round => $round
	);

	my $show_strength++ if $round->name > 2;
	$show_strength++ if $round->name > 1 && $whoami eq "california";
	undef $show_strength if $round->type eq "final";

</%init>

	<script>

		$(document).ready( function(){

%			foreach my $panel (@panels) {
				averageStrength('<% $panel->id %>');
%			}

		});

		function averageStrength(panelID) {

			var total = 0, counter = 0, average = 0, already = {};

			$("#panel_"+panelID).find(".strength").each(function(index) {

				var strengthScore = parseInt(this.id);

				var entryID = $(this).attr("entry");

				if (!(entryID in already)) {
					total = total + strengthScore;
					counter++;
					already[entryID]++;
				}

			});

			if (counter) {
				average = (total / counter);
			}

			$("#average_"+panelID).html(average.toFixed(2));

		}

		function toggleShow(elementType) {
			$("#"+elementType).toggleClass("invert");
			$("."+elementType).toggleClass("hidden");
		}

		function hideColor (colorToggle) {
			$(".entries").removeClass(colorToggle);
			$(".schooltoggle").removeClass('invert');
			$(".key_"+colorToggle).addClass('hidden');
		}

		function toggleColor (keyID, panelID, clashKey, clashType, colorToggle) {

			$(".entries").not("."+clashType+"_"+clashKey).removeClass(colorToggle);
			$(".schooltoggle").not("#"+keyID).removeClass('invert');

			$("."+clashType+"_"+clashKey).toggleClass(colorToggle);
			$("#"+keyID).toggleClass('invert');

			if (clashType === "hits") {
				$("."+clashType).toggleClass("hidden");
				$("."+clashType).toggleClass(colorToggle);
			}

			$("."+clashType+"_"+clashKey).children("."+clashType+"s").toggleClass("hidden");

		};

		$(function() {

			$( ".droppable" ).droppable({

				hoverClass	   : "ltyellow",
				accept		   : ":not(.ui-sortable-helper)",
				disableSelection : "true",

				drop			 : function( event, ui) {

					$.post("move_speech.mhtml",{
						entry_id	 : ui.draggable.attr("id"),
						panel_marker : this.id
					}).done(function(data) {

						if (data.error) {
							alertify.error(data.message);
						} else {

							alertify.set('notifier','delay', 2);
							alertify.notify(data.message, "custom");
							alertify.set('notifier','delay', 5);

							if (data.origin_panel && data.origin_speakerorder && data.target_entry) {
								var parentID = data.origin_panel+"_"+data.origin_speakerorder;
								$("#"+data.target_entry).appendTo("#"+parentID);
							}
						}
					});

					// remove the original element from its origin to this
					// location, and make it visible again while destroying the
					// clone.  this is necessary because the default jquery
					// draggable behavior does not play well with scrollable
					// windows.

					ui.draggable.show();
					$(this).prepend(ui.draggable);
					$( this ).find( ".placeholder" ).remove();

					var panelID = $("#"+this.id).attr("panel");
					averageStrength(panelID);

					$("#"+this.id).removeClass("strength_"+panelID);

				}

			}).sortable({

				items: ":not(.placeholder)",

				sort: function() {

					// gets added unintentionally by droppable interacting with
					// sortable using connectWithSortable fixes this, but
					// doesn't allow you to customize active/hoverClass options

					$( this ).removeClass( "ui-state-default" );
				}
			});

			$( ".draggable" ).draggable({

				drag: function(event, ui) {
					$("."+this.id).show();
				},

				stop: function(event, ui) {
					$("."+this.id).hide();

					var schoolID = $("#"+this.id).attr("school");
					var titleName = $("#"+this.id).attr("title");

					$(".school_"+schoolID).removeClass("dkred");
					$(".title_"+titleName).removeClass("dkblue");
					$(".hitcounter").addClass('hidden');

				},

				start: function(event, ui) {

					$(".entries").removeClass("dkred");
					$(".entries").removeClass("dkorange");
					$(".entries").removeClass("dkblue");
					$(".entries").removeClass("dkgreen");
					$(".entries").removeClass("dkgrey");

					var schoolID = $("#"+this.id).attr("school");
					var titleName = $("#"+this.id).attr("title");

					$(".school_"+schoolID).addClass("dkred");

					if (titleName) {
						$(".title_"+titleName).addClass("dkblue");
					}

					$("#"+this.id).hide();
					$("#"+this.id).removeClass("dkred");
					$("#"+this.id).removeClass("dkblue");

					$(".hit_"+this.id).removeClass("hidden");

				},

				disableSelection : "true",
				revert		   : "invalid",
				containment	  : '#wrapper',
				snap			 : "true",
				snapMode		 : "inner",
				helper		   : "clone"
			});

		});

	</script>

		<div class="full nospace">

			<span class="twofifths">
				<h4><% $round->realname %> Double Checks</h4>
			</span>

			<span class="threefifths rightalign">

				<span class="semibold">
					Show:
				</span>

				<span
					id	  = "schools"
					class   = "buttonwhite redtext padless"
					onClick = "toggleShow(this.id)";
				>
					Schools
				</span>

%				unless ($whoami eq "california") {
					<span
						id	  = "titles"
						class   = "buttonwhite bluetext padless"
						onClick = "toggleShow(this.id)";
					>
						Titles
					</span>

					<span
						id	  = "hits"
						class   = "buttonwhite orangetext padless"
						onClick = "toggleShow(this.id)";
					>
						Hits
					</span>

%				}

				<span
					id	  = "orders"
					class   = "buttonwhite greentext padless"
					onClick = "toggleShow(this.id)";
				>
					Order
				</span>

				<span
					id	  = "crosss"
					class   = "buttonwhite graytext padless"
					onClick = "toggleShow(this.id)";
				>
					Cross
				</span>

%				if ($show_strength) {

					<span
						id	  = "strength"
						class   = "buttonwhite purpletext padless"
						onClick = "toggleShow(this.id)";
					>
						Strength
					</span>
%				}

%				if ($show_strength && $whoami eq "california") {

					<span
						id	  = "seeds"
						class   = "buttonwhite orangetext padless"
						onClick = "toggleShow(this.id)";
					>
						Seeds
					</span>

%				}

			</span>

		</div>

<%perl>
		my $max_speaker;
		my %entry_by_speaker = ();
		my %in_section = ();

		foreach my $panel (@panels) {

			foreach my $entry (@{$panel_entries{$panel->id}}) {

				push @{$entry_by_speaker{$panel->id}{$entry->speaks}}, $entry;
				$max_speaker = $entry->speaks if $entry->speaks > $max_speaker;

				$in_section{$entry->id} = $panel->id;
			}
		}

		my $count;

		foreach my $panel (@panels) {

			my %schools;
			my %titles;
			my $order_count;
			my $last_order_count;
			my $cross_total_clash;
			my $hit_total;

</%perl>

			<span
				class="inline marless top fixedwidth"
				id = "panel_<% $panel->id %>"
			>

				<div class="yellowrow padmore smallish centeralign semibold marno bordersides bordertop">
					Section <% $panel->letter %>
				</div>

%				foreach my $speaker ( 1 .. $max_speaker) {

					<div class="full row nospace bordersides">

						<span class="sixth padless marno centeralign">
							<% $speaker %>
						</span>

						<span
							id	  = "<% $panel->id %>_<% $speaker %>"
							panel   = "<% $panel->id %>"
							class   = "marno fivesixths droppable speaker_<% $speaker %>"
						>

<%perl>
						unless ($entry_by_speaker{$panel->id}{$speaker}) {
							$m->print("</span></div>\n");
							next;
						}

						foreach my $entry (@{$entry_by_speaker{$panel->id}{$speaker}}) {

							$schools{$entry->school->id}++;
							my $title = $title_by_entry{$entry->id};
							$title =~ s/[\W_]//g;
							$titles{$title}++;

							my $order_string;
							my %orders = ();

							my $last_order;

							foreach my $round (sort keys %{$event_speaker_order{$entry->id}}) {

								$order_string .= ", " if $order_string;
								$order_string .= $event_speaker_order{$entry->id}{$round};

								$orders{$event_speaker_order{$entry->id}{$round}}++;
								$last_order = $event_speaker_order{$entry->id}{$round};
							}

							if ($speaker == $last_order) {
								$last_order_count++
							} else {
								$order_count += $orders{$speaker};
							}

							my $cross_clash;

							foreach my $other (keys %{$cross_entries{$entry->id}}) {

								if ((abs $cross_entries{$entry->id}{$other}{"order"} - $speaker) < 2) {
									$cross_total_clash++;
									$cross_clash++;
								}
							}
</%perl>

							<span
								class="
									marno entries draggable
									<% $last_order == $speaker ? "order_last" : "" %>
									<% $orders{$speaker} ? "order_normal" : "" %>
									<% $cross_clash ? "cross_normal" : "" %>
									school_<% $entry->school->id %>
									title_<% $title %>
								"
								id		 = "<% $entry->id %>"
								school	 = "<% $entry->school->id %>"
								title	  = "<% $title %>"
								orders	 = "<% $order_string %>"
								last_order = "<% $last_order %>"
							>
								<span
									class="nospace third borderright centeralign codes"
								>
									<% $entry->code %>
								</span>

								<span
									class="nospace threequarters rightalign schools hidden redtext semibold"
								>
									<% $entry->schoolcode %>
								</span>

%								unless ($whoami eq "california") {

									<span class="nospace padleft rightalign wrap titles hidden"
									>
										<% $title_by_entry{$entry->id} %>
									</span>

									<span class="nospace threefifths rightalign
										hits hits_<% $panel->id %> hidden"
										>

%										foreach my $hit (sort keys %{$hit_before{$entry->id}}) {
%											next unless $in_section{$hit} == $panel->id;

%											$hit_total++;

											<span class="full nospace semibold">
												<% $hit_before{$entry->id}{$hit}{"code"} %>
												<% $hit_before{$entry->id}{$hit}{"count"} %>x
											</span>
%										}

									</span>

%									foreach my $hit (sort keys %{$hit_before{$entry->id}}) {
										<span class="
											rightalign orangetext half nospace
											semibold hitcounter hit_<% $hit %> hidden
										">
											<% $hit_before{$entry->id}{$hit}{"count"} %>x
										</span>
%									}

%								} else {

									<span class="nospace padleft rightalign quarter wrap seeds hidden"
										entry = "<% $entry->id %>"
										id	= "<% $seeds ? ${$seeds}{$entry->id} : ""  %>"
									>
										<% $seeds ? ${$seeds}{$entry->id} : ""  %>
									</span>

%								}

								<span class="nospace padleft rightalign quarter wrap strength hidden"
									entry = "<% $entry->id %>"
									id	= "<% $strength ? ${$strength}{$entry->id} : ""  %>"
								>
									<% $strength ? ${$strength}{$entry->id} : ""  %>
								</span>

								<span class="nospace threefifths rightalign orders code_<% $panel->id %> hidden">
%									foreach my $round (sort keys %{$event_speaker_order{$entry->id}}) {
										<span class="half marno">
										<% $round %>-<%
											Lingua::EN::Numbers::Ordinate::ordinate(
												$event_speaker_order{$entry->id}{$round}
											)
										%>
										</span>
%									}
								</span>

								<span class="nospace threefifths rightalign crosss code_<% $panel->id %> hidden">

%									foreach my $other (keys %{$cross_entries{$entry->id}}) {

										<span class="full nospace">

											<% $cross_entries{$entry->id}{$other}{"event"} %>-<%
												Lingua::EN::Numbers::Ordinate::ordinate(
													$cross_entries{$entry->id}{$other}{"order"}
												)
										%>

										</span>
%									}

								</span>

							</span>
%						}

					</div>
%				}

				<div class="row centeralign padmore marno bordersides borderbottom">

					<p class="leftalign semibold smallish marno">Status:</p>

<%perl>
					if (
						(
							$whoami eq 'doubledown'
							&& ($round->name > 2)
							&& ($round->type ne 'final')
						) || (
							$whoami eq 'california'
							&& $round->name > 1
							&& $round->type ne 'final'
						)

					) {
</%perl>

						<div class = "full padless marno purpletext" >
							<span class="half rightalign">
								Avg Rank:
							</span>
							<span class="half leftalign semibold" id = "average_<% $panel->id %>">
							</span>
						</div>

%					}

%					my $blah;

%					foreach my $key (keys %schools) {

%						next unless $schools{$key} > 1;
%						$blah++;

						<span
							id	  = "<% $key %>_<% $panel->id %>"
							class	= "schooltoggle buttonwhite marbottom redtext padless smallish full"
							onClick = "toggleColor( this.id, <% $panel->id %>, <% $key %>, 'school', 'dkred');"
						>
							<% $schools{$key} %> from School <% $school_codes{$key} %>

						</span>

%					}
<%perl>
					unless ($whoami eq "california") {
						foreach my $key (keys %titles) {
							next unless $titles{$key} > 1;
							next unless $key;
							$blah++;

</%perl>
							<span
								id	  = "<% $key %>_<% $panel->id %>"
								class	= "titletoggle buttonwhite marbottom bluetext padless smallish full"
								onClick = "toggleColor( this.id, <% $panel->id %>, '<% $key %>', 'title', 'dkblue');"
							>
								<% $titles{$key} %> w/same title
							</span>
%						}
%					}

%					if ($order_count) {

%						$blah++;

						<span
							id	  = "order_<% $panel->id %>"
							class	= "ordertoggle buttonwhite marbottom greentext padless smallish full"
							onClick = "toggleColor( this.id, <% $panel->id %>, 'normal', 'order', 'green');"
						>
							<% $order_count %> order repeats
						</span>
%					}

%					if ($last_order_count) {
%						$blah++;

						<span
							id	  = "last_order_<% $panel->id %>"
							class	= "last_ordertoggle buttonwhite marbottom greentext padless smallish full"
							onClick = "toggleColor( this.id, <% $panel->id %>, 'last', 'order', 'dkgreen');"
						>
							<% $last_order_count %> same order R<% $round->name - 1 %>
						</span>
%					}

%					if ($cross_total_clash) {

%						$blah++;

						<span
							id	  = "cross_<% $panel->id %>"
							class	= "crosstoggle buttonwhite marbottom graytext padless smallish full"
							onClick = "toggleColor( this.id, <% $panel->id %>, 'normal', 'cross', 'dkgrey');"
						>
							<% $cross_total_clash %> cross entry order
						</span>
%					}

%					unless ($whoami eq "california") {

%						if ($hit_total) {

%							$blah++;

							<span
								id	  = "hit_<% $panel->id %>"
								class	= "hittoggle buttonwhite marbottom orangetext padless smallish full"
								onClick = "toggleColor( this.id, <% $panel->id %>, 'hits', 'hits', 'orangetext');"
							>
								<% $hit_total %> repeat hits
							</span>
%						}
%					}

%					unless ($blah) {

						<span class="buttonwhite greentext padless">

							<span class="fa fa-check fa-lg greentext">
							</span>

							All OK!

						</span>

%					}

				</div>

			</span>
%		}



