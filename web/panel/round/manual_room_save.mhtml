<%args>
	$room_id  => undef
	$panel_id => undef
	$round_id => undef
	$flight   => 1
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	if ($panel_id eq "out") {

		my $sth = $dbh->prepare("
			update panel
				set room   = NULL
				where room = ?
				and flight = ?
				and round = ?
		");

		$sth->execute(int($room_id), int($flight), int($round_id));

		my $msg = "Room removed from round";

		$m->clear_buffer;
		$r->content_type('application/json');

		$m->print('{
			"error"        : false,
			"message"      : "'.$msg.'"
		}');

		$m->abort();
	}

	my $panel = Tab::Panel->retrieve($panel_id);

	unless ($panel) {

		$m->clear_buffer;
		$r->content_type('application/json');

		$m->print('{
			"error"        : true,
			"message"      : "No valid Panel found for '.$panel_id.'",
		}');

		$m->abort();
	}
	return unless $panel;

	my $room = Tab::Room->retrieve($room_id);

	my $round = $panel->round;
	my $event = $round->event;
	my @ties;
	my $ids;

	if ($event->type eq "congress") {

		@ties = $m->comp("/funclib/congress_ties.mas", round => $round);
		$ids = "(";

		my $notfirst;
		foreach my $tie (@ties) {
			$ids .= ", " if $notfirst++;
			$ids .= $tie->id;
		}
		$ids .= ")";

	} else {
		$ids = "(".$round->id.")";
	}

	my $origin_panel;
	my $origin_room  = $panel->room;

	if ($room) {
		$origin_panel = $round->panels(flight => $flight, room => $room->id )->first;
	}

	my $room_sth = $dbh->prepare("
		update panel set room = ?
			where letter = ?
			and round in $ids
	");

	my $msg;

	if ($room && $panel) {
		$room_sth->execute($room, $panel->letter);
		$msg .= "Section ".$panel->letter." moved to ".$room->name;
	} elsif ($panel) {
		$room_sth->execute(0, $panel->letter);
		$msg .= "<br>Section ".$panel->letter." room removed";
	}

	if ($origin_panel && $origin_room) {
		$room_sth->execute($origin_room, $origin_panel->letter);
		$msg .= "<br>Section ".$origin_panel->letter." moved to ".$origin_room->name;
	} elsif ($origin_panel) {
		$room_sth->execute(0, $origin_panel->letter);
		$msg .= "<br>Section ".$origin_panel->letter." room removed";
	}

	$dbh();

	$m->clear_buffer;
	$r->content_type('application/json');

    $m->print('{
        "error"        : false,
        "message"      : "'.$msg.'",
        "origin_panel" : "'.$origin_panel.'",
        "origin_room"  : "'.$origin_room.'"
    }');

    $m->abort();

</%init>
