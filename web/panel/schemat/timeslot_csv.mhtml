<%args>
	$round_id
	$session
	$record    => undef
	$firstname => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	my $timeslot = $round->timeslot;

	my $timeslot_name = $timeslot->name;

	my $dbh = Tab::DBI->db_Main();
	my $sth = $dbh->prepare("
		select
			panel.id, event.abbr, panel.flight,
			room.name, panel.letter,
			aff.code, neg.code, judge.first, judge.last

		from (round, event, panel, ballot, judge)

			left join ballot affballot on panel.id = affballot.panel
				and affballot.side = 1
				and affballot.judge = judge.id

			left join entry aff on aff.id = affballot.entry

			left join ballot negballot on panel.id = negballot.panel
				and negballot.side = 2
				and negballot.judge = judge.id

			left join entry neg on neg.id = negballot.entry

			left join room on panel.room = room.id

		where round.timeslot = ?
			and round.event = event.id
			and round.id = panel.round
			and panel.bye != 1
			and panel.id = ballot.panel
			and ballot.judge = judge.id

		group by panel.id,judge.id
		order by room.name, judge.last
	");

	my $filename = $timeslot->name;
    $filename =~ s/[\W_]//g;
	$filename = $filename.".csv";

    $m->clear_buffer;
    $r->content_type('application/csv');
    $r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	$sth->execute($timeslot->id);

	my %panels;
	my $max_flight;

	while (
		my (
			$pid, $event_abbr, $flight,
			$room_name, $panel_letter,
			$aff_code, $neg_code, $judge_first, $judge_last
		) = $sth->fetchrow_array()
	) {

		$panels{$pid}{"event"}  = $event_abbr;
		$panels{$pid}{"aff"}    = $aff_code;
		$panels{$pid}{"neg"}    = $neg_code;

		if ($room_name) {
			$panels{$pid}{"room"}   = $room_name;
		} else {
			$panels{$pid}{"room"}   = $event_abbr." ".$panel_letter;
		}
		$panels{$pid}{"flight"} = $flight;

		push @{$panels{$pid}{"judges"}}, $judge_first." ".$judge_last;

		if ($flight > $max_flight) {
			$max_flight = $flight;
		}
	}

	foreach my $pid (
		sort {
			$panels{$a}{"flight"} <=> $panels{$b}{"flight"}
			|| $panels{$a}{"room"} <=> $panels{$b}{"room"}
			|| $panels{$a}{"letter"} <=> $panels{$b}{"letter"}
		} keys %panels
	) {

		$m->print('"'.$panels{$pid}{"event"}.'"');
		$m->print(',');
		$m->print('"'.$panels{$pid}{"room"}.'"');
		$m->print(',');

		if ($max_flight > 1) {
			$m->print('"'.$panels{$pid}{"flight"}.'"');
			$m->print(',');
		}

		$m->print(',');
		$m->print('"'.$panels{$pid}{"aff"}.'"');
		$m->print(',');
		$m->print('"'.$panels{$pid}{"neg"}.'"');

		if ($panels{$pid}{"judges"}) {
			foreach my $judge (@{$panels{$pid}{"judges"}}) {
				$m->print(',');
				$m->print('"'.$judge.'"');
			}
		}

		$m->print("\n");
	}

	$sth->finish();
	$dbh();

	$m->abort;

</%init>


