<%args>
	$person
	$person_settings
	$tourn
	$tourn_settings
	$panel_id => undef
</%args>
<%init>

	my $panel = Tab::Panel->retrieve($panel_id) if $panel_id;

	unless ($panel) {
		my $msg = "No valid panel ID recieved.  Please hit back and try again";
		$m->comp("/funclib/abort.mas", message => $msg);
	}

	my $room = $panel->room;

	unless ($room) {
		my $msg = "That session has no room assigned.  I cannot do a seating chart without a room layout";
		$m->comp("/funclib/abort.mas", message => $msg);
	}

	my $round = $panel->round;

	my @entries = $m->comp(
		"/funclib/panel_entries.mas",
		panel    => $panel,
		no_drops => 1
	);

	my %entries_by_seat;
	my %seated;

	foreach my $entry (@entries) {
		push @{$entries_by_seat{$entry->seat}}, $entry if $entry->seat;
	}

</%init>

	<div class="main">

		<div class="nospace">

			<span class="half nospace">
				<h2>Room <% $room->name %> Seating Chart</h2>
			</span>

			<span class="half nospace rightalign">
				<h4>Chamber <% $panel->letter %> <% $round->realname %></h4>
			</span>


		</div>

%		if ($room->rowcount && $room->seats) {

			<h5 class="centeralign">Front of room</h5>

			<table class="dropme">

				<tr class="yellowrow">

					<th class="border centeralign">
					</th>

%					foreach my $seat (1 .. $room->seats) {
						<th class="border centeralign bluetext">
							Seat <% $seat %>
						</th>
%					}

				</tr>

%				foreach my $row (1 .. $room->rowcount) {

					<tr class="row">

						<th class="border halflimit centeralign bluetext">
							Row <% $row %>.
						</th>

%					foreach my $seat (1 .. $room->seats) {

						<td
							id    = "<% $row %>-<% $seat %>"
							panel = "<% $panel->id %>"
							class = "centeralign droppable"
						>
<%perl>
						if ($entries_by_seat{$row."-".$seat}) {
							foreach my $entry (@{$entries_by_seat{$row."-".$seat}}) {
								$seated{$entry->id}++;
								dropThing($entry, $tourn_settings);
							}
						}
</%perl>
					</td>
%				}
				</tr>
%			}
			</table>

%		} else {

			<h4 class="martopmuchmore redtext centeralign">
				Anguish! I have no layout!
			</h4>

			<p class="centeralign bigger padmuchmore">
				Tabroom needs to know what the room layout is like before
				assigning a seating chart.
			</p>

			<form
				action = "seating_rooms_save.mhtml"
				method = "post"
			>

			<input
				type  = "hidden"
				name  = "panel_id"
				value = "<% $panel->id %>"
			>

			<div class="full row centeralign">

				<span class="sixth">
					Rows:
				</span>

				<span class="sixth">
					<input
						type  = "number"
						name  = "<% $room->id %>_rows"
						min   = 0
						max   = 99
						value = "<% $room->rowcount %>"
					>
				</span>

				<span class="sixth">
					Seats per row:
				</span>

				<span class="sixth">
					<input
						type  = "number"
						name  = "<% $room->id %>_seats"
						min   = 0
						max   = 99
						value = "<% $room->seats %>"
					>
				</span>

				<span class="eighth">
					<input
						type="submit"
						value="Save"
						class="thin"
					>
				</span>

				</form>
			</div>


%		}

	</div>

	<div class="menu">

		<div class="sidenote">

			<h4>Navigation</h4>

			<a
				class="blue full"
				href="show.mhtml?round_id=<% $round->id %>"
			>Return to <% $round->realname %> schematic
			</a>

			<a
				class="blue full"
				href="seating_chart.mhtml?round_id=<% $round->id %>"
			>Return to <% $round->realname %> chart list
			</a>

			<h4>Assign Seats</h4>

			<a
				class="yellow third centeralign"
				href="seating_assign.mhtml?panel_id=<% $panel->id %>"
			>
				Randomly
			</a>
			<a
				class="yellow third centeralign"
				href="seating_assign.mhtml?panel_id=<% $panel->id %>&method=schools"
			>
				By School
			</a>
			<a
				class="yellow third centeralign"
				href="seating_assign.mhtml?panel_id=<% $panel->id %>&method=invert"
			>
				Inversion
			</a>

			<span class="twofifths nospace">
				<h4>Printouts</h4>
			</span>
			<span class="threefifths nospace rightalign explain bluetext semibold">
				<a 
					href="/setup/events/ballots.mhtml?event_id=<% $round->event->id %>" 
					class="bluetext plain hover nospace padvertless link-underline"
				>Codes/names set in event settings</a>
			</span>

			<a
				class="blue third centeralign"
				href="seating_print.mhtml?panel_id=<% $panel->id %>"
			>Both views</a>

			<a
				class="blue third centeralign"
				href="seating_print.mhtml?round_id=<% $round->id %>&views=parlis"
			>Scorer</a>

			<a
				class="blue third centeralign"
				href="seating_print.mhtml?panel_id=<% $panel->id %>&views=judges"
			>Parli/PO</a>

		</div>

		<div class="sidenote full">

			<h4 class="padleft padtopmore padbottommore centeralign">
				The Seatless
			</h4>

			<div class="row droppable padno border">

%			foreach my $entry (@entries) {

%				next if $seated{$entry->id};

%				dropThing($entry, $tourn_settings);

%			}

			</div>

		</div>

	</div>

<%perl>

	sub dropThing {

		my ($entry, $tourn_settings) = @_;

		my $school = $entry->school;
		my @names = split(/\ /, $entry->name);
		my $last = pop @names;

		my $district_id = $school->district->id
			if $school && $school->district;

		my $district_code = $school->district->code
			if $school && $school->district;

		my $region_id = $school->region->id
			if $school && $school->region;

		my $region_code = $school->region->code
			if $school && $school->region;

		my $state = $school->chapter->state
			if $school && $school->chapter;

		my $school_id = $school->id;
		my $school_code = $school->code;

		$school_code = substr($school->short_name, 0, 12)
			unless $school_code;

		my $ada++ if $entry->setting("ada");

</%perl>
			<span
				class    = " centeralign martop marbottom entries draggable biggish
								<% $ada ? "adaroom" : "" %>"
				id       = "<% $entry->id %>"
				state    = <% $state %>
				last     = <% $last %>
				school   = <% $school_id %>
				region   = <% $region_id %>
				district = <% $district_id %>
			>

				<span class="full marno padless biggish">
					<% $entry->code %>
				</span>

%				if ($ada) {
					<span class="entryinfo nowrap half marno padless redtext">
						ADA
					</span>
%				}

%				if ($tourn_settings->{"ncfl"}) {

					<span class="entryinfo marno padless region_<% $region_id %> orangetext strong">
						Region <% $region_code %>
					</span>

%				} elsif ($tourn_settings->{"nsda_nats"}) {

					<span class="entryinfo biggish fourtenths marno padless district_<% $district_id %> orangetext strong">
						<% $district_code %>
					</span>

					<span class="entryinfo biggish fourtenths marno padless state_<% $state %> bluetext strong">
						<% $state %>
					</span>

%				} else {

					<span class="entryinfo nowrap full marno padless school_<% $school_id %> orangetext">
%						if ($tourn_settings->{"regions"} ) {
							<% $region_code %>
%						}
						<% $school->code
								? $school->code
								: substr($school->short_name, 0, 12)
							%>
					</span>
%				}

				<span class="entryinfo centeralign biggish marno padless last_<% $last %> greentext">
					<% $last %>
				</span>

			</span>
%	}

	<script>

        $(function() {

            $( ".droppable" ).droppable({

                hoverClass       : "ltyellow",
                accept           : ":not(.ui-sortable-helper)",
                disableSelection : "true",
                drop             : function( event, ui) {

                    var droppableId = this.id;
					var panelID = $("#"+this.id).attr("panel");

                    $.post("seating_move.mhtml", {

                        entry_id    : ui.draggable.attr("id"),
                        seat_marker : this.id,
						panel_id    : panelID

                    }).done(function(response) {

						var data = JSON.parse(response);

						if (data.error) {
							alertify.warning(data.message);
						} else if (data.message) {
							alertify.set('notifier','delay', 2);
							console.log(data.message);
							alertify.success(data.message);
							alertify.set('notifier','delay', 5);
						}
					});

                    // remove the original element from its origin to this
                    // location, and make it visible again while destroying the
                    // clone.  this is necessary because the default jquery
                    // draggable behavior does not play well with scrollable
                    // windows.

                    ui.draggable.show();
                    $(this).prepend(ui.draggable);
                    $( this ).find( ".placeholder" ).remove();

                }

            }).sortable({

                items: ":not(.placeholder)",

                sort: function() {

					// gets added unintentionally by droppable interacting with
					// sortable using connectWithSortable fixes this, but
					// doesn't allow you to customize active/hoverClass options

                    $( this ).removeClass( "ui-state-default" );
                }
            });

			$( ".draggable" ).draggable({

				drag: function(event, ui) {
					$("."+this.id).show();
				},

				stop: function(event, ui) {
					$("."+this.id).hide();
				},

				start: function(event, ui) {
					$("#"+this.id).hide();
				},

				disableSelection : "true",
				revert           : "invalid",
				containment      : '#wrapper',
				snap             : "true",
				snapMode         : "inner",
				helper           : "clone"
			});

		});

	</script>

