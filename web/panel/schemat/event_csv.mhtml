<%args>
	$event_id
	$session
	$record    => undef
	$firstname => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id);
	my $event_name = $event->name;

	my $dbh = Tab::DBI->db_Main();
	my $sth = $dbh->prepare("
		select
			panel.id, panel.flight, panel.bye,
			round.id, round.name, round.label,
			room.name, aff.code, neg.code, judge.first, judge.last,
			panel.bye

		from (round, event, panel, ballot)

			left join judge on ballot.judge = judge.id

			left join ballot affballot on panel.id = affballot.panel
				and affballot.side = 1

			left join entry aff on aff.id = affballot.entry

			left join ballot negballot on panel.id = negballot.panel
				and negballot.side = 2

			left join entry neg on neg.id = negballot.entry

			left join room on panel.room = room.id

		where event.id = ?
			and round.event = event.id
			and round.id = panel.round
			and panel.id = ballot.panel

		group by ballot.id
		order by round.name, room.name, judge.last
	");

	my $filename = $event->name;
    $filename =~ s/[\W_]//g;
	$filename = $filename.".csv";

    $m->clear_buffer;
    $r->content_type('application/csv');
    $r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	$sth->execute($event->id);

	my %panels;
	my $max_flight;

	while (
		my (
			$pid, $flight, $bye,
			$round, $round_name, $round_label,
			$room_name, $aff_code, $neg_code, $judge_first, $judge_last
		) = $sth->fetchrow_array()
	) {


		if ($round_label) {
			$panels{$pid}{"round"}  = $round_label;
		} else {
			$panels{$pid}{"round"}  = 'Round '.$round_name;
		}

		$panels{$pid}{"round_sort"} = $round_name;
		$panels{$pid}{"aff"}        = $aff_code;
		$panels{$pid}{"neg"}        = $neg_code;
		$panels{$pid}{"room"}       = $room_name;

		if ($bye) {
			$panels{$pid}{"bye"}++;
		} else {

			$panels{$pid}{"flight"}     = $flight;
			$panels{$pid}{"judges"}{$judge_first." ".$judge_last}++;

			if ($flight > $max_flight) {
				$max_flight = $flight;
			}
		}
	}

	my $last_round;

	foreach my $pid (
		sort {
			$panels{$a}{"round_sort"} <=> $panels{$b}{"round_sort"}
			|| $panels{$a}{"bye"} <=> $panels{$b}{"bye"}
			|| $panels{$a}{"flight"} <=> $panels{$b}{"flight"}
			|| $panels{$a}{"room"} <=> $panels{$b}{"room"}
			|| $panels{$a}{"letter"} <=> $panels{$b}{"letter"}
		} keys %panels
	) {

		if ($last_round ne $panels{$pid}{"round_sort"}) {
			$m->print("\n");
			$last_round = $panels{$pid}{"round_sort"};
		}

		$m->print('"'.$panels{$pid}{"round"}.'"');
		$m->print(',');
		$m->print('"'.$panels{$pid}{"room"}.'"');
		$m->print(',');

		if ($max_flight > 1) {
			$m->print('"'.$panels{$pid}{"flight"}.'"');
			$m->print(',');
		}

		$m->print(',');
		$m->print('"'.$panels{$pid}{"aff"}.'"');
		$m->print(',');
		$m->print('"'.$panels{$pid}{"neg"}.'"');

		if ($panels{$pid}{"bye"}) {
			$m->print(',');
			$m->print('"BYE"');

		} else {

			if ($panels{$pid}{"judges"}) {
				foreach my $judge (keys %{$panels{$pid}{"judges"}}) {
					$m->print(',');
					$m->print('"'.$judge.'"');
				}
			}
		}

		$m->print("\n");
	}

	$sth->finish();
	$dbh();

	$m->abort;

</%init>


