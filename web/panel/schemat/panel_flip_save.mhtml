<%args>
	$panel_id
	$tourn
	$tourn_settings
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my %flips;

	my $sth = $dbh->prepare("
		select
			entry.id, entry.code,
			ballot.id, ballot.side, ballot.speakerorder,
			panel.letter,
			flip.value_text,
			flip_status.value,
			flip_at.value_date,
			flip_winner.value,
			CONVERT_TZ(round.start_time, '+00:00', tourn.tz),
			CONVERT_TZ(timeslot.start, '+00:00', tourn.tz),
			tourn.tz

		from (entry, ballot, panel, round, timeslot, tourn)

			left join panel_setting flip on flip.panel = panel.id and flip.tag = 'flip'
			left join panel_setting flip_status on flip_status.panel = panel.id and flip_status.tag = 'flip_status'
			left join panel_setting flip_at on flip_at.panel = panel.id and flip_at.tag = 'flip_at'
			left join panel_setting flip_winner on flip_winner.panel = panel.id and flip_winner.tag = 'flip_winner'

		where panel.id = ?
			and panel.id = ballot.panel
			and panel.round = round.id
			and round.timeslot = timeslot.id
			and timeslot.tourn = tourn.id
			and ballot.entry = entry.id
	");

	$sth->execute($panel_id);

	while (
		my (
			$entry_id, $entry_code,
			$ballot_id, $ballot_side, $ballot_speakerorder,
			$panel_letter, $panel_flip, $panel_flip_status, $panel_flip_at,
			$winner_id, $winner_value,
			$round_start, $timeslot_start,
			$tz
		) = $sth->fetchrow_array()
	) {

		$flips{"tz"} = $tz;

		unless ($flips{"status"}) {

			$flips{"status"} = $panel_flip_status;

			$flips{"deadline"} = $m->comp("/funclib/showdt.mas",
				string => $panel_flip_at,
				tz     => $tz,
				object => 'yasplz'
			);

			$flips{'meta'} = eval {
				return JSON::decode_json( $panel_flip );
			};

			if ($flips{"meta"} eq "null") {
				undef $flips{"meta"};
			}

			if ($round_start) {
				my ($date, $time) = split(/\ /, $round_start);
				my ($year, $month, $day) = split(/-/, $date);
				$flips{"start"} = $month.'/'.$day.'/'.$year;
			} else {
				my ($date, $time) = split(/\ /, $timeslot_start);
				my ($year, $month, $day) = split(/-/, $date);
				$flips{"start"} = $month.'/'.$day.'/'.$year;
			}
		}

		if ($winner_id) {
			$flips{"winner"} = $entry_id;
			$flips{"win_id"} = $winner_id;
		} else {
			delete $flips{"winner"};
			delete $flips{"win_id"};
		}

		if ($ARGS{"winner_id"} eq $entry_id) {
			$flips{"win_ballot"} = $ballot_id;
		}
	}

	$sth->finish();

	if (not defined $ARGS{"winner_id"}) { 
		$sth = $dbh->prepare("
			delete panel_setting.*
			from panel_setting
			where panel_setting.panel = ? 
			and panel_setting.tag like 'flip%'
		");

		$sth->execute($panel_id);
		$sth->finish();

		my $message = "Flip status reset to zero ";
		$m->redirect("panel_view.mhtml?panel_id=$panel_id&msg=$message");
	}

	if (
		(($ARGS{'winner_id'} ne $flips{"win_id"}) && $flips{"win_ballot"})
		|| (not defined $flips{"winner"})
	) {

		$sth = $dbh->prepare("
			delete panel_setting.*
			from panel_setting
			where panel_setting.panel = ? 
			and panel_setting.tag = 'flip_winner'
		");

		$sth->execute($panel_id);
		$sth->finish();

		$sth = $dbh->prepare("
			insert into panel_setting (panel, tag, value) values (?, 'flip_winner', ?)
		");

		$flips{"winner"} = $ARGS{"winner_id"};
		$sth->execute($panel_id, $flips{"winner"});
	}

	my $start_dt;
	my $changeme;

	if ($flips{'winner'}) {

		$start_dt = eval{
			return Tab::dtme( $flips{"start"}, $ARGS{"flip_at_time"}, $tourn->tz);
		};

		if ($start_dt) {
			$start_dt->set_time_zone("UTC");
		}

		if (
			$ARGS{"flip_status"} ne $flips{"status"}
			|| ((not defined $flips{"deadline"}) || $start_dt->epoch ne $flips{"deadline"}->epoch)
		) {
			$changeme++;
		}

	} else {
		delete $flips{'start'};
		delete $flips{'deadline'};
		$changeme++;
	}


	if (
		$ARGS{'side_locked'} ne $flips{"meta"}{"side_locked"}
		|| $ARGS{'order_locked'} ne $flips{"meta"}{"order_locked"}
	) {
		$flips{"meta"}{'side_locked'} = $ARGS{"side_locked"};
		$flips{"meta"}{'order_locked'} = $ARGS{"order_locked"};
		$changeme++;
	}

	if ($changeme)  {

		my $wipe_sth = $dbh->prepare("
			delete panel_setting.*
			from panel_setting
			where panel_setting.panel = ?
			and panel_setting.tag in ('flip', 'flip_at', 'flip_status')
		");

		my $create_sth = $dbh->prepare("insert into panel_setting (panel, tag, value) values (?, ?, ?)");

		my $create_date_sth = $dbh->prepare("insert into panel_setting 
			(panel, tag, value, value_date) values ( ?, ?, 'date', ? )"
		);

		my $create_json_sth = $dbh->prepare("insert into panel_setting 
			(panel, tag, value, value_text) values ( ?, ?, 'json', ? )"
		);

		my $json = JSON::encode_json($flips{"meta"});

		my $timestring;

		if ($start_dt) {
			$timestring = DateTime::Format::MySQL->format_datetime($start_dt);
		} else {
			$timestring = "0000-00-00 00:00:00";
		}

		$wipe_sth->execute($panel_id);
		$create_sth->execute($panel_id, "flip_status", $ARGS{"flip_status"});

		$create_date_sth->execute($panel_id, "flip_at", $timestring);
		$create_json_sth->execute($panel_id, "flip", $json);

		$wipe_sth->finish();
		$create_sth->finish();
		$create_date_sth->finish();
		$create_json_sth->finish();
	}

	$dbh();

	my $message = "Flip settings saved";
	$m->redirect("panel_view.mhtml?panel_id=$panel_id&msg=$message");

</%init>
