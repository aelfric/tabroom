<%args>
	$round_id		=> undef
	$round			=> undef
	$message        => undef
	$sendto         => "all"
	$panels         => "all"
	$motion         => undef
	$include_motion => undef
	$flight         => undef
</%args>
<%init>

	my $oround;

	if ($round) {
		$oround = $round;
	} else {
		$oround = Tab::Round->retrieve($round_id);
	}

	my @rounds;

	if ($ARGS{all_timeslot}) {
		push @rounds, $oround->timeslot->rounds();
	} else {
		push @rounds, $oround;
	}

	my $dbh = Tab::DBI->db_Main();

	my $person_counter;
	my $counter;
	my %targets;

	foreach my $round (@rounds) {

		next unless $round > 0 && $round->id;

		my $limit;

		if ($panels eq "unstarted") {
			$limit .= " and ballot.judge_started is NULL ";
		} elsif ($panels eq "unentered") {
			$limit .= " and not exists (select score.id from score where ballot.id = score.ballot) ";
		} elsif ($panels eq "unconfirmed") {
			$limit .= " and ballot.audit != 1 ";
		}

		$flight = int($flight);
		undef $flight if $flight < 1;

		if ($flight) {
			$limit .= " and panel.flight = ".$flight;
		}

		if ($ARGS{"panel"}) {
			$limit .= " and panel.id = ".int($ARGS{"panel"});
		}

		unless ($sendto eq "entries") {

			my $judges_sth = $dbh->prepare("
				select person.email, person.phone, person.provider
					from panel, ballot, judge, person
				where panel.round = ?
					and panel.id = ballot.panel
					and ballot.judge = judge.id
					and judge.person = person.id
					and person.no_email = 0
				$limit
				group by person.id
			");

			my $jf_sth = $dbh->prepare("
				select
					person.email, person.phone, person.provider
				from (panel, ballot, judge, follower, person)
				where panel.round = ?
					and panel.id = ballot.panel
					and ballot.judge = judge.id
					and judge.id = follower.judge
					and person.id = follower.person
					and person.no_email = 0
				$limit
				group by follower.id
			");

			$judges_sth->execute($round->id);

			while (
				my (
					$person_email, $person_phone, $person_provider
				) = $judges_sth->fetchrow_array()
			) {

				$person_counter++;
				$targets{$person_email}++ if $person_email;
				$targets{$person_phone.'@'.$person_provider}++ if $person_phone && $person_provider;
			}

			unless ($ARGS{"no_followers"}) {
				$jf_sth->execute($round->id);

				while (
					my (
						$person_email, $person_phone, $person_provider
					) = $jf_sth->fetchrow_array()
				) {

					$person_counter++;
					$targets{$person_email}++ if $person_email;
					$targets{$person_phone.'@'.$person_provider}++ if $person_phone && $person_provider;
				}
			}
		}

		unless ($sendto eq "judges") {

			my $entries_sth = $dbh->prepare("
				select person.email, person.phone, person.provider
					from panel, ballot, person, entry_student, student
				where panel.round = ?
					and panel.id = ballot.panel
					and ballot.entry = entry_student.entry
					and entry_student.student = student.id
					and student.person = person.id
					and person.no_email = 0
				$limit
				group by person.id
			");

			my $ef_sth = $dbh->prepare("
				select
					person.email, person.phone, person.provider
				from (panel, ballot, entry, follower, person)
				where panel.round = ?
					and panel.id = ballot.panel
					and ballot.entry = entry.id
					and entry.id = follower.entry
					and person.id = follower.person
					and person.no_email = 0
				$limit
				group by follower.id
			");

			$entries_sth->execute($round->id);

			while (
				my (
					$person_email, $person_phone, $person_provider
				) = $entries_sth->fetchrow_array()
			) {
				$person_counter++;
				$targets{$person_email}++ if $person_email;
				$targets{$person_phone.'@'.$person_provider}++ if $person_phone && $person_provider;
			}

			unless ($ARGS{"no_followers"}) {
				$ef_sth->execute($round->id);

				while (
					my (
						$person_email, $person_phone, $person_provider
					) = $ef_sth->fetchrow_array()
				) {
					$person_counter++;
					$targets{$person_email}++ if $person_email;
					$targets{$person_phone.'@'.$person_provider}++ if $person_phone && $person_provider;
				}
			}
		}
	}

	if ($include_motion) {
		$message .= "\r\n " if $message;
		$message .= " Motion: ".$motion;
	}

	my @sendto = sort {$a cmp $b} keys %targets;
	my $from_string = $round->event->tourn->name."<".$round->event->tourn->webname.'@www.tabroom.com>';

	$m->comp(
		"/funclib/send_notify.mas",
		from    => $from_string,
		array   => \@sendto,
		subject => "Message from Tab",
		body    => $message
	);

	$counter += scalar @sendto;

	my $msg = "$counter messages sent to $person_counter recipients ";

	if ($ARGS{"return"}) {
		return $msg;
	}

	$m->redirect("blast.mhtml?round_id=$round_id&msg=$msg");

</%init>
