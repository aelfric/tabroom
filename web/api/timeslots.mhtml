<%args>
	$tourn_id => undef
	$api_id   => undef
	$api_key  => undef
</%args>
<%init>

	my $person;
	my $tourn;

	unless ($r->hostname eq "local.tabroom.com") {

		($person, $tourn) = $m->comp("login_api.mas",
			method    => "api_key",
			person_id => $api_id,
			api_key   => $api_key,
			tourn_id  => $tourn_id,
		);

		unless ($person && $tourn) {

			$m->print("No valid API user or key sent");
			$m->abort();
		}

	} else {

		$person = Tab::Person->retrieve(1);
		$tourn = Tab::Tourn->retrieve($tourn_id);
	}

    my $tz = $tourn->tz;
    $tz = "UTC" unless $tz;
    my $now = DateTime->now->set_time_zone($tz);

	my $tourn_name = $tourn->name;
	$tourn_name =~ s/[\W_]//g;

	my $filename = "Timeslots-".$tourn_name.".csv";

	my $dbh = Tab::DBI->db_Main();

	$m->clear_buffer;
	$r->content_type('application/csv');
	$r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	$m->print("RoundID,");
	$m->print("RoundNumber,");
	$m->print("RoundLabel,");
	$m->print("RoundStart,");
	$m->print("TimeslotID,");
	$m->print("TimeslotName,");
	$m->print("TimeslotStart,");
	$m->print("EventID,");
	$m->print("EventName,");
	$m->print("EventAbbr\n");

	my $sth = $dbh->prepare("
		select
			round.id,
			round.name, round.label,
			CONVERT_TZ(round.start_time, '+00:00', tourn.tz),
			timeslot.id, timeslot.name,
			CONVERT_TZ(timeslot.start, '+00:00', tourn.tz),
			event.id, event.name, event.abbr

		from round, timeslot, event, tourn

		where tourn.id = ?
			and timeslot.tourn = tourn.id
			and timeslot.id = round.timeslot
			and event.id = round.event
		order by event.name, round.name
	");

	$sth->execute($tourn->id);

	while (
		my (
			$id, $number, $label,
			$start_time,
			$timeslot_id, $timeslot_name,
			$timeslot_start,
			$event_id, $event_name, $event_abbr
		) = $sth->fetchrow_array()
	) {

		$m->print('"');
		$m->print($id.'","');
		$m->print($number.'","');
		$m->print($label.'","');
		$m->print($start_time.'","');
		$m->print($timeslot_id.'","');
		$m->print($timeslot_name.'","');
		$m->print($timeslot_start.'","');
		$m->print($event_id.'","');
		$m->print($event_name.'","');
		$m->print($event_abbr.'"'."\n");
	}

	$sth->finish();
	$dbh();

	$m->flush_buffer();
	$m->abort();

</%init>
