<%args>
	$api_key        => undef
	$api_id         => undef
	$tourn_id       => undef
</%args>
<%init>

    $m->clear_buffer();
    $r->content_type('application/json');

	my ($person, $tourn) = $m->comp("login_api.mas",
		method    => "api_key",
		person_id => $api_id,
		api_key   => $api_key,
		tourn_id  => $tourn_id,
	);

	unless ($person && $tourn) {

		my %output = (
			error => \1,
			message => 'No valid API user or key sent'
		);

		$m->print(JSON::encode_json(\%output));
		$m->abort();
	}

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select school.id, school.name, school.state,
			contact_name.value,
			contact_email.value,
			contact_number.value,
			second_contact_name.value,
			second_contact_email.value,
			second_contact_number.value

		from school
			left join school_setting contact_name on contact_name.school = school.id and contact_name.tag='contact_name'
			left join school_setting contact_email on contact_email.school = school.id and contact_email.tag='contact_email'
			left join school_setting contact_number on contact_number.school = school.id and contact_number.tag='contact_number'
			left join school_setting second_contact_name on second_contact_name.school = school.id and second_contact_name.tag='second_contact_name'
			left join school_setting second_contact_email on second_contact_email.school = school.id and second_contact_email.tag='second_contact_email'
			left join school_setting second_contact_number on second_contact_number.school = school.id and second_contact_number.tag='second_contact_number'

		where school.tourn = ?

		and exists (
			select entry.id
			from entry
			where entry.school = school.id
		)
	");

	$sth->execute($tourn->id);

	my @output;

	while (
		my (
			$id, $name, $state,
			$contact, $email, $number,
			$contact2, $email2, $number2
		) = $sth->fetchrow_array()
	) {

		my %school = (
			"id"       => $id,
			"name"     => $name,
			"state"    => $state,
			"contact"  => $contact,
			"email"    => $email,
			"number"   => $number,
			"contact2" => $contact2,
			"email2"   => $email2,
			"number2"  => $number2
		);

		push @output, \%school;
	}

	$m->print(JSON::encode_json(\@output));
	$m->abort();

</%init>

