<%args>

</%args>
<%init>

    use Net::LDAP;
    use Text::Undiacritic qw(undiacritic);

	$m->clear_buffer();

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			person.id, person.email,
			person.last, person.first, person.password,
			person.site_admin
		from person
		order by person.id
	");

	$m->print("<h4>Querying all persons.  This will take time.</h4>");
	$m->flush_buffer();

	$sth->execute();

	$m->print("<h4>Shuffling into oblivion</h4>");
	$m->flush_buffer();

	my $ldap = Net::LDAP->new( $Tab::ldap_server,
		port    => $Tab::ldap_port,
		version => 3,
		verify  => 'none'
	) or die "$@";

	my $mesg = $ldap->bind( $Tab::ldap_user, password => $Tab::ldap_pw);
	my $basedn = $Tab::ldap_dn;

	my $counter;

	while (
		my (
			$person_id,
			$person_email,
			$person_last, $person_first, $pass_crypt,
			$site_admin
		) = $sth->fetchrow_array()
	) {

		next unless $pass_crypt;

		my $dn = "uid=".$person_email.",ou=users,".$basedn;

		my $gn = "admins";
		$mesg = $ldap->search( base => $dn, filter => '(objectClass=*)');

		my $shell = "/bin/false";
		$shell = "/bin/bash" if $site_admin;
		my $pass_crypt = "{crypt}".$pass_crypt;

		#Apparently gecos hates utf8
		my $gecos = undiacritic($person_first." ".$person_last);
		$gecos =~ s/[^\w\s]//g;

		$mesg = $ldap->add( $dn,
			 attr => [
				 uid               => $person_email,
				 mail              => $person_email,
				 userPrincipalName => $person_email,
				 sn                => $person_last,
				 givenName         => $person_first,
				 cn                => $person_first." ".$person_last,
				 displayName       => $person_first." ".$person_last,
				 uidNumber         => $person_id,
				 gidNumber         => 5000,
				 employeeNumber    => $person_id,
				 employeeType      => "post",
				 gecos             => $gecos,
				 loginShell        => $shell,
				 homeDirectory     => "/tmp",
				 userPassword      => $pass_crypt,
				 objectclass       => [ 'inetOrgPerson','posixAccount','shadowAccount' ]
			 ]
		 );

		 unless ($counter++ % 10) {
		 	$m->print("<p>Did $person_id $person_email.  Completed $counter accounts now</p>");
			$m->flush_buffer();
		 }
	}

	$m->print("<h3>Fin</h3>");

	$sth->finish();
	;

</%init>
