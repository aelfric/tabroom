<%args>

</%args>
<%init>

	$m->print('<div class="blankfull">');

	my $now = DateTime->today();

	my $week_start = $now->clone();

	while ($week_start->day_of_week != 2) {
		$week_start->subtract(days => 1);
	}

	my $week_end = $week_start->clone();
	$week_end->add(days => 7);

	my $week_ref = ({
		start           => DateTime::Format::MySQL->format_datetime($week_start),
		end             => DateTime::Format::MySQL->format_datetime($week_end),
		member_group_id => 1,
		groupName       => "tabroom-weekly",
		groupId         => 56010202,
		phone           => 1
	});

	my $month_start = $now->clone();

	if ($month_start->day_of_month > 7) {
		while ($month_start->day_of_month != 1) {
			$month_start->add(days => 1);
		}
	} else {
		while ($month_start->day_of_month != 1) {
			$month_start->subtract(days => 1);
		}
	}

	my $month_end = $month_start->clone();
	$month_end->add(months => 1);

	my $month_ref = ({
		start     => DateTime::Format::MySQL->format_datetime($month_start),
		end       => DateTime::Format::MySQL->format_datetime($month_end),
		groupName => "tabroom-monthly",
		groupId   => 56011226
	});

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			person.id, person.email
		from person, permission, tourn
			where tourn.end  >= ?
			and tourn.start < ?
			and tourn.id = permission.tourn
			and permission.tag IN ('owner', 'contact')
			and permission.person = person.id
			and person.no_email != 1
			group by person.id
	");

	foreach my $ref ($week_ref, $month_ref) {

		$sth->execute($ref->{"start"}, $ref->{"end"});
		my $results = $sth->fetchall_hash();

		my %done;
		my %post = (
			member_group_id => 1,
			groupName       => $ref->{"groupName"},
			groupId         => $ref->{"groupId"}
		);

		my $count;
		$m->print("<h4>phone is ".$ref->{"phone"}."</h4>");

		foreach my $person (@{$results}) {

			unless ($done{$person->{'email'}}++) {
				my %mail = (email => $person->{"email"});
				push @{$post{"members"}}, \%mail;
				$count++;
			}
		}

		if ($count) {

			my ($results_hash, $raw) = $m->comp(
				"/funclib/nsda/api_client.mas",
				path     => "/emma/groups",
				post_ref => \%post
			);

			$m->print("<code>");
			$m->print(JSON::encode_json(\%post));
			$m->print("<br />");
			$m->print($raw);
			$m->print("<code>");
			$m->print("<br />");
			$m->flush_buffer();

		}
	}

	$m->print('</div>');

</%init>
