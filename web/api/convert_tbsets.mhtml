<%args>

</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select protocol.id,
			truncate_to_smallest.value,
			truncate_ranks_to.value,
			mfl_time_violation.value,
			truncate_prelims.value,
			truncate_elims.value,
			truncate_finals.value,
			tiebreak.id

		from protocol
			left join protocol_setting truncate_to_smallest
				on truncate_to_smallest.protocol = protocol.id
				and truncate_to_smallest.tag = 'truncate_to_smallest'

			left join protocol_setting truncate_ranks_to
				on truncate_ranks_to.protocol = protocol.id
				and truncate_ranks_to.tag = 'truncate_ranks_to'

			left join protocol_setting mfl_time_violation
				on mfl_time_violation.protocol = protocol.id
				and mfl_time_violation.tag = 'mfl_time_violation'

			left join protocol_setting truncate_prelims on truncate_prelims.protocol = protocol.id and truncate_prelims.tag = 'truncate_prelims'
			left join protocol_setting truncate_elims on truncate_elims.protocol = protocol.id and truncate_elims.tag = 'truncate_elims'
			left join protocol_setting truncate_finals on truncate_finals.protocol = protocol.id and truncate_finals.tag = 'truncate_finals'
			left join tiebreak on tiebreak.protocol = protocol.id and tiebreak.count = 'all'

		group by protocol.id
		order by protocol.id
	");

	$sth->execute();

	my $truncate_rank_sth = $dbh->prepare("
		update tiebreak set truncate = ?
		where protocol = ?
			and count = ?
			and name in (
				'chair_ranks',
				'downs',
				'judgepref',
				'non_chair_ranks',
				'points',
				'po_points',
				'ranks',
				'reciprocals',
				'student_nominee',
				'student_rank',
				'student_ranks',
				'student_recip'
			)
	");

	my $truncate_smol_sth = $dbh->prepare("
		update tiebreak set truncate_smallest = 1
		where protocol = ?
			and count = ?
			and name in (
				'chair_ranks',
				'downs',
				'judgepref',
				'non_chair_ranks',
				'points',
				'po_points',
				'ranks',
				'reciprocals',
				'student_nominee',
				'student_rank',
				'student_ranks',
				'student_recip'
			)
	");

	my $tv_sth = $dbh->prepare("
		update tiebreak set violation = 1
		where protocol = ?
			and name in (
				'chair_ranks',
				'judgepref',
				'non_chair_ranks',
				'ranks',
				'reciprocals',
				'student_rank',
				'student_ranks',
				'student_recip'
			)
	");

	my %useme = (
		'chair_ranks'     => 1,
		'downs'           => 1,
		'judgepref'       => 1,
		'non_chair_ranks' => 1,
		'points'          => 1,
		'po_points'       => 1,
		'ranks'           => 1,
		'reciprocals'     => 1,
		'student_nominee' => 1,
		'student_rank'    => 1,
		'student_ranks'   => 1,
		'student_recip'   => 1
	);

	while (
		my (
			$ts_id,
			$smallest,
			$ranks,
			$tv,
			$prelims,
			$elims,
			$finals,
			$all
		) = $sth->fetchrow_array()
	) {

		$m->flush_buffer();

		if ($tv) {
			$tv_sth->execute($ts_id);
			$m->print("Apply violation penalty to $ts_id <br />");
		}

		next unless ($smallest || $ranks);

		$m->print("fixing set $ts_id with small $smallest ranks $ranks <br />");

		if ($elims && $prelims && $finals) {

			if ($smallest) {

				$truncate_smol_sth->execute($ts_id, "all");
				$truncate_smol_sth->execute($ts_id, "final");
				$truncate_smol_sth->execute($ts_id, "prelim");
				$truncate_smol_sth->execute($ts_id, "elim");

			} elsif ($ranks) {

				$truncate_rank_sth->execute($ranks, $ts_id, "all");
				$truncate_rank_sth->execute($ranks, $ts_id, "final");
				$truncate_rank_sth->execute($ranks, $ts_id, "prelim");
				$truncate_rank_sth->execute($ranks, $ts_id, "elim");
			}

			next;
		}

		if ($elims) {
			if ($smallest) {
				$truncate_smol_sth->execute($ts_id, "elim");
			} elsif ($ranks) {
				$truncate_rank_sth->execute($ranks, $ts_id, "elim");
			}
		}

		if ($prelims) {
			if ($smallest) {
				$truncate_smol_sth->execute($ts_id, "prelim");
			} elsif ($ranks) {
				$truncate_rank_sth->execute($ranks, $ts_id, "prelim");
			}
		}

		if ($finals) {
			if ($smallest) {
				$truncate_smol_sth->execute($ts_id, "final");
			} elsif ($ranks) {
				$truncate_rank_sth->execute($ranks, $ts_id, "final");
			}
		}

		if ($all) {

			$m->print("I have sets that cover all.  Splitting them <br />");

			$smallest = 0 unless $smallest;
			$ranks = 0 unless $ranks;

			foreach my $tb (Tab::Tiebreak->search( count => "all", protocol => $ts_id )) {

				next unless $useme{$tb->name};

				if ($elims) {
					$tb->copy({
						count             => "elim",
						truncate          => $ranks,
						truncate_smallest => $smallest
					});
				} else {
					$tb->copy({
						count             => "elim"
					});
				}

				if ($prelims) {
					$tb->copy({
						count             => "prelim",
						truncate          => $ranks,
						truncate_smallest => $smallest
					});
				} else {
					$tb->copy({
						count             => "prelim"
					});
				}

				if ($finals) {
					$tb->copy({
						count             => "final",
						truncate          => $ranks,
						truncate_smallest => $smallest
					});
				} else {
					$tb->copy({
						count             => "final"
					});
				}

				$tb->delete();

			}
		}
	}

	$m->print("<h4>I HAVE FINISHED!</h4>");

	$dbh();

</%init>
