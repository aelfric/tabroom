<%args>
	$person
	$target_id    => undef
	$return       => undef
</%args>
<%init>

	my @replacements = (
		 {table => "student"        , field => "person"}         ,
		 {table => "student"        , field => "person_request"} ,
		 {table => "judge"          , field => "person"}         ,
		 {table => "chapter_judge"  , field => "person"}         ,
		 {table => "chapter_judge"  , field => "person_request"} ,
		 {table => "permission"     , field => "person"}         ,
		 {table => "follower"       , field => "person"}         ,
		 {table => "follower"       , field => "follower"}       ,
		 {table => "conflict"       , field => "person"}         ,
		 {table => "conflict"       , field => "conflicted"}     ,
		 {table => "conflict"       , field => "added_by"}       ,
		 {table => "entry"          , field => "registered_by"}  ,
		 {table => "fine"           , field => "deleted_by"}     ,
		 {table => "fine"           , field => "levied_by"}      ,
		 {table => "tourn_ignore"   , field => "person"}         ,
		 {table => "change_log"     , field => "person"}         ,
		 {table => "campus_log"     , field => "person"}         ,
		 {table => "strike"         , field => "entered_by"}     ,
		 {table => "ballot"         , field => "entered_by"}     ,
		 {table => "ballot"         , field => "started_by"}     ,
		 {table => "ballot"         , field => "audited_by"}     ,
		 {table => "site"           , field => "host"}           ,
		 {table => "session"        , field => "person"}         ,
		 {table => "school_setting" , field => "value"           , tag => 'disclaimed'}     ,
		 {table => "round_setting"  , field => "value"           , tag => 'nsda_confirmed'}
	);

	my $target = eval {
		return Tab::Person->retrieve($ARGS{"target_id"});
	};

	unless ($target) {

		if ($ARGS{"return"}) {
			return "No merging target found with ID ".$ARGS{'target_id'};
		}

		$m->comp("/funclib/abort.mas",
			message => "No target for merging found."
		);
	}

	my @ids;
	my %target_settings = $target->all_settings();

	my $dbh = Tab::DBI->db_Main();

	my $counter;

	foreach my $key (keys %ARGS) {

		next unless $ARGS{$key} == 1;
		next unless (index($key, "pick_") != -1);

		$counter++;

		$key =~ s/[\D_]//g;

		foreach my $pair (@replacements) {

			my $query = "update ".$pair->{table}." set ".$pair->{"field"}." = ? where ".$pair->{"field"}." = ?";

			if ($pair->{"tag"}) {
				$query .= " and tag = '".$pair->{"tag"}."'";
			}

			my $sth = $dbh->prepare($query);

			# wrap it in an eval since when merging I don't actually care about key collisions
			eval {
				$sth->execute($target, $key);
			};
			$sth->finish();
		}

		my $sth = $dbh->prepare("
			select
				person.id, person.phone, person.provider, person.nsda, person.site_admin,
				paradigm.value_text, paradigm_timestamp.value_date

			from person

				left join person_setting paradigm
					on paradigm.person = person.id
					and paradigm.tag   = 'paradigm'

				left join person_setting paradigm_timestamp
					on paradigm_timestamp.person = person.id
					and paradigm_timestamp.tag   = 'paradigm_timestamp'

			where person.id = ?
		");

		$sth->execute($key);

		my ($id, $phone, $carrier, $nsda, $site_admin, $paradigm_text, $paradigm_timestamp) = $sth->fetchrow_array();

		$sth->finish();

		$sth = $dbh->prepare("
			delete from person_setting where person = ?
		");

		$sth->execute($key);

		$sth = $dbh->prepare("
			delete from person where id = ?
		");

		$sth->execute($key);
		$sth->finish();


		if ($paradigm_text && (not defined $target_settings{"paradigm"})) {
			$target_settings{"paradigm"} = $paradigm_text;
			$target->setting("paradigm", "text", $paradigm_text);
			$target->setting("paradigm_timestamp", "date", $paradigm_timestamp);
		}

		if ($site_admin && (not defined $target->site_admin)) {
			$target->site_admin($site_admin);
			$target->update();
		}

		if ($nsda && (not defined $target->nsda)) {
			$target->nsda($nsda);
			$target->update();
		}

		if ($phone && (not defined $target->phone)) {
			$target->phone($phone);
			$target->provider($carrier);
			$target->update();
		}

	}

	;

	my $msg .= "Merged $counter accounts into ".$target->email;

	if ($ARGS{'return'}) {
		return $msg;
	}

	$m->redirect("person_merge.mhtml?target_id=".$target->id."&msg=$msg");

</%init>
