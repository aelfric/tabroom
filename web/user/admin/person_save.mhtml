<%args>
	$edit_id
	$first
	$last
	$email
	$middle         => undef
	$pronoun        => undef
	$phone          => undef
	$provider       => undef
	$street         => undef
	$city           => undef
	$state          => undef
	$country        => undef
	$no_email       => 0
	$zip            => undef
	$site_admin     => undef
	$nsda_admin     => 0
	$naudl_admin    => 0
	$banned         => 0
	$scream_in_pain => 0
	$timezone       => undef
	$nsda           => undef
	$api_key        => undef
	$person
</%args>
<%init>

	use Email::Valid;

	$phone  =~ s/\D//g;
	$email  =~ s/\s+//g;
	$email = lc($email);

	my $emailok = Email::Valid->address(
		-address => $email,
		-mxcheck => 1
	) ? 'yes' : 'no';

	unless ($emailok eq "yes") {
		my $err = "That email address is not valid.  Please enter a valid address. $emailok";
		$m->redirect("person_edit.mhtml?edit_id=$edit_id&err=$err");
	}

	my $edit = Tab::Person->retrieve($edit_id);

	if ($email ne lc($edit->email)) {

		my $existing = Tab::Person->search( email => $email)->first;

		if ($existing) {
			my $err = "Email address $email already has an account belonging to: ";
			$err   .= $existing->first." ".$existing->last." (".$existing->email.") ";
			$m->redirect("/user/admin/person_edit.mhtml?err=$err");
		}
	}

	$edit->first($first);
	$edit->middle($middle);
	$edit->pronoun($pronoun);
	$edit->last($last);
	$edit->street($street);
	$edit->city($city);
	$edit->email($email);
	$edit->state($state);
	$edit->country($country);
	$edit->no_email($no_email);
	$edit->zip($zip);
	$edit->site_admin($site_admin);
	$edit->phone($phone);
	$edit->tz($timezone);
	$edit->provider($provider);

	$edit->update();

	my %edit_settings = $edit->all_settings();

	$api_key =~ s/[\W_]//g;
	undef $api_key if $api_key < 1;

	foreach my $tag (
		"nsda_admin",
		"naudl_admin",
		"banned",
		"scream_in_pain",
		"email_unconfirmed",
		"email_confirmation_key",
		"api_key"
	) {

		if ($ARGS{$tag} eq "0" || $ARGS{$tag} eq "") {
			undef($ARGS{$tag});
		}

		if ($edit_settings{$tag} && (not defined $ARGS{$tag})) {
			$edit->setting($tag, 0);
		} elsif ($ARGS{$tag} ne $edit_settings{$tag}) {
			$edit->setting($tag, $ARGS{$tag});
		}
	}

	$nsda =~ s/[\D_]//g;
	undef $nsda if $nsda < 1;

	my $other_user = Tab::Person->search( nsda => $nsda )->first if $nsda;

	my $err;

	if ($other_user && $other_user->id != $edit->id) {
		$err = "Changes saved, but another account (".$other_user->email.") is already linked to NSDA ID $nsda, so that was skipped";
	}

	unless ($err) {

		$edit->nsda($nsda);
		$edit->update();

		my $membership = $m->comp("/funclib/nsda/membership.mas", person => $edit, force => 1);

		unless ($membership && $membership->{"person_id"}) {
			$err .= "Changes saved, but the NSDA ID $nsda does not match an NSDA record, so no link was made.";
		}
	}

	$m->comp("/funclib/ldap_person.mas", person => $person);
    Tab::log("PROFILE CHANGE BY ADMIN: Account ID ".$edit->id." changed ($email) from IP address ".$ENV{REMOTE_ADDR}." by ".$person->email) ;

	my $msg = "Changes saved";
	$m->redirect("person_edit.mhtml?edit_id=$edit_id&msg=$msg");

</%init>
