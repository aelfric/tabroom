<%args>
	$person
	$school
</%args>
<%init>

	my $tourn = $school->tourn;
	my $msg;

	my $event = Tab::Event->retrieve($ARGS{'event_id'});
	my %event_settings = $event->all_settings();

	my $err;
	my @existing = $school->files(tag => "legislation");

	unless ($ARGS{"label"}) {
		$err .= "Each bill must have a title";
	}

	if ($event_settings{"legislation_cap"}
		&& (scalar @existing >= $event_settings{"legislation_cap"})
	) {
		$err .= "Each school is limited to ".$event_settings{"legislation_cap"}." pieces of legislation";
	}


	if ($event_settings{"bill_category_cap"}) {

		my $category_count;
		foreach my $bill (@existing) {
			$category_count++ if $bill->tag eq $ARGS{"category"};
		}

		if ($category_count >= $event_settings{"legislation_cap"}) {
			$err .= "Each school is limited to ".$event_settings{"legislation_cap"};
			$err .= " pieces of legislation per category. ".$ARGS{"category"}." is already at the limit.";
		}

	}

	if ($event_settings{"bill_category_required"}) {
		unless ($ARGS{"category"}) {
			$err .= "Each bill must have a category";
		}
	}

	if ($event_settings{"bill_author_required"}) {
		unless ($ARGS{"author"}) {
			$err .= "Each bill must have an entry listed as the author.";
		}
	}

	my $now = DateTime->now();

	if ($event_settings{"bill_deadline"}
		&& ($event_settings{"bill_deadline"} < $now)
	) {
		$err .= "Bill submission deadline has passed.";
	}

	if ($err) {
		$m->redirect("legislation.mhtml?school_id=".$school->id."&err=$err");
	}

	my $req = Apache2::Request->new($r);
	my $upload = $req->upload("legislation");

	my $filename = $m->comp("/funclib/upload_test.mas", upload => $upload);
	my $filetemp = $upload->tempname;

	my $label = $ARGS{"label"};
	$label = $filename unless $label;

	# Strip trailing or leading whitespace
	$label =~ s/^\s+//;
	$label =~ s/\s+$//;

	my $file = Tab::File->create({
		event         => $ARGS{"event_id"},
		school        => $school->id,
		tourn         => $tourn->id,
		filename      => $filename,
		label         => $label,
		tag           => "legislation",
		bill_category => $ARGS{"category"},
		entry         => $ARGS{"author"},
		uploaded      => $now
	});

	system $Tab::s3_cmd." put $filetemp ".$Tab::s3_bucket."/tourns/".$tourn->id."/legislation/".$file->id."/".$filename;

	$msg .= "<br />" if $msg;
	$msg .= "Legislation $label uploaded";

	$m->redirect("legislation.mhtml?school_id=".$school->id."&msg=$msg");



</%init>
