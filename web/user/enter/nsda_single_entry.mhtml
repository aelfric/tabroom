<%args>
	$school_id
	$person
	$person_settings
	$perms
</%args>
<%init>

	my $school = Tab::School->retrieve($school_id);
	my $chapter = $school->chapter;
	my $tourn  = $school->tourn;

	my %event_by_id = map {$_->id => $_} ($tourn->events() );

	my %district_entry = $m->comp(
		"/funclib/district_entry.mas",
		tourn   => $tourn,
		chapter => $chapter
	);

	my $blob = $school->setting("single_entry_letters");
	my %priorities = %{JSON::decode_json($blob)} if $blob;
	my $nationals = $m->comp("/funclib/current_nationals.mas");

	my %autoquals = %{JSON::decode_json($nationals->setting('autoquals'))}
		if $nationals
		&& $nationals->setting('autoquals');

	foreach my $key (keys %autoquals) {

		next unless $autoquals{$key}{"chapter"} == $chapter->id;
		my $nats_event = Tab::Event->retrieve($autoquals{$key}{"event"});
		my $district_event = Tab::Event->search( tourn => $tourn->id, abbr => $nats_event->abbr )->first;

		my $student_ids;
		my @students;

		foreach my $student_id (@{$autoquals{$key}{"students"}}) {
			$student_ids .= "-" if $student_id;
			$student_ids .= $student_id;
		}
		my $entry_id = "AQ-".$nats_event->id."-".$student_ids;

		foreach my $student_id (@{$autoquals{$key}{"students"}}) {

			unless ($district_entry{first_name}{$student_id}) {
				my $student = Tab::Student->retrieve($student_id);
				$district_entry{first_name}{$student_id} = $student->first;
				$district_entry{last_name}{$student_id} = $student->last;
			}

			$district_entry{student_total}{$student_id}++;
			$district_entry{"entry_event_abbr"}{$entry_id} = $district_event->abbr;
			$district_entry{"entry_event_aq"}{$entry_id}++;
			push @{$district_entry{"entries"}{$student_id}}, $entry_id;
		}
	}

	my %entries;
	my @student_ids = sort keys %{$district_entry{"entries"}};

	@student_ids = sort {
		$district_entry{'entries'}{$b} <=> $district_entry{'entries'}{$a}
	} @student_ids;

	foreach my $student_id (@student_ids) {

		foreach my $entry_id ( @{$district_entry{"entries"}{$student_id}} ) {

			push @{$entries{students}{$student_id}}, $entry_id;
			push @{$entries{entries}{$entry_id}}, $student_id;

			$entries{students}{"string"}{$student_id} .= " " if $entries{students}{"string"}{$student_id};
			$entries{students}{"string"}{$student_id} .= $entry_id;

			$entries{entries}{"string"}{$student_id} .= " " if $entries{entries}{"string"}{$student_id};
			$entries{entries}{"string"}{$student_id} .= $student_id;
		}
	}

	@student_ids = sort {
		$district_entry{'first_name'}{$a} cmp $district_entry{'first_name'}{$b}
	} @student_ids;

	@student_ids = sort {
		$district_entry{'last_name'}{$a} cmp $district_entry{'last_name'}{$b}
	} @student_ids;

	@student_ids = sort {
		$district_entry{'student_total'}{$b} <=> $district_entry{'student_total'}{$a}
	} @student_ids;

</%init>

	<script>

		$(document).ready(function(){

			$(document).data("schoolData", <% JSON::encode_json(\%entries) %>);

			$('.slotselects').each(function() {
				$(this).data("previous", $(this).val());
			});

		});

		function syncDoubled(selectElement) {

			var slotID        = $(selectElement).attr("slot");
			var studentID     = $(selectElement).attr("student");
			var schoolData    = $(document).data("schoolData");
			var entryID       = $("#"+studentID+"-"+slotID).val();
			var previousEntry = $("#"+studentID+"-"+slotID).data('previous');

			if (previousEntry == entryID) {
				return;
			}

			// Change the jquery data to reflect my new Entry ID
			$("#"+studentID+"-"+slotID).data('previous', entryID);

			// Make sure that the entry does not appear in another slot for me.
			$("."+studentID).each(function() {
				var otherSlot = $(this).attr("slot");
				var otherEntry = $(this).val();

				if (otherSlot != slotID && otherEntry == entryID) {
					// Change flag here keeps my partner in sync as well;
					$(this).val(previousEntry).change();
					$("#"+studentID+"-"+otherSlot).data('previous', previousEntry);
				}
			});

			if (schoolData.entries[entryID]) {

				schoolData.entries[entryID].forEach(function(partnerID) {

					// Check all the partners of the selected entry and force this to
					// the same slot, and remove the entry from any other slot.
					if (partnerID != studentID) {

						var originalEntry = $("#"+partnerID+"-"+slotID).val();
						$("#"+partnerID+"-"+slotID).val(entryID);
						$("#"+partnerID+"-"+slotID).data('previous', entryID);

						if (!originalEntry) {
							originalEntry = 0;
						}

						$("."+partnerID).each(function() {
							var otherSlot = $(this).attr("slot");
							var otherEntry = $(this).val();

							if (otherSlot != slotID && otherEntry == entryID) {
								$(this).val(originalEntry);
								$("#"+partnerID+"-"+otherSlot).data('previous', originalEntry);
							}
						});
					}
				});
			}
		}

	</script>

	<&
		"nsda_menu.mas",
		school => $school,
		whoami => "doubleentry"
	&>

	<div class="main">

        <& "tabbar.mas",
			school => $school,
			whoami => "nsda"
		&>

		<div class="full martopmore">
			<span class="true threequarters nospace">
				<h4 class="nospace">
					Single Entry Preferences
				</h4>
			</span>
			<span class="true quarter rightalign nospace">
				<a
					class="buttonwhite bluetext invert padvert"
					href="https://www.speechanddebate.org/wp-content/uploads/Single-Entry-Letter-of-Intent_Combined_2023-09-13_Fill-in.pdf"
				>
					<span class="fa fa-lg fa-file-pdf-o"></span>
					Download Form
				</a>
			</span>
		</div>

		<span class="full centeralign redtext semibold padvertmore">
			You should bring a signed Single Entry Letter of Intent
			for each double entered individual to Districts:
		</span>


		<form
			id     = "intentSave"
			action = "nsda_single_entry_save.mhtml"
			method = "post"
		>

		<input
			type  = "hidden"
			name  = "school_id"
			value = "<% $school->id %>"
		>

%		foreach my $student_id (@student_ids) {

			<div class="small row">

				<span class="fifth semibold padtop">
					<% $district_entry{"first_name"}{$student_id} %>
					<% $district_entry{"last_name"}{$student_id} %>

					<div class="full bluetext marno padvertless italic">
						<% $district_entry{'student_total'}{$student_id} %> entries
					</div>
				</span>

				<span class="fifth nospace">

					<div class="full nospace">
<%perl>
						foreach my $entry_id (
							sort {
								$district_entry{"entry_event_abbr"}{$a} cmp $district_entry{"entry_event_abbr"}{$b}
							} @{$entries{students}{$student_id}}
						) {
</%perl>
							<span
								class="marno quarter marverno padvertless"
							>
								<% $district_entry{"entry_event_aq"}{$entry_id} ? "AutoQual: " : "" %>
								<% $district_entry{"entry_event_abbr"}{$entry_id} %>
								<% $district_entry{"partner_string"}{$entry_id}{$student_id}
									? "w/".$district_entry{"partner_string"}{$entry_id}{$student_id}
									: ""
								%>
							</span>
%						}
					</div>

				</span>

				<span class="threefifths marno">

%					my $count = scalar  @{$entries{students}{$student_id}} + 1;
%					my $first++ if scalar @{$entries{students}{$student_id}} == 1;

%					foreach my $slot (1 .. $count) {

						<span class="fifth marno">
							<% $slot %>.
							<select
								id       = "<% $student_id %>-<% $slot %>"
								student  = "<% $student_id %>"
								slot     = "<% $slot %>"
								class    = "fixedtiny plain slotselects <% $student_id %>"
								name     = "<% $student_id %>-<% $slot %>"
								onChange = "syncDoubled(this);";
							>

								<option value="0"></option>

%								foreach my $entry_id (@{$entries{students}{$student_id}}) {
									<option
										value = "<% $entry_id %>"
										<% ($priorities{$student_id}{$entry_id} eq $slot)
											|| $first && $slot == 1
											? 'selected="selected"'
											:  ""
										%>
									> <% $district_entry{"entry_event_abbr"}{$entry_id} %> </option>
%								}

								<option
									id      = "<% $student_id %>-WS-<% $slot %>"
									value   = "WS"
									<% ($priorities{$student_id}{"WS"} eq $slot)
										? 'selected="selected"'
										:  ""
									%>
								>WS: World Schools</option>

							</select>
						</span>
%					}
				</span>
			</div>
%		}

		<div class="liblrow rightalign">
			<input
				type    = "submit"
				value   = "Save Preferences"
			>
			</form>
		</div>
	</div>
