<%args>
	$school_id
	$contact_name          => undef
	$contact_number        => undef
	$contact_email         => undef
	$second_contact_name   => undef
	$second_contact_number => undef
	$second_contact_email  => undef
	$school_code           => undef
	$refund_payable        => undef
	$individuals           => undef
	$coaches               => undef
	$onsite                => undef
	$region_id             => undef
</%args>
<%perl>

	my $school = Tab::School->retrieve($school_id);
	my $tourn = $school->tourn;
	my $other = Tab::School->search( tourn => $tourn->id, code => $school_code)->first;

	undef ($other) if $other && $other->id == $school_id;

	$contact_email = lc($contact_email);
	$contact_number =~ s/[\D_]//g;

	$second_contact_email = lc($second_contact_email);
	$second_contact_number =~ s/[\D_]//g;

	$school->setting("contact_name", $contact_name);
	$school->setting("contact_email", $contact_email);
	$school->setting("contact_number", $contact_number);

	$school->setting("second_contact_name", $second_contact_name);
	$school->setting("second_contact_email", $second_contact_email);
	$school->setting("second_contact_number", $second_contact_number);

	$school->setting("individuals", $individuals);
	$school->chapter->setting("coaches", $coaches);

	my $book_coaches = $school->setting("tbook_coach_ids");
	my $delta;

	if ($ARGS{"coach_id"}) {

		my $coach = Tab::Person->retrieve($ARGS{'coach_id'});

		if ($coach) {
			$book_coaches->{$coach->id}{'first'} = $coach->first;
			$book_coaches->{$coach->id}{'last'} = $coach->last;
			$book_coaches->{$coach->id}{'middle'} = $coach->middle;
			my $membership = $m->comp("/funclib/nsda/membership.mas", person => $coach);
			$book_coaches->{$coach->id}{'diamonds'} = $membership->{"diamonds"};
			$delta++;
		}
	}

	my %coaches = map { $_->id => $_ } $m->comp("/funclib/school_tbook.mas", school => $school);

	foreach my $coach_id (keys %coaches) {
		my $coach = $coaches{$coach_id};
		my $membership = $m->comp("/funclib/nsda/membership.mas", person => $coach);
	}

	if ($ARGS{"coach_email"}) {
		my $coach = Tab::Person->search(email => $ARGS{'coach_email'})->first;
		if ($coach) {
			my $membership = $m->comp("/funclib/nsda/membership.mas", person => $coach);
			$book_coaches->{$coach->id}{'first'} = $coach->first;
			$book_coaches->{$coach->id}{'middle'} = $coach->middle;
			$book_coaches->{$coach->id}{'last'} = $coach->last;
			$book_coaches->{$coach->id}{'diamonds'} = $membership->{"diamonds"};
			$delta++;
		}
	}

	if ($delta) {
		$school->setting('tbook_coach_ids', "json", $book_coaches);
	}

	if ($ARGS{"mail_contact_name"}) {

		my $address = $m->comp("/funclib/address.mas",
			saveme => "yasqueen",
			tag    => "mail",
			input  => \%ARGS
		);

		$school->setting("mail_address", "json", $address);
	} else {
		$school->setting("mail_address", 0);
	}

	# Middle School
	$school->setting("contact_hotel", $ARGS{"contact_hotel"});
	$school->setting("hotel", $ARGS{"hotel"});
	$school->setting("contact_hotel_rooms", $ARGS{"contact_hotel_rooms"});
	$school->setting("hotel", $ARGS{"hotel"});

	if ($ARGS{"contact_hotel_checkout"}) {
		my $dt;
		my $tz = $tourn->tz;
		$tz = "UTC" unless $tz;

		my $time = "00:00:00";

		eval {
			$dt = Tab::dtme($ARGS{"contact_hotel_checkout"}, $time, $tz);
		};

		$school->setting("contact_hotel_checkout", "date", $dt) if $dt;
	}

	my %contacts;

	foreach my $category ($m->comp("/funclib/school_categories.mas", school => $school)) {
		$contacts{$category->id}{"name"}  = $ARGS{$category->id."_name"};
		$contacts{$category->id}{"email"} = $ARGS{$category->id."_email"};
		$contacts{$category->id}{"phone"} = $ARGS{$category->id."_phone"};
		$contacts{$category->id}{"phone"} =~ s/[\D_]//g;
	}

	my $encoded = eval{
		return JSON::encode_json(\%contacts);
	};

	if ($encoded) {
		$school->setting('category_contacts', "text", $encoded);
	} else {
		$school->setting('category_contacts', 0);
	}

	$school->setting("refund_method", $ARGS{"refund_method"});
	$school->setting("refund_judge_bond", $ARGS{"refund_judge_bond"});

	my $err;

	if ($ARGS{"refund_method"} eq "check") {

		$school->setting("refund_payable", "text", $refund_payable);

		my $address;

		if ($ARGS{"refund_street"}) {

			$address = $m->comp("/funclib/address.mas",
				saveme => "yasqueen",
				tag    => "refund",
				input  => \%ARGS
			);

			$school->setting("refund_address", "json", $address);
		}

		unless ($address) {
			$err =  "You must enter a mailing address  for your refund if you select a check";
		}

	} else {
		$school->setting("refund_address", 0);
		$school->setting("refund_payable", 0);
	}

	if ($tourn->setting("school_codes") eq "registrant" && $school_code) {
		$school->code(substr($school_code, 0, 6)) unless $other;
		$err = "School code $school_code taken; please choose a unique code" if $other;
	}

	my $msg = "Contact and name information saved. ";

	if ($tourn->setting("ask_regions")) {

		my $region_circuit = $tourn->setting("region_circuit");
		$region_circuit = 0 unless $region_circuit;

		REGION:
		foreach my $region (
			$m->comp("/funclib/tourn_regions.mas",
				tourn   => $school->tourn,
				circuit => $region_circuit
			)
		) {

			if ($region->id == $region_id) {

				$school->region($region_id);
				$school->update;
				$msg .= $school->name." region updated to ".$school->region->name;

				if ($tourn->setting("region_circuit")) {
					my $membership = Tab::ChapterCircuit->search(
						chapter => $school->chapter,
						circuit => $tourn->setting("region_circuit")
					)->first;

					if ($membership) {
						$membership->region($region_id);
						$membership->update();
					}
				}

				last REGION;
			}
		}
	}

	$school->update();

	my $req     = Apache2::Request->new($r);
	my @handles = $r->upload;

	if (@handles) {
		my $upload = $req->upload($handles[0]);
		my $filename = $upload->filename;
		$filename =~ s/[^\w.]//g;
		$filename =~ s/\.(?=.*\.)//g;
		$filename =~ s/\s//g;

		my $filetemp = $upload->tempname;

		system $Tab::s3_cmd." put $filetemp ".$Tab::s3_bucket."/tourns/".$tourn->id."/school_upload/".$school->id."/$filename";

		$school->setting("upload_file", "text", $filename);
		$school->setting("upload_file_timestamp", "date", DateTime->now());
	}

	$m->redirect("/user/enter/onsite.mhtml?school_id=".$school->id."&err=$err") if $onsite;
	$m->redirect("/user/enter/entry.mhtml?school_id=".$school->id."&err=$err");

</%perl>
