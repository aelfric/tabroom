<%args>
	$person
	$target_id     => undef
	$property_name => undef
	$other_value   => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($target_id) {
		$m->print('{
			"error": true,
			"message": "No school ID sent"
		}');
		$m->abort();
	}

	my $school = Tab::School->retrieve($target_id);

	unless ($school) {
		$m->print('{
			"error": true,
			"message": "No school found for ID '.$target_id.'"
		}');
		$m->abort();
	}

	my $now = DateTime->now();

	if ($now > $school->tourn->reg_end) {
		$m->print('{
			"error": true,
			"message": "The tournament registration deadline has passed"
		}');
		$m->abort();
	}


	my $created_at = DateTime->now();

	my $errs;
	my $msg;
	my $counter;

	foreach my $entry ($school->entries( unconfirmed => 1)) {

		foreach my $student ($entry->students) {

			my %ok_events = $m->comp(
				"/funclib/student_clear_events.mas",
					student => $student,
					school  => $entry->school
			);

			unless ($ok_events{$entry->event->id}) {

				$errs .=  $student->first." ".$student->last." is not eligible ";
				$errs .= "to enter in ".$entry->event->name." due to double ";
				$errs .= "entry restrictions ";

			}

		}

		next if $errs;

		# Check if the event is in waitlist land
		my $waitlist_status = $m->comp(
			"/funclib/waitlist_status.mas",
				event  => $entry->event,
				school => $entry->school
		);

		$entry->unconfirmed(0);

		if ($waitlist_status) {
			$entry->waitlist(1);
		} else {
			$entry->waitlist(0);
		}

		$entry->created_at($created_at);
		$entry->registered_by($person->id);
		$entry->code($m->comp("/funclib/entry_code.mas", entry => $entry));
		$entry->update();

		$counter++;
	}

	$msg = $counter." entries registered into the tournament. ";
	$msg .= $errs if $errs;

	my %response = (
		error   => 0,
		message => $msg
	);

	$m->print(JSON::encode_json(\%response));

	$m->abort();

</%init>
