<%args>
	$school
	$person
	$entry_id => undef
	$certain  => undef
</%args>
<%init>

	my $entry = Tab::Entry->retrieve($entry_id) if $entry_id;

	unless ($entry) {
		my $err = "No entry found with the ID number $entry_id.";
		$m->redirect("entries.mhtml?school_id=".$school->id."&err=$err") if $err;
	}

	my $tourn = $school->tourn;
	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

    my $fifty_deadline = $tourn->setting("fifty_percent_deadline");
    $fifty_deadline->set_time_zone($tz) if $fifty_deadline;

    my $hundo_deadline = $tourn->setting("hundred_percent_deadline");
    $hundo_deadline->set_time_zone($tz) if $hundo_deadline;

	my $now = DateTime->now(
		time_zone => $tz
	);

	my %other_mains;
	my %supps;

	foreach my $student ($entry->students) {

		my %entries = $m->comp(
			"/funclib/nsda/nats_student_entries.mas",
			limit   => "all",
			tourn   => $school->tourn,
			student => $student
		);

		if ($entries{"main"}) {
			foreach my $entry (@{$entries{"main"}}) {
				next if $entry->id == $entry_id;
				next if $entry->setting("rejected_by");
				push @{$other_mains{$student->id}}, $entry;
			}
		}

		foreach my $type ("supp", "conn") {
			if ($entries{$type}) {
				foreach my $entry (@{$entries{$type}}) {
					push @{$supps{$student->id}}, $entry;
				}
			}
		}
	}

	if ($certain eq "Yes") {

		my $now = DateTime->now();

		$entry->unconfirmed(1);
		$entry->update();

		$entry->setting('rejected_by', $person->id);
		$entry->setting('rejected_at', "date", $now);

		my $msg = $m->comp(
			"/funclib/promote_slot.mas",
			entry  => $entry,
			person => $person
		);

		$msg .= "<br />" if $msg;
		$msg .= "Entry slot ".$entry->name." has been rejected";

        $m->comp("/funclib/log.mas",
            tourn       => $tourn->id,
            event       => $entry->event->id,
            school      => $school->id,
            type        => "rejections",
            person      => $person->id,
            description => $msg
        );

		if (keys %supps) {
			foreach my $student ($entry->students) {
				if ($other_mains{$student->id}) {
					foreach my $supp (@{$supps{$student->id}}) {
						$supp->unconfirmed(1);
						$supp->update();
					}
				} else {
					foreach my $supp (@{$supps{$student->id}}) {
						$supp->delete();
					}
				}
			}
		}

		my $created = $entry->created_at;
		$created->add(days => 7);

		unless (
			($entry->unconfirmed > 0)
			&& (not defined $entry->setting('rejected_by'))
		) {

			if ($created > $now) {

				# No fee for recently promoted alternates being dropped

			} elsif ( $hundo_deadline && $hundo_deadline < $now) {

				my $drop_reason = "Dropped entry ".$entry->name." in ".$entry->event->abbr;
				$drop_reason .= " after the ".$hundo_deadline->month."/".$hundo_deadline->day." deadline";

				my $fine = Tab::Fine->create({
					school    => $school->id,
					tourn     => $tourn->id,
					amount    => $entry->event->fee,
					reason    => $drop_reason,
					levied_at => $now,
					levied_by => $person->id
				});

				$msg .= " and the full late drop fine was assessed ";

			} elsif ( $fifty_deadline && $fifty_deadline < $now) {

				my $drop_reason = "Dropped entry ".$entry->name." in ".$entry->event->abbr;
				$drop_reason .= " after the ".$fifty_deadline->month."/".$fifty_deadline->day." deadline";

				my $fine = Tab::Fine->create({
					school    => $school->id,
					amount    => ($entry->event->fee / 2),
					reason    => $drop_reason,
					levied_at => $now,
					levied_by => $person->id
				});

				$msg .= " and a 50% late drop fine was assessed ";
			}
		}

		if ($ARGS{"return"}) {
			return $msg;
		} else {
			$m->redirect("entries.mhtml?school_id=".$school->id."&msg=$msg") if $msg;
		}

	} else {

</%init>

		<div class="main centeralign">

			<h2 class="nospace padvertmore martopmuchmore redtext marbottommore">
				Confirmation, please!
			</h2>

			<h5 class="nospace padvert semibold">
				Refusing slot for <% $entry->name %> in <% $entry->event->abbr %>
			</h5>

<%perl>

			if (keys %supps) {
				foreach my $student ($entry->students) {
					if ($supps{$student->id}) {
						$m->print("<h6 class='threequarters'>".$student->first." ".$student->last."'s ");
						$m->print(scalar @{$supps{$student->id}});
						$m->print(" supplemental entries");

						if ($other_mains{$student->id}) {
							$m->print(" will be de-activated until another entry is accepted.</h6>");
						} else {
							$m->print(" will <span class='inline redtext semibold'>also be deleted.</span></h6>");
						}
					}
				}
			}

</%perl>


			<span class="threequarters">

				<p class="bigger semibold">
					The district chair, and the coach of the next alternate
					entry will be automatically notifed of their eligibility to
					register for nationals.
				</p>

				<p class="bigger semibold orangetext">
					So please be absolutely certain that you want to refuse
					this specific entry to Nationals.  Once you confirm, only
					the National Office can undo it.
				</p>

			</span>

			<h6 class="marbottom">Confirm by typing Yes in the box:</h6>

%			if ($certain) {

				<p class="orangetext semibold bigger marvertmore">
					Confirmation failed: you typed "<% $certain %>" not Yes.
				</p>

				<p class="semibold bigger">
					I know it's nitpicky but we really want to be sure
					nobody's slot gets rejected or dropped by mistake.
				</p>
%			}

			<form action="reject.mhtml" method="post">

			<input
				type  = "hidden"
				name  = "entry_id"
				value = "<% $entry->id %>"
			>

			<input
				type  = "hidden"
				name  = "school_id"
				value = "<% $school->id %>"
			>

            <input
                type           = "text"
                name           = "certain"
                size           = "32"
                class          = "martop notfirst"
                autocomplete   = "off"
                autocorrect    = "off"
                autocapitalize = "off"
                spellcheck     = "false"
				placeholder    = "Please confirm"
            >

			<br />

			<input
				type  = "submit"
				class = "martopmore"
				value = "  Reject Entry "
			>
		</div>

%	}

