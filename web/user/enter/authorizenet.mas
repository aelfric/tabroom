<%args>
	$person
	$tourn
	$tourn_settings
	$total
	$school
</%args>

%	my $payment_fee = Math::Round::nearest(.01, $total * .04);
%	my $new_total = $total + $payment_fee;

    <!-- Set up a container element for the button -->
	<div class="full martopmuchmore rightalign">
		<form id="paymentForm" method="POST" action="/v1/user/enter/authorize">
			<input type="hidden" name="dataValue" id="dataValue" />
			<input type="hidden" name="dataDescriptor" id="dataDescriptor" />
			<button
				type="button"
				class="AcceptUI submit"
				style="width: 150px; height: 50px;"
				data-billingAddressOptions='{"show":true, "required":false}' 
				data-apiLoginID="<% $tourn_settings->{"authorizenet_api_login"} %>"
				data-clientKey="<% $tourn_settings->{"authorizenet_client_key"} %>"
				data-acceptUIFormBtnTxt="Submit" 
				data-acceptUIFormHeaderTxt="Payment Information"
				data-paymentOptions='{"showCreditCard": true, "showBankAccount": true}' 
				data-responseHandler="responseHandler"
			>
				Pay Now
			</button>
		</form>
	</div>

	<script type="text/javascript" src="https://jstest.authorize.net/v3/AcceptUI.js" charset="utf-8"></script>

	<script type="text/javascript">
		function responseHandler(response) {
			console.log(response);
			if (response.messages.resultCode === "Error") {
				var i = 0;
				while (i < response.messages.message.length) {
					console.log(
						response.messages.message[i].code + ": " +
						response.messages.message[i].text
					);
					i = i + 1;
				}
			} else {
				paymentFormUpdate(response.opaqueData);

				const body = {
					tourn: <% $tourn->id %>,
					...response,
				};

				try {
					fetch('<% $Tab::url_prefix %>/v1/user/enter/authorize', { method: 'POST', body: JSON.stringify(body), headers: { 'Content-Type': 'application/json' }});
					console.log('succeeded');
				} catch (err) {
					console.log(err);
					// actions.redirect('<% $Tab::url_prefix %>/user/enter/fees.mhtml?school_id=<% $school->id %>&msg="Failure recording payment"');
				}
			}
		}

		function paymentFormUpdate(opaqueData) {
			document.getElementById("dataDescriptor").value = opaqueData.dataDescriptor;
			document.getElementById("dataValue").value = opaqueData.dataValue;

			// If using your own form to collect the sensitive data from the customer,
			// blank out the fields before submitting them to your server.
			// document.getElementById("cardNumber").value = "";
			// document.getElementById("expMonth").value = "";
			// document.getElementById("expYear").value = "";
			// document.getElementById("cardCode").value = "";

			// document.getElementById("paymentForm").submit();
		}
	</script>
