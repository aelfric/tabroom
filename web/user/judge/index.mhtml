<%args>
	$person
	$person_settings
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("

		select
			judge.id, judge.first, judge.middle, judge.last,
				judge.code, judge.obligation, judge.hired,
			school.id, school.name,
			tourn.id, tourn.name, tourn.start, tourn.end, tourn.tz,
			CONVERT_TZ(tourn.reg_end, '+00:00', tourn.tz),
			CONVERT_TZ(judge_deadline.value_date, '+00:00', tourn.tz),
			weekend.id, weekend.name, weekend.start, weekend.end,
			category.id, category.name, category.abbr,
				vaccines.value, vax.value,
				diverse.value,
				nomination.value_text,
				diversity_notice.value_text,
				rounds_per.value,
				no_codes.value,
				diversity_selfie.value,
				required_quizzes.value_text,
				paradigm_quiz.value,
				conflicts.value,
				show_training.value,
				nsda_nats.value,
				show_judges.id,
				count(distinct panel.id),
			jpool.id, jpool.name

		from (judge, category, tourn)

			left join school on school.id = judge.school

			left join judge_setting diverse
				on diverse.judge = judge.id
				and diverse.tag = 'diverse'

			left join judge_setting nomination
				on nomination.judge = judge.id
				and nomination.tag = 'nomination'

			left join tourn_setting vaccines
				on vaccines.tag = 'vaccines'
				and vaccines.tourn = tourn.id

			left join person_setting vax
				on vax.person = judge.person
				and vax.tag = CONCAT('vaccine_', tourn.id)

			left join tourn_setting judge_deadline
				on judge_deadline.tag = 'weekend'
				and judge_deadline.tourn = tourn.id

			left join event on event.category = category.id

			left join event_setting cws
				on cws.tag = 'weekend'
				and cws.event = event.id

			left join weekend
				on cws.value = weekend.id
				and weekend.tourn = tourn.id

			left join category_setting diversity_notice
				on diversity_notice.category = category.id
				and diversity_notice.tag = 'diversity_notice'

			left join category_setting rounds_per
				on rounds_per.category = category.id
				and rounds_per.tag = 'rounds_per'

			left join category_setting no_codes
				on no_codes.category = category.id
				and no_codes.tag = 'no_codes'

			left join category_setting diversity_selfie
				on diversity_selfie.category = category.id
				and diversity_selfie.tag = 'diversity_selfie'

			left join category_setting required_quizzes
				on required_quizzes.category = category.id
				and required_quizzes.tag = 'required_quizzes'

			left join category_setting conflicts
				on conflicts.category = category.id
				and conflicts.tag = 'conflicts'

			left join category_setting show_training
				on show_training.category = category.id
				and show_training.tag = 'show_training'

			left join tourn_setting nsda_nats
				on nsda_nats.tourn = tourn.id
				and nsda_nats.tag = 'nsda_nats'

			left join jpool_judge jpj on jpj.judge = judge.id

			left join jpool on jpool.id = jpj.jpool

			left join jpool_setting paradigm_quiz
				on paradigm_quiz.tag = 'paradigm_quiz'
				and paradigm_quiz.jpool = jpj.jpool

			left join jpool_setting show_judges
				on show_judges.tag = 'show_judges'
				and show_judges.jpool = jpool.id

			left join ballot on ballot.judge = judge.id and ballot.audit = 1
			left join panel on ballot.panel = panel.id

			where judge.person = ?
				and judge.category = category.id
				and category.tourn = tourn.id
				and tourn.end > NOW()
				and tourn.hidden != 1

            and (
                exists (
                    select weekend.id
                        from weekend, event, event_setting cws
                    where weekend.tourn = tourn.id
                        and cws.tag = 'weekend'
                        and cws.value = weekend.id
                        and cws.event = event.id
						and event.category = category.id
                        and weekend.end > now()
                ) or not exists (
                    select weekend.id
						from weekend
                    where weekend.tourn = tourn.id
                )
            )

			and not exists (
				select jps.id
				from jpool_setting jps
				where jps.jpool = jpool.id
				and jps.tag = 'standby'
			)

			group by judge.id, jpool.id
			order by tourn.start
	");

	my $now = DateTime->now();
	my $nowstring = DateTime::Format::MySQL->format_datetime($now);
	$nowstring =~ s/[\D_]//g;

	$sth->execute($person->id);

	my $strike_sth = $dbh->prepare("
		select
			strike.id, strike.type,
				CONVERT_TZ(strike.start, '+00:00', tourn.tz) start,
				CONVERT_TZ(strike.end, '+00:00', tourn.tz) end,
			school.name school, entry.name entry,
			strike.registrant,
			strike.conflict


		from (strike, judge, category, tourn)
			left join school on strike.school = school.id
			left join entry on strike.entry = entry.id

		where strike.judge = ?
			and strike.judge = judge.id
			and judge.category = category.id
			and category.tourn = tourn.id
	");

</%init>

	<& "/user/menu.mas",
		person => $person,
		whoami => "judgeindex"
	&>

	<& "/funclib/push_notifications.mas",
		person          => $person,
		person_settings => $person_settings
	&>

	<div class="main">

		<h3 class="padvertless marvertno">
			Your Upcoming &amp; Present Judging
		</h3>

<%perl>

		my %judges;

		while (
			my (
				$judge_id, $judge_first, $judge_middle, $judge_last, $judge_code, $judge_obligation, $judge_hired,
				$school_id, $school_name,
				$tourn_id, $tourn_name, $tourn_start, $tourn_end, $tz,
				$reg_end,
				$judge_deadline,
				$weekend_id, $weekend_name, $weekend_start, $weekend_end,
				$category_id, $category_name, $category_abbr,
				$vaccines, $status,
				$diverse,
				$nomination,
				$diversity_notice,
				$rounds_per,
				$no_codes,
				$diversity_selfie,
				$required_quizzes,
				$paradigm_quiz,
				$conflicts,
				$show_training,
				$nsda_nats,
				$show_judges,
				$rounds_judged,
				$jpool, $jpool_name
			) = $sth->fetchrow_array()
		) {

			$judges{$judge_id}{"first"}       = $judge_first;
			$judges{$judge_id}{"middle"}      = $judge_middle;
			$judges{$judge_id}{"last"}        = $judge_last;
			$judges{$judge_id}{"code"}        = $judge_code;
			$judges{$judge_id}{"school_name"} = $school_name;
			$judges{$judge_id}{"vaccines"}    = $vaccines;
			$judges{$judge_id}{"status"}      = $status;

			$judges{$judge_id}{"category_name"}    = $category_name;
			$judges{$judge_id}{"rounds_per"}       = $rounds_per;
			$judges{$judge_id}{"no_codes"}         = $no_codes;
			$judges{$judge_id}{"rounds_judged"}    = $rounds_judged;
			$judges{$judge_id}{"nsda_nats"}        = $nsda_nats;
			$judges{$judge_id}{"diversity_selfie"} = $diversity_selfie;
			$judges{$judge_id}{"diversity_notice"} = $diversity_notice;
			$judges{$judge_id}{"diverse"}          = $diverse;
			$judges{$judge_id}{"conflicts"}        = $conflicts;
			$judges{$judge_id}{"show_training"}    = $show_training;
			$judges{$judge_id}{"nomination"}       = $nomination;
			$judges{$judge_id}{"tourn_name"}       = $tourn_name;
			$judges{$judge_id}{"tz"}               = $tz;
			$judges{$judge_id}{"tourn_start"}      = $tourn_start;
			$judges{$judge_id}{"reg_end"}          = $reg_end;
			$judges{$judge_id}{"judge_deadline"}   = $judge_deadline;
			$judges{$judge_id}{"tourn_end"}        = $tourn_end;
			$judges{$judge_id}{"tourn_id"}         = $tourn_id;
			$judges{$judge_id}{"weekend_name"}     = $weekend_name;
			$judges{$judge_id}{"weekend_start"}    = $weekend_start;
			$judges{$judge_id}{"weekend_end"}      = $weekend_end;
			$judges{$judge_id}{"weekend_id"}       = $weekend_id;
			$judges{$judge_id}{"category_id"}      = $category_id;
			$judges{$judge_id}{"tourn_id"}         = $tourn_id;
			$judges{$judge_id}{"obligation"}       = $judge_obligation;
			$judges{$judge_id}{"hired"}            = $judge_hired;
			$judges{$judge_id}{"rounds"}           = $judge_obligation + $judge_hired;

			$judges{$judge_id}{"sortdate"}       = $tourn_start;
			$judges{$judge_id}{"sortdate"}       =~ s/[\D_]//g;

			if ($show_judges) {
				push @{$judges{$judge_id}{"jpools"}}, "<br/>".$jpool_name;
			}

			unless ($judges{$judge_id}{"struck"}++) {
				$strike_sth->execute($judge_id);
				$judges{$judge_id}{"strikes"} = eval {
					return $strike_sth->fetchall_hash();
				};
			}

			my @quizzes;

			if ($required_quizzes) {

				my $reqs = eval {
					return JSON::decode_json($required_quizzes);
				};

				if ($reqs) {
					push @quizzes, @{$reqs};
					@quizzes = sort {$a cmp $b} @quizzes;
				}
			}

			if ($paradigm_quiz) {
				push @quizzes, $paradigm_quiz;
			}

			if (scalar @quizzes > 0) {
				$judges{$judge_id}{"quizzes"} = \@quizzes;
			}
		}

		foreach my $judge_id (
			sort {
				$judges{$a}{'sortdate'} <=> $judges{$b}{'sortdate'}
				|| $judges{$a}{"last"} cmp $judges{$b}{"last"}
			} keys %judges
		) {

			my $judge = $judges{$judge_id};
</%perl>

			<div class="full nospace bottomalign">
				<span class="twothirds nospace bottomalign true">
					<h5 class="martopmore">
						<% $judge->{"category_name"} %>
						at
						<% $judge->{"tourn_name"} %>
						<% $judge->{"weekend_name"} %>
					</h5>
				</span>

				<span class="third nospace padbottom bottomalign rightalign true">

%					my $start_string = $judge->{"tourn_start"};
%					$start_string =~ s/[\D_]//g;
%					if ($start_string < $nowstring) {

						<a class="ltbuttonwhite bluetext"
							href="panels.mhtml"
						><span class="halfspacer"></span>Online Ballots<span class="halfspacer"></span></a>

%					} else {

						<div class="nospace padno smallish semibold italic graytext">
							Online Ballots will be available <br /> starting
								<& "/funclib/showdt.mas",
									string => $judge->{"tourn_start"},
									tz     => $judge->{"tz"},
									tzname => 1,
									length => "murica_noyear",
									at     => 'yas'
								&>
						</div>
%					}
				</span>
			</div>

			<div class="full nospace odd bluebordertop flexrow">
				<span class="half borderright marno marright flex">
					<div class="nospace padtop">
						<span class="twofifths semibold">
							Name
						</span>
						<span class="threefifths">
							<% $judge->{"first"} %>
							<% $judge->{"middle"} %>
							<% $judge->{"last"} %>
						</span>
					</div>
					<div class="nospace">
						<span class="twofifths semibold">
							Dates
						</span>
						<span class="threefifths">
%							if ($judge->{"weekend_id"}) {
%								my $same = &same_day($judge->{"weekend_start"}, $judge->{"weekend_end"});
								<& "/funclib/showdate.mas", string => $judge->{"weekend_start"} &>
%								unless ($same) {
									&ndash; <& "/funclib/showdate.mas", string => $judge->{"weekend_end"} &>
%								}
%							} else {
%								my $same = &same_day($judge->{"tourn_start"}, $judge->{"tourn_end"});
								<& "/funclib/showdate.mas", string => $judge->{"tourn_start"} &>
%								unless ($same) {
									&ndash; <& "/funclib/showdate.mas", string => $judge->{"tourn_end"} &>
%								}
%							}
						</span>
					</div>

					<div class="nospace">
						<span class="twofifths semibold ">
							School
						</span>
						<span class="threefifths">
							<% $judge->{"school_name"} ? $judge->{"school_name"} : "Tournament Hire" %>
						</span>
					</div>

%					unless ($judge->{"no_codes"}) {
						<div class="nospace">
							<span class="twofifths semibold ">
								Judge Code
							</span>
							<span class="threefifths">
								<% $judge->{"judge_code"} %>
							</span>
						</div>
%					}

%					if ($judge->{"jpools"} > 0) {
						<div class="nospace">
							<span class="twofifths semibold">
								Pools
							</span>
							<span class="threefifths leftalign">
%								foreach my $jpool (@{$judge->{"jpools"}}) {
									<div class="nospace">
										<% $jpool %>
									</div>
%								}
							</span>
						</div>
%					}

%					if ($judge->{"vaccines"}) {
						<div class="nospace">
							<span class="twofifths semibold ">
								Vaccine Check
							</span>
							<span class="threefifths">
								<span class="<% $judge->{"status"} eq "confirmed" ? "fa-check greentext" : "redtext fa-times" %> fa fa-sm twenty">
								</span>
								<span class='ninetenths'>
									<% $judge->{"status"} ? ucfirst($judge->{"status"}) : "Not Started" %>
								</span>
							</span>
						</div>
%					}

%					if ($judge->{"rounds_judged"} > 0) {
						<div class="nospace">
							<span class="twofifths semibold">
								Rounds judged
							</span>
							<span class="threefifths leftalign">
								<% $judge->{"rounds_judged"} %>
							</span>
						</div>
%					}

%					if ($judge->{"rounds_per"}) {

%						my $short_name = $m->comp('/funclib/short_name.mas', name => $judge->{"school_name"});

						<div class="nospace">
							<span class="twofifths semibold smallish">
								Prelim Obligation
							</span>
							<span class="threefifths leftalign">
								<div class="full nospace">
									<% $judge->{"judge_obligation"} %>
									<% $short_name ? "rounds for ".$short_name : "" %>
								</div>
%								if ($judge->{"judge_hired"}) {
									<div class="full nospace padtopless">
										<% $judge->{"judge_hired"} ? $judge->{"judge_hired"}." hired" : "" %>
									</div>
%								}
							</span>
						</div>
%					}
				</span>

				<span class="half marno top flex">
					<div class="full nospace padtopless ltborderbottom">
						<span class="semibold biggish marno half">
							Your Conflicts
						</span>

						<span class="padno marno half rightalign">
%						if ($judge->{"conflicts"}) {
							<a class  = "bluetext marno hover link-underline semibold"
								href  = "judge_conflicts.mhtml?judge_id=<% $judge_id %>"
								title = "Conflicts indicate schools or competitors you have a past coaching or personal relationship with and should not judge"
							>Add Conflicts</a>
%						}
						</span>
					</div>

<%perl>
					my $notfirst;

					foreach my $strike (@{$judge->{"strikes"}}) {

						next unless $strike->{"conflict"};
						next if $strike->{"type"} eq "entry" && ($strike->{"registrant"} < 1);
						next if $strike->{"type"} eq "school" && ($strike->{"registrant"} < 1);
</%perl>

%						if ($strike->{"type"} eq "entry") {

							<div class="full nospace smallish">
								<span class="quarter italic bluetext">
									<span class="quarterspacer"></span>
									Entry
								</span>

								<span class="threequarter">
									<% $strike->{"entry"} %>
								</span>
							</div>

%						} elsif ($strike->{"type"} eq "school") {

							<div class="full nospace smallish">
								<span class="quarter bluetext italic">
									<span class="quarterspacer"></span>
									School
								</span>

								<span class="threequarters">
									<% $strike->{"school"} %>
								</span>
							</div>

%						} elsif ($strike->{"type"} eq "departure") {

							<div class="full nospace smallish">
								<span class="quarter bluetext italic">
									<span class="quarterspacer"></span>
									Departs
								</span>

								<span class="threequarters">
									<& "/funclib/showdt.mas", string => $strike->{"start"} &>
								</span>
							</div>

%						} elsif ($strike->{"type"} eq "time") {

							<div class="full nospace smallish">
								<span class="quarter bluetext italic">
									<span class="quarterspacer"></span>
									Unavailable
								</span>

								<span class="threequarters">
									<& "/funclib/showdt.mas", string => $strike->{"start"} &>
									to <& "/funclib/showdt.mas", string => $strike->{"end"} &>
								</span>
							</div>
%						}
%					}
				</span>
			</div>

%			if ($judge->{"diversity_selfie"} || $judge->{"quizzes"} || $judge->{"nsda_nats"}) {

				<div class="padleftmore nospace padtop">

					<h6 class="padtop">
						Additional Information for <% $judge->{"tourn_name"} %>
					</h6>

%					if ($judge->{"diversity_selfie"} || $judge->{"quizzes"}) {
						<span class="pagehalf">
%							if ($judge->{"diversity_selfie"}) {
%								if ($judge->{"diversity_notice"}) {
									<p class="explain">
										<% $judge->{"diversity_notice"} %>
									</p>
%								}

								<div class="nospace full">
									<label for="<% $judge_id %>_diverse">
										<span class="threequarter semibold leftalign smallish">
											<span class='quarterspacer'></span>
											Do you identify as diversity enhancing?
										</span>

										<span class="quarter centeralign">
											<label class = "switch smaller marvertless">
												<input
													class         = "padsettingbox"
													type          = "checkbox"
													value         = "1"
													id            = "<% $judge_id %>_diverse"
													setting_name  = "diverse"
													target_id     = "<% $judge_id %>"
													onChange      = "postSwitch( this, 'judge_switch.mhtml');"
													<%  $judge->{"diverse"} ? 'checked' : "" %>
												>
												<div class="<% $ARGS{"onred"} ? "onred" : "" %> slider"></div>
											</label>
										</span>
									</label>
								</div>
%							}

%							my $counter = 1;

%							if ($judge->{"quizzes"}) {

								<p class="biggish">
									Tournament required forms &amp; questionnaires:
								</p>

%								foreach my $quiz_id (@{$judge->{"quizzes"}}) {

%									my $quiz = Tab::Quiz->retrieve($quiz_id);
%									my $pq = $quiz->answers(person => $person->id)->first;

									<div class="nospace ltbordertop">
										<a
											title = "Take Questionnaire"
											href  = "quiz_take.mhtml?quiz_id=<% $quiz->id %>&from=upcoming"
											class = "white nospace padvertless"
										>
											<span class="fifth centeralign nospace">
%												if ($pq && $pq->completed > 0) {
													<span class="fa fa-sm greentext fa-check" title="Completed">
													</span>
%												} else {
													<span class="fa fa-sm redtext fa-times" title="Not Completed">
													</span>
%												}
											</span>

											<span class="twothirds semibold leftalign smallish nospace">
												<span class="ninetenths marno bluetext link-underline nospace link-underline padvert">
													<% $quiz->label %>
												</span>
											</span>

											<span class="tenth rightalign nospace">
												<span class="fa fa-sm fa-file-text-o buttonwhite bluetext">
												</span>
											</span>
										</a>
									</div>
%								}
%							}
						</span>
%					}

					<span class="pagehalf">
<%perl>
						if ($judge->{"nsda_nats"}) {

							my $jpool_sth = $dbh->prepare("

								select
									jpool.id,
									jpool.name,
									site.name,
									message.value_text,
									category.abbr, tourn.name,
									judge_sheet_notice.value_text

								from (judge, jpool, jpool_judge, jpool_setting show_judges, category, tourn)

									left join site on jpool.site = site.id

									left join jpool_setting message
										on message.tag = 'message'
										and message.jpool = jpool.id

									left join category_setting judge_sheet_notice
										on judge_sheet_notice.category = category.id
										and judge_sheet_notice.tag = 'judge_sheet_notice'

								where judge.person = ?
									and jpool_judge.judge = judge.id
									and jpool_judge.jpool = jpool.id
									and jpool.id = show_judges.jpool
									and show_judges.tag = 'show_judges'
									and jpool.category = category.id
									and category.tourn = tourn.id

									and tourn.end > now()

									and not exists (
										select jps.id
										from jpool_setting jps
										where jps.jpool = jpool.id
										and jps.tag = 'registrant'
									)

									and not exists (
										select jps.id
										from jpool_setting jps
										where jps.jpool = jpool.id
										and jps.tag = 'standby'
									)
								order by jpool.name
							");

							$jpool_sth->execute($person->id);

							my %jpools;

							while (
								my (
									$jpool_id, $jpool_name, $jpool_site,
									$message,
									$category, $tourn,
									$judge_sheet_notice
								) = $jpool_sth->fetchrow_array()
							) {

								unless ($jpools{$jpool_id}{"name"}) {
									$jpools{$jpool_id}{"name"}     = $jpool_name;
									$jpools{$jpool_id}{"site"}     = $jpool_site;
									$jpools{$jpool_id}{"message"}  = $message;
									$jpools{$jpool_id}{"notice"}   = $judge_sheet_notice;
									$jpools{$jpool_id}{"tourn"}    = $tourn;
									$jpools{$jpool_id}{"category"} = $category;
								}
							}

							$sth->finish();

							my $deadline;
							if ($judge->{"judge_deadline"}) {
								$deadline = eval {
									return DateTime::Format::MySQL->parse_datetime($judge->{"judge_deadline"});
								};
							} else {
								$deadline = eval {
									return DateTime::Format::MySQL->parse_datetime($judge->{"reg_end"});
								};
							}

							if ($deadline && $deadline > DateTime->now()) {
</%perl>
%								if ($judge->{"quizzes"}) {
									<p class="biggish">
										Optional but encouraged:
									</p>
%								}

								<div class="nospace padvertless ltbordertop">
									<a
										title = "Self-Nominate"
										href  = "nats.mhtml"
										class = "white nospace"
									>
										<span class="fifth centeralign nospace">
%											if ($judge->{"nomination"}) {
												<span class="fa fa-sm greentext fa-check" title="Completed">
												</span>
%											} else {
												<span class="fa fa-sm redtext fa-times" title="Not Completed">
												</span>
%											}
										</span>

										<span class="twothirds semibold leftalign smallish nospace">
											<span class="ninetenths marno bluetext link-underline nospace link-underline padvert">
												Late Elim Nomination
											</span>
										</span>

										<span class="tenth rightalign nospace">
											<span class="fa fa-sm fa-file-text-o buttonwhite bluetext">
											</span>
										</span>
									</a>
								</div>
%							}

%							if (keys %jpools) {
								<p class="biggish marbottom" style="margin-bottom: 9px !important;">
									Judging Day Assignments
								</p>
%								foreach my $jpid (sort {$jpools{$a}{"name"} cmp $jpools{$b}{"name"}} keys %jpools) {
									<div class="nospace padvertless ltbordertop ltborderbottom marno"
										style="margin-top : -1px !important;">
										<span class="twofifths padvertless smallish" style="padding-bottom: 6px !important;">
											<span class="halfspacer"></span>
											<% $jpools{$jpid}{"name"} %>
										</span>
										<span class="threefifths explain">
											<% $jpools{$jpid}{"site"} ? "at ".$jpools{$jpid}{"site"} : "" %>
										</span>
									</div>
%								}
%							}

%						}
					</span>
				</div>
%			}
%		}
		</div>
	</div>

<%perl>

	sub same_day  {

		my ($first, $last) = @_;

		my $first_day = substr($first, 8, 2);
		my $last_day = substr($last, 8, 2);

		if ($first_day eq $last_day) {
			return 1;
		} else {
			return;
		}
	}

</%perl>
