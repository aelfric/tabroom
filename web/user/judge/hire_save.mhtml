<%args>
	$person
	$rounds      => 0
	$category_id => undef
	$already_id  => undef
</%args>
<%init>

	if ($already_id) {

		my $judge = Tab::Judge->retrieve($already_id);

		unless ($judge->category->setting("exchange")) {
			my $msg = "That judge category does not accept self-hire requests";
			$m->redirect("/user/judge/hire.mhtml?msg=$msg");
		}

		my $max = $judge->category->setting("max_rounds");

		my $actual = $rounds;
		$actual = $max if $actual > $max;
		$actual = ($max - $judge->obligation) if ($judge->obligation + $actual) > $max;

		my $err;

		unless ($actual == $rounds) {
			$err = "You signed for more than the maximum $max rounds, so ";
			$err .= "your offer was reduced to $actual";
		}

		$judge->setting('hire_offer', $actual);
		$judge->update();

		my $msg = "Hire offer for $actual rounds saved pending tournament approval.";
		$m->redirect("hire.mhtml?err=$err&msg=$msg");
	}

	if ($category_id && $category_id == int($category_id)) {

		my $category = Tab::Category->retrieve($category_id);

		unless ($category) {
			$m->comp("/funclib/abort.mas", message => "No valid category ID sent");
		}

		unless ($category->setting("exchange")) {
			my $msg = "That judge category does not accept self-hire requests";
			$m->redirect("/user/judge/hire.mhtml?msg=$msg");
		}

		my $max = $category->setting("max_rounds");
		my $actual = $rounds;
		$actual = $max if $actual > $max;

		my $err;

		unless ($actual == $rounds) {
			$err = "You signed for more than the maximum $max rounds. ";
			$err .= "Your offer was reduced to $actual";
		}

		my $code = $m->comp(
			"/funclib/category_code.mas",
			category => $category
		) unless $category->setting("no_codes");

		my $tz = $category->tourn->tz;
		$tz = "UTC" unless $tz;
		my $now = DateTime->now(time_zone => $tz);

		my $judge = Tab::Judge->create({
			person     => $person->id,
			first      => $person->first,
			last       => $person->last,
			code       => $code,
			obligation => 0,
			hired      => 0,
			category   => $category->id,
			active     => 0
		});

		$judge->setting("hire_offer", $actual);
		$judge->setting("registered_by", $person->id);
		$judge->setting("self_registered", 1);

		$m->comp("/funclib/person_conflict.mas",
			tourn   => $category->tourn,
			entered => $person,
			person  => $person
		);

		my $msg = "Hire offer for $actual rounds saved pending tournament approval.";
		$m->redirect("hire.mhtml?err=$err&msg=$msg");

	}

</%init>
