<%args>
	$person
	$person_settings
	$panel_id => undef
	$judge_id => undef
	$errs     => undef
	$index    => "horizontal"
</%args>
<%init>

	unless ($panel_id && $judge_id) {
		my $err = "I didn't get both a judge and a ballot record";
		$m->redirect("/user/home.mhtml?err=$err");
	}

	my $panel = Tab::Panel->retrieve($panel_id);
	my $judge = Tab::Judge->retrieve($judge_id);

	unless (
		$person->site_admin
		|| ($judge->person && $judge->person->id == $person->id)
	){
		$m->comp("/funclib/abort.mas",
			message => "Your account does not have access to vote for that judge"
		);
	}

	$m->comp("/funclib/panel_dedupe.mas", panel => $panel);
	$m->abort unless $panel;

	my $round = $panel->round;
	my $event = $round->event;
	my %event_settings = $event->all_settings();

	my $category = $event->category;
	my $tourn = $category->tourn;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	my $now = DateTime->now(time_zone => $tz);

	my @ballots = Tab::Ballot->search(
		judge => $judge->id,
		panel => $panel->id
	);

	my $min = $event_settings{'min_points'} if $event;
	my $max = $event_settings{'max_points'} if $event;

	my @categories = (
		"content",
		"speaking",
		"penalties"
	);

	my %ballot_scores;

	foreach my $ballot (
		sort {$a->speakerorder <=> $b->speakerorder} @ballots
	) {

		if ($ballot->audit > 0) {
			$m->comp("/funclib/abort.mas",
				message => "This ballot has already been confirmed.  If you wish to make changes contact the tournament staff."
			);
		}

		my $subscores = $ballot->scores(
			tag => 'subpoints'
		)->first;

		if ($subscores) {
			$ballot_scores{$ballot->id} = eval {
				return JSON::decode_json($subscores->text);
			};
		}

	}

</%init>

	<div class="blankfull">

	<div class="full flexrow padbottom ltborderbottom">
		<span class="threefifths nospace">
			<h4 class="bluetext nospace">
				Judge
				<% ($judge) ? $judge->first." ".$judge->last : ""  %>
			</h4>
		</span>

		<span class="fifth centeralign">
			<a 	class="greentext buttonwhite invert padvert"
				href="/user/judge/legion_ballot.mhtml?judge_id=<% $judge->id %>&panel_id=<% $panel->id %>&index=<% $index eq "vertical" ? "horizontal" : "vertical" %>"
			>Use <% $index eq "vertical" ? "Horizontal" : "Vertical" %> Entry</a>
		</span>

		<span class="fifth centeralign">
			<a 	class="bluetext buttonwhite invert padvert"
				href="/user/judge/panels.mhtml"
			>Return Home</a>

		</span>

	</div>

	<form action="legion_confirm.mhtml" method="post">

	<input
		type  = "hidden"
		name  = "judge_id"
		value = "<% $judge->id %>"
	>

	<input
		type  = "hidden"
		name  = "panel_id"
		value = "<% $panel->id %>"
	>

	<h5>A. Content</h5>

		<div class="row ltyellow semibold flexrow">

			<span
				class = "twenty hover centeralign semibold bluetext"
			></span>

			<span class="quarter">
				Criterion
			</span>

			<span class="tenth">
				Speech Type
			</span>

			<span class="tenth rightalign bluetext padrightmore blueborderright padvert marno">
				Speaker:
			</span>

			<span class="half flexrow">
%				foreach my $ballot (sort {$a->speakerorder <=> $b->speakerorder} @ballots) {
					<span class="sixth centeralign semibold bluetext blueborderright padvert marno">
						<% Lingua::EN::Numbers::Ordinate::ordinate($ballot->speakerorder) %>
					</span>
%				}
			</span>
		</div>
<%perl>

		my $content = eval{
			return JSON::decode_json($event_settings{"content_points"});
		};

		my $keycounter = 1;

		foreach my $key (sort keys %{$content}) {

			my %limits;

			foreach my $type ("prepared", "assigned", "total") {
				if ($content->{$key}{$type}) {
					if ($content->{$key}{$type} < 0) {
						$limits{$type."_min"} = $content->{$key}{$type};
						$limits{$type."_max"} = 0;
					} else {
						$limits{$type."_max"} = $content->{$key}{$type};
						$limits{$type."_min"} = 0;
					}
				}
			}

</%perl>
			<div class="row flexrow wrap">

				<span
					class = "twenty hover centeralign semibold bluetext"
				><% $key %></span>

				<span class="quarter">
					<% $content->{$key}{"text"} %>
				</span>

				<span 
					class = "fifth padrightmore blueborderright padvert marno"
				>

%					if ($content->{$key}{"total"}) {

						<div class="padless full">
							<span class="threefifths">
								Total
							</span>
							<span class="twofifths smallish rightalign italic">
								<% $limits{"total_min"} %> - <% $limits{"total_max"} %> pts
							</span>
						</div>

%					} else {

						<div class="flexrow borderbottom padbottom">
							<span class="threefifths">
								Prepared
							</span>
							<span class="twofifths smallish rightalign italic">
								<% $limits{"prepared_min"} %> - <% $limits{"prepared_max"} %> pts
							</span>
						</div>

						<div class="flexrow padtop">
							<span class="threefifths">
								Assigned
							</span>
							<span class="twofifths smallish rightalign italic">
								<% $limits{"assigned_min"} %> - <% $limits{"assigned_max"} %> pts
							</span>
						</div>
%					}
				</span>

				<span class="half flexrow wrap">

%					my $subcount;
%					foreach my $type ("prepared", "assigned") {

						<div class="flexrow full <% $type eq "prepared" ? 'borderbottom' : "" %>">
<%perl>
						$subcount++;

						foreach my $ballot (
							sort {$a->speakerorder <=> $b->speakerorder}
							@ballots
						) {

							my $padding;
							my $tab_index;

							foreach (length($keycounter) .. 3) {
								$padding .= "0";
							}

							if ($index eq "vertical") {
								$tab_index =  int($ballot->speakerorder.$padding.$keycounter.$key.$subcount);
							}
</%perl>
							<span class="sixth centeralign semibold bluetext blueborderright padvertless marno">

								<input
									type     = "number"
									<% $tab_index ? 'tabindex = "'.$tab_index.'"' : "" %>
									class    = "<% $ballot->id %> <% $type %> <% $key %> content smallish"
									name     = "content_<% $type %>_<% $key %>_<% $ballot->id %>"
									id       = "content_<% $type %>_<% $key %>_<% $ballot->id %>"
									ballot   = "<% $ballot %>"
									category = "content"
									key      = "<% $key %>"
									type     = "<% $type %>"
									min      = <% $limits{$type."_min"} %>
									max      = <% $limits{$type."_max"} %>
									onKeyUp  = "autoAdvance(this);"
									onBlur   = "addTotals();"
									value    = "<% $ballot_scores{$ballot->id}{"content"}{$key}{$type}{"score"} %>"
								>
							</span>
%						}
						</div>
%					}
				</span>
			</div>
%		}

		<h5 class="martopmore">
			B. Speaking Skills
		</h5>

		<div class="row ltyellow semibold flexrow">
			<span
				class = "twenty hover centeralign semibold bluetext"
			></span>

			<span class="quarter">
				Criterion
			</span>

			<span class="tenth">
				Speech Type
			</span>

			<span class="tenth rightalign bluetext padrightmore blueborderright padvert marno">
				Speaker:
			</span>

			<span class="half flexrow">
%				foreach my $ballot (sort {$a->speakerorder <=> $b->speakerorder} @ballots) {
					<span class="sixth centeralign semibold bluetext blueborderright padvert marno">
						<% Lingua::EN::Numbers::Ordinate::ordinate($ballot->speakerorder) %>
					</span>
%				}
			</span>
		</div>
<%perl>

		$keycounter++;

		my %speaking = %{ JSON::decode_json($event_settings{"speaking_points"} ) }
			if $event_settings{"speaking_points"};

		foreach my $key (sort keys %speaking) {

			my %limits;

			foreach my $type ("prepared", "assigned", "total") {
				if ($speaking{$key}{$type}) {
					if ($speaking{$key}{$type} < 0) {
						$limits{$type."_min"} = $speaking{$key}{$type};
						$limits{$type."_max"} = 0;
					} else {
						$limits{$type."_max"} = $speaking{$key}{$type};
						$limits{$type."_min"} = 0;
					}
				}
			}
</%perl>

			<div class="row flexrow">

				<span
					class = "twenty hover centeralign semibold bluetext"
				><% $key %></span>

				<span class="quarter">
					<% $speaking{$key}{"text"} %>
				</span>

				<span class="fifth padrightmore blueborderright padvert marno">

%					if ($speaking{$key}{"total"}) {

						<div class="padless full">
							<span class="threefifths">
								Total
							</span>
							<span class="twofifths smallish rightalign italic">
								<% $limits{"total_min"} %> - <% $limits{"total_max"} %> pts
							</span>
						</div>

%					} else {

						<div class="flexrow borderbottom padbottom">
							<span class="threefifths">
								Prepared
							</span>
							<span class="twofifths smallish rightalign italic">
								<% $limits{"prepared_min"} %> - <% $limits{"prepared_max"} %> pts
							</span>
						</div>

						<div class="flexrow padtop">
							<span class="threefifths">
								Assigned
							</span>
							<span class="twofifths smallish rightalign italic">
								<% $limits{"assigned_min"} %> - <% $limits{"assigned_max"} %> pts
							</span>
						</div>
%					}

				</span>

				<span class="half flexrow wrap">

%					my $subcount;
%					foreach my $type ("prepared", "assigned") {

						<div class="flexrow full <% $type eq "prepared" ? 'borderbottom' : "" %>">
<%perl>
						foreach my $ballot (sort {$a->speakerorder <=> $b->speakerorder} @ballots) {

							$subcount++;

							my $tab_index;
							my $padding;

							foreach (length($keycounter) .. 3) {
								$padding .= "0";
							}

							if ($index eq "vertical") {
								$tab_index =  int($ballot->speakerorder.$padding.$keycounter.$key.$subcount);
							}
</%perl>
							<span class="sixth centeralign semibold bluetext blueborderright padvertless marno">

								<input
									type     = "number"
									<% $tab_index ? 'tabindex = "'.$tab_index.'"' : "" %>
									class    = "<% $ballot->id %> <% $key %> speaking smallish"
									name     = "speaking_<% $type %>_<% $key %>_<% $ballot->id %>"
									id       = "speaking_<% $type %>_<% $key %>_<% $ballot->id %>"
									ballot   = "<% $ballot %>"
									category = "speaking"
									key      = "<% $key %>"
									type     = "<% $type %>"
									min      = <% $limits{$type."_min"} %>
									max      = <% $limits{$type."_max"} %>
									onChange = "addTotals();"
									onKeyUp  = "autoAdvance(this);"
									value    = "<% $ballot_scores{$ballot->id}{"speaking"}{$key}{$type}{"score"} %>"
								>
							</span>
%						}
						</div>
%					}
				</span>
			</div>
%		}

		<div class="row bordervert flexrow">

			<span
				class = "twenty hover centeralign semibold bluetext padvert"
			></span>

			<span class="quarter rightalign">
			</span>

			<span
				class = "fifth blueborderright padvert padrightmore rightalign bigger bluetext semibold marno"
				style = "padding-top:11px !important; padding-bottom:11px !important;"
			>
				Subtotals:
			</span>

			<span class="half flexrow wrap">
%				foreach my $ballot (sort {$a->speakerorder <=> $b->speakerorder} @ballots) {

					<span
						class  = "sixth centeralign semibold bluetext blueborderright padvertmore marno <% $ballot->id %> subtotal"
						name   = "subtotal_<% $ballot->id %>"
						id     = "subtotal_<% $ballot->id %>"
						ballot = "<% $ballot->id %>"
					>0</span>
%				}
			</span>

		</div>

		<h5 class="padtop">
			Penalties
		</h5>

			<div class="row ltyellow semibold flexrow">
				<span
					class = "twenty hover centeralign semibold bluetext"
				></span>

				<span class="quarter">
					Penalty Category
				</span>

				<span class="tenth">
					Speech Type
				</span>

				<span class="tenth rightalign bluetext padrightmore blueborderright padvert marno">
					Speaker:
				</span>

				<span class="half flexrow">
%					foreach my $ballot (sort {$a->speakerorder <=> $b->speakerorder} @ballots) {
						<span class="sixth centeralign semibold bluetext blueborderright padvert marno">
							<% Lingua::EN::Numbers::Ordinate::ordinate($ballot->speakerorder) %>
						</span>
%					}
				</span>
			</div>

<%perl>

		$keycounter++;

		my $penalties = eval {
			return JSON::decode_json($event_settings{"penalties_points"});
		};

		foreach my $key (sort keys %{$penalties}) {

			my %limits;

			foreach my $type ("prepared", "assigned", "total") {
				if ($penalties->{$key}{$type}) {
					if ($penalties->{$key}{$type} < 0) {
						$limits{$type."_min"} = $penalties->{$key}{$type};
						$limits{$type."_max"} = 0;
					} else {
						$limits{$type."_max"} = $penalties->{$key}{$type};
						$limits{$type."_min"} = 0;
					}
				}
			}
</%perl>
			<div class="row flexrow">

				<span
					title = "<% $penalties->{$key}{"text"} %>"
					class = "twenty hover centeralign semibold bluetext"
				><% $key %></span>

				<span class = "quarter" >
					<% $penalties->{$key}{"text"} %>
				</span>

				<span
					class = "fifth padrightmore blueborderright marno"
					style = "padding-top:7px !important; padding-bottom:7px !important;"
				>

%					my @types;
%					if ($penalties->{$key}{"total"}) {
%						@types = ('total');

						<div class="flexrow padvert">
							<span class="threefifths">
								Total
							</span>
							<span class="twofifths smallish rightalign italic">
								&nbsp;
								<% $limits{"total_min"} %> - <% $limits{"total_max"} %>
							</span>
						</div>

%					} else {

%						@types = ('prepared', 'assigned');

						<div class="flexrow borderbottom padbottom">
							<span class="threefifths">
								Prepared
							</span>
							<span class="twofifths smallish rightalign italic">
								&nbsp;
								<% $limits{"prepared_min"} %> - <% $limits{"prepared_max"} %>
							</span>
						</div>

						<div class="flexrow padtop">
							<span class="threefifths">
								Assigned
							</span>
							<span class="twofifths smallish rightalign italic">
								&nbsp;
								<% $limits{"assigned_min"} %> - <% $limits{"assigned_max"} %>
							</span>
						</div>
%					}

				</span>

				<span class="half flexrow wrap">

%					my $subcount;
%					foreach my $type (@types) {

						<div class="flexrow full <% $type eq "prepared" ? 'borderbottom' : "" %>">

<%perl>
						foreach my $ballot (sort {$a->speakerorder <=> $b->speakerorder} @ballots) {
							$subcount++;

							my $tab_index;
							my $padding;

							foreach (length($keycounter) .. 3) {
								$padding .= "0";
							}

							if ($index eq "vertical") {
								$tab_index =  int($ballot->speakerorder.$padding.$keycounter.$key.$subcount);
							}

</%perl>
							<span class="sixth centeralign semibold bluetext blueborderright padvertless marno">
								<input
									type     = "number"
									<% $tab_index ? 'tabindex = "'.$tab_index.'"' : "" %>
									class    = "<% $ballot->id %> <% $key %> penalties smallish"
									name     = "penalties_<% $type %>_<% $key %>_<% $ballot->id %>"
									id       = "penalties_<% $type %>_<% $key %>_<% $ballot->id %>"
									ballot   = "<% $ballot %>"
									category = "penalties"
									key      = "<% $key %>"
									type     = "<% $type %>"
									min      = <% $limits{$type."_min"} %>
									max      = <% $limits{$type."_max"} %>
									onChange = "addTotals();"
									onKeyUp  = "autoAdvance(this);"
									value    = "<% $ballot_scores{$ballot->id}{"penalties"}{$key}{$type}{"score"} %>"
								>
							</span>
%						}

						</div>
%					}
				</span>
			</div>
%		}

		<div class="row flexrow">

			<span
				class = "twenty hover centeralign semibold bluetext"
			></span>

			<span class="quarter">
			</span>

			<span class="fifth blueborderright wrap marno padvert padrightmore rightalign bigger bluetext semibold">
				Final Totals:
				<div class="full smaller italic padno marno">No ties allowed</div>
			</span>

			<span class="half flexrow wrap">

%				foreach my $ballot (sort {$a->speakerorder <=> $b->speakerorder} @ballots) {
					<span
						class  = "sixth centeralign semibold bluetext blueborderright padvertmore marno <% $ballot->id %> ranking total"
						style  = "padding-top: 17px !important; padding-bottom: 17px !important;"
						name   = "total_<% $ballot->id %>"
						id     = "total_<% $ballot->id %>"
						ballot = "<% $ballot->id %>"
					>0</span>
%				}
			</span>

		</div>

		<div class="row flexrow">

			<span
				class = "twenty hover centeralign"
			></span>

			<span class="fifth">
			</span>

			<span
				class = "quarter blueborderright padvert padrightmore rightalign marno"
				style = "padding-top:11px !important; padding-bottom:11px !important;"
			>
				<h6 class="nospace semibold">YOUR CURRENT RANKING</h6>
			</span>

			<span class="half flexrow wrap">
%				foreach my $ballot (sort {$a->speakerorder <=> $b->speakerorder} @ballots) {
					<span
						class  = "sixth centeralign semibold bigger blueborderright padvertmore marno <% $ballot->id %> ranking"
						name   = "ranking_<% $ballot->id %>"
						id     = "ranking_<% $ballot->id %>"
						ballot = "<% $ballot->id %>"
					><% $ballot->speakerorder %></span>
%				}
			</span>
		</div>

		<div
			id    = "save_row"
			class = "flexrow liblrow marvertno rightalign"
		>

			<span
				id="tie_warning"
				class="twothirds nospace redtext semibold hidden bigger">
				Ballot cannot be saved until score ties are resolved
			</span>

			<span class="third centeralign padvert">
				<input
					id    = "ballot_saver"
					type  = "submit"
					value = "Save Ballot"
				>
			</span>
		</div>

		</form>

	</div>

	</div>

	<script>

		$(document).ready(function() {
			addTotals();
		});

		function autoAdvance(inputBox) {

			var score = $(inputBox).val();

			if (score == '-') {
				return;
			}

			var max = parseInt($(inputBox).attr("max"));
			score = parseInt(score);

			if (max > 9 && score === 1) {
				return;
			}

			if (!score && max != 0) {
				return;
			}

			nextTabIndex(inputBox);
		}

		function addTotals() {

			var scoreTotals = {};
			var scoreSubTotals = {};

			$(".content").each(function() {

				var ballot =  $(this).attr("ballot");

				if (!scoreTotals[ballot]) {
					scoreTotals[ballot] = 0;
				}
				if (!scoreSubTotals[ballot]) {
					scoreSubTotals[ballot] = 0;
				}

				var score = getScore(this.id);
				scoreTotals[ballot] += score;
				scoreSubTotals[ballot] += score;
			});

			$(".speaking").each(function() {
				var ballot =  $(this).attr("ballot");
				var score = getScore(this.id);
				scoreTotals[ballot] += score;
				scoreSubTotals[ballot] += score;
			});

			$(".penalties").each(function() {
				var ballot =  $(this).attr("ballot");
				var score = getScore(this.id);
				scoreTotals[ballot] += score;
			});

			Object.keys(scoreTotals).forEach(function(key, index) {
				$("#subtotal_"+key).text(scoreSubTotals[key]);
				$("#total_"+key).text(scoreTotals[key]);
			});

			autoRank();

		}

		function getScore(ballotId) {

			var score = parseInt($("#"+ballotId).val());

			if (!score) {
				return 0;
			}

			var min = parseInt($("#"+ballotId).attr("min"));
			var max = parseInt($("#"+ballotId).attr("max"));

			if (min < 0) {

				if (score > 0) {
					score = score * -1;
					$("#"+ballotId).val(score);
				}

				if (score < min) {
					alertify.error("Score "+score+" is below the minimum "+min);
					score = 0;

					setTimeout(function() { $("#"+ballotId).focus() }, 100);

					$("#"+ballotId).val("");
				}
			}

			if (score < min) {
				alertify.error("Score "+score+" is below the minimum "+min);
				score = 0;
				$("#"+ballotId).val("");
				setTimeout(function() { $("#"+ballotId).focus() }, 100);
			}

			if (score > max) {
				alertify.error("Score "+score+" is above the maximum "+max);
				score = 0;
				$("#"+ballotId).val("");
				setTimeout(function() { $("#"+ballotId).focus() }, 100);
			}

			return score;
		}

		function autoRank() {

			var totalScores = [];
			var tieChecker = [];

			$(".total").each(function() {

				var ballot =  $(this).attr("ballot");
				var totalScore = parseInt($("#total_"+ballot).text());

				if (!totalScore) {
					totalScore = 0;
				}

				totalScores[ballot] = totalScore;

				if (totalScore) {
					if (!tieChecker[totalScore]) {
						tieChecker[totalScore] = 0;
					}
					tieChecker[totalScore]++;
				}
			});

			var keysSorted = Object.keys(totalScores)
				.sort(function(a,b){
					return totalScores[b]-totalScores[a];
				})

			var rank = 0;

			keysSorted.forEach(function(key) {
				rank++;
				$("#ranking_"+key).text(rank);
			});

			var tiesNotOK = 0;
			$(".ranking").removeClass('borderredmed');
			$("#ballot_saver").removeProp("disabled");

			Object.keys(tieChecker).forEach(function(key) {

				if (tieChecker[key] > 1) {
					$("#tie_warning").removeClass('hidden');
					$("#save_row").addClass('lirdrow');
					$("#save_row").removeClass('liblrow');
					$("#ballot_saver").prop("disabled", "true");
					tiesNotOK++;

					keysSorted.forEach(function(ballot) {
						if (totalScores[ballot] == key) {
							$("#ranking_"+ballot).addClass('borderredmed');
						}
					});

				}

				if (!tiesNotOK) {
					$("#tie_warning").addClass('hidden');
					$("#save_row").removeClass('lirdrow');
					$("#save_row").addClass('liblrow');
					$("#ballot_saver").removeProp("disabled");
				}

			});
		}

		function nextTabIndex(element) {

			// if we haven't stored the tabbing order
			if (!element.form.tabOrder) {

				var els = element.form.elements,
					ti = [],
					rest = [];

				// store all focusable form elements with tabIndex > 0
				for (var i = 0, il = els.length; i < il; i++) {
					if (els[i].tabIndex > 0 &&
						!els[i].disabled &&
						!els[i].hidden &&
						!els[i].readOnly &&
						els[i].type !== 'hidden') {
						ti.push(els[i]);
					}
				}

				// sort them by tabIndex order
				ti.sort(function(a,b){ return a.tabIndex - b.tabIndex; });

				// store the rest of the elements in order
				for (i = 0, il = els.length; i < il; i++) {
					if (els[i].tabIndex == 0 &&
						!els[i].disabled &&
						!els[i].hidden &&
						!els[i].readOnly &&
						els[i].type !== 'hidden') {
						rest.push(els[i]);
					}
				}

				// store the full tabbing order
				element.form.tabOrder = ti.concat(rest);
			}

			// find the next element in the tabbing order and focus it
			// if the last element of the form then blur
			// (element can be changed to focus the next <form> if any)
			for (var j = 0, jl = element.form.tabOrder.length; j < jl; j++) {
				if (element === element.form.tabOrder[j]) {
					if (j+1 < jl) {
						$(element.form.tabOrder[j+1]).focus();
					} else {
						$(element).blur();
					}
				}
			}

			return;

		};

	</script>


