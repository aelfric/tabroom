<%args>
	$person
	$ballot_id => undef
	$text      => undef
	$type      => undef
	$auto      => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($ballot_id) {
		$m->print('{ "error": true, "message": "No Ballot ID sent"}');
		$m->abort();
	}

	my $ballot = Tab::Ballot->retrieve($ballot_id);

	$m->abort unless $ballot;

	my $judge = $ballot->judge;
	my $panel = $ballot->panel;

	unless ($person->site_admin) {
		unless ($judge
			&& $judge->person > 0
			&& ($judge->person->id == $person->id)
		) {
			$m->print('{ "error": true, "message": "You are not authorized to edit remarks for that judge"}');
			$m->abort();
		}
	}

	$text = $m->comp("/funclib/save_editor.mas", text => $text);

	my $message;

	if ($type eq "rfd") {

		foreach my $ballot ($panel->ballots( judge => $judge->id)) {

			my $rfd = $ballot->scores( tag => "rfd")->first;

			if ($text) {
				unless ($rfd) {
					$rfd = eval {
						return Tab::Score->create({
							ballot  => $ballot->id,
							tag     => "rfd",
							student => 0
						});
					};
				}

				if ($rfd) {
					$rfd->text($text);
				}
			} elsif ($rfd) {
				$rfd->delete();
			}

			$message = "RFD saved for all entries in this section";
		}

	} else {

		my $comments = $ballot->scores(tag => "comments")->first;

		if ($text) {
			unless ($comments) {
				$comments = eval{
					return Tab::Score->create({
						ballot  => $ballot->id,
						tag     => "comments",
						student => 0
					});
				}
			}
			$comments->text($text) if $comments;
		} elsif ($comments) {
			$comments->delete();
		}

		$message = "Ballot comments $comments saved for ".$ballot->entry->code;

	}

	unless ($auto && $auto eq "true") {
		$m->print('{
			"error"   : false,
			"message" : "'.$message.'"
		}');
	}

	$m->abort();

</%init>

