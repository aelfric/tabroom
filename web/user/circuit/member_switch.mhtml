<%args>
	$person
	$target_id      => undef
	$property_name  => undef
	$setting_name   => undef
	$property_value => 0
	$flag           => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($target_id) {
		$m->print('{ "error": true, "message": "No chapter ID sent"}');
		$m->abort();
	}

	unless ($property_name || $setting_name) {
		$m->print('{ "error": true, "message": "No property to change sent"}');
		$m->abort();
	}

	my $chapter = Tab::Chapter->retrieve($target_id);

	unless ($chapter) {
		$m->print('{ "error": true, "message": "No entry found for ID '.$target_id.'"}');
		$m->abort();
	}

	my $message;

	if ($property_name eq "full_member") {

		my $membership = Tab::ChapterCircuit->search(
			chapter => $chapter->id,
			circuit => $setting_name
		)->first;

		if ($membership) {
			$membership->full_member($property_value);
			$membership->update();
		}

		$message = "marked as ";
		$message .= "not " unless $property_value;
		$message .= "a full member of this circuit";

	} elsif ($property_name eq "rm_member") {


		foreach my $membership (
			Tab::ChapterCircuit->search(
				chapter => $chapter->id,
				circuit => $setting_name
			)
		) {
			$membership->delete();
		}

		$message = " removed from this circuit altogether.";

	}

	$m->print('{ "error": false, "message": "'.$chapter->name.' has been '.$message.'"}');

	$m->abort();

</%init>

