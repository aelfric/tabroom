<%perl>

	use APR::Request;

	my %cookies = eval {

		# The standard ModPerl implementation horks on cookies which are
		# illegal under the cookie spec but which our friggin ad company
		# apparently uses anyway, so I implemented the below which will
		# probably break something but that's life sometimes.  -CLP

		my @cookies = split(";", $r->headers_in->{'Cookie'});
		my %return;

		foreach my $cookie (@cookies) {
			my ($key, @values) = split(/=/, $cookie);
			my $value = APR::Request::decode(join("=", @values));
			$key =~ s/\s+//g;
			$return{$key} = $value;
		}
		return %return;
	};

	my $cookie_name = $Tab::cookie_name || 'TabroomToken';

    if (defined $cookies{$cookie_name}) {

		# Authentication key must correspond to a session in the database
		my $user_key = $cookies{$cookie_name};

		my $session = Tab::Session->search(
			userkey => $user_key
		)->first;

		my $check_key = crypt($session->id.$Tab::string, $user_key) if $session;

		if ($session) {

			# Userid must correspond to a user in the database
			my $person = $session->person();

			if (
				(defined $person)
				&& (defined $person->email)
				&& ($check_key eq $user_key)
			) {

				return ($person, $session);

			} else {

				$session->delete();

				my $method = substr($Tab::url_prefix, 0, 5);

				my $secure = 0;
				if ($method eq "https") {
					$secure = 1;
				}

				my $maybecookie = Apache2::Cookie->new($r,
					-name     => $cookie_name,
					-value    => '',
					-secure   => $secure,
					-domain   => $Tab::hostname,
					-expires  => '-1s',
					-path     => '/'
				);

				$maybecookie->bake($r);

				my $oldcookie = Apache2::Cookie->new($r,
					-name     => $cookie_name,
					-value    => '',
					-secure   => $secure,
					-httponly => 1,
					-domain   => $Tab::hostname,
					-expires  => '-1s',
					-path     => '/'
				);

				$oldcookie->bake($r);

				my $tokencookie = Apache2::Cookie->new($r,
					-name     => $cookie_name,
					-value    => '',
					-secure   => $secure,
					-httponly => 1,
					-domain   => $Tab::cookie_domain,
					-expires  => '-1s',
					-path     => '/'
				);

				$tokencookie->bake($r);

				my $err = "Your current session has expired or is somehow invalid.  Old cookies have been cleared. Please log in again";
				$m->redirect("/index/index.mhtml?err=$err");

			}
		}
	}

	return;

</%perl>
