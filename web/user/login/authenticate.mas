<%perl>

	use APR::Request;

	my %cookies = eval {

		# The standard ModPerl implementation horks on cookies which are
		# illegal under the cookie spec but which our friggin ad company
		# apparently uses anyway, so I implemented the below which will
		# probably break something but that's life sometimes.  -CLP

		my @cookies = split(";", $r->headers_in->{'Cookie'});
		my %return;

		foreach my $cookie (@cookies) {
			my ($key, @values) = split(/=/, $cookie);
			my $value = APR::Request::decode(join("=", @values));
			$key =~ s/\s+//g;
			$return{$key} = $value;
		}
		return %return;
	};

    if ( defined $cookies{'TabroomToken'} ) {

		my $user_key = $cookies{"TabroomToken"};

		# Authentication key must correspond to a session in the database
		my $session = Tab::Session->search(
			userkey => $user_key
		)->first;

		my $check_key = crypt($session->id.$Tab::string, $user_key) if $session;

		if ($session) {

			# Userid must correspond to a user in the database
			my $person = $session->person();

			unless (
				(defined $person)
				&& (defined $person->email)
				&& ($check_key eq $user_key)
			) {

				$session->delete();

				my $tokencookie = Apache2::Cookie->new($r,
					-name     => 'TabroomToken',
					-value    => '',
					-secure   => 1,
					-httponly => 1,
					-domain   => '.tabroom.com',
					-expires  => '+1s',
					-path     => '/'
				);

				$tokencookie->bake($r);

				my $err = "Your current session has expired or is somehow invalid.  Please log in again";
				$m->redirect("/index/index.mhtml?err=$err");

			} else {
				return ($person, $session);
			}
		}

	} else {

        unless ($r->uri =~ /user\/login/
            || $r->uri =~ /index\//
            || $r->uri =~ /api\//
            || $r->uri =~ /user\/admin\/su_return.mhtml/
        ) {

			my $string;

			foreach my $key (keys %cookies) {

				next if $key eq "_ga";
				next if $key eq "_gid";
				next if $key eq "_gat";

				$string .= " Cookie key $key result ".$cookies{'TabroomToken'};

				my $delcookie = Apache2::Cookie->new($r,
					-name     => $key,
					-value    => 'Hello',
					-secure   => 1,
					-httponly => 1,
					-domain   => '.tabroom.com',
					-expires  => '+1s',
					-path     => '/'
				);

				$delcookie->bake($r);

				$delcookie = Apache2::Cookie->new($r,
					-name     => $key,
					-value    => 'Hello',
					-secure   => 1,
					-httponly => 1,
					-domain   => 'www.tabroom.com',
					-expires  => '+1s',
					-path     => '/'
				);

				$delcookie->bake($r);

		        $delcookie = Apache2::Cookie->new(
					$r,
					-name     => $key,
					-value    => 'Hello',
					-secure   => 0,
					-httponly => 1,
					-expires  => '+1s',
					-path     => '/'
				);

				$delcookie->bake($r);
			}

			my @cookies = split(";", $r->headers_in->{'Cookie'});
		}
	}

	return;

</%perl>
