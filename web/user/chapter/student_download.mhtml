<%args>
	$chapter_id
	$person
</%args>
<%init>

	unless ($person->site_admin) {
		$m->comp("/funclib/abort.mas", message => "That is a site admin function only");
	}

	my %students;

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			student.id, student.first, student.middle, student.last,
			student.phonetic, student.grad_year, student.novice, student.retired,
			student.nsda, student.chapter, student.person, student.person_request, student.timestamp
		from student
		where student.chapter = ?
	");

	$sth->execute($chapter_id);

	while (
		my $ref = $sth->fetchrow_hashref()
	) {

		my $id = $ref->{'id'};

		foreach my $field (keys %{$ref}) {
			if ($ref->{$field}) {
				$students{$id}{$field} = $ref->{$field};
			}
		}
	}

	$sth->finish();

	$sth = $dbh->prepare("
		select
			ss.tag, ss.student, ss.value, ss.value_date, ss.value_text
		from (student, student_setting ss)
		where student.chapter = ?
		and student.id = ss.student
	");

	$sth->execute($chapter_id);

	while (
		my (
			$tag, $student, $value, $value_date, $value_text
		) = $sth->fetchrow_array()
	) {

		next unless $value;
		$students{$student}{"settings"}{$tag}{"value"} = $value;
		$students{$student}{"settings"}{$tag}{"value_date"} = $value_date if $value_date;
		$students{$student}{"settings"}{$tag}{"value_text"} = $value_text if $value_text;
	}

	$sth->finish();

	$sth = $dbh->prepare("
		select
			es.student, es.entry
		from (student, entry_student es)
		where student.chapter = ?
		and student.id = es.student
	");

	$sth->execute($chapter_id);

	while (
		my (
			$student, $entry
		) = $sth->fetchrow_array()
	) {
		push @{$students{$student}{"entries"}}, $entry;
	}

	$sth->finish();
	$dbh->disconnect();

	$m->clear_buffer();
	$r->content_type('application/json');

    my $json = JSON->new->allow_nonref->convert_blessed;

	my $chapter = Tab::Chapter->retrieve($chapter_id);
	my $filename = $chapter->name;
	$filename =~ s/[\W_]//g;
	$filename .= "-StudentRoster.json";

	$r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";
	$m->print($json->pretty->encode( \%students ));
	$m->flush_buffer();
	$m->abort();


</%init>
