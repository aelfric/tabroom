<%args>
	$person
	$category_id        => undef
	$judge_id           => undef
	$email              => undef
	$school_id          => undef
	$original_school_id => undef
	$chapter_judge_id   => undef
</%args>
<%init>

	my $judge = Tab::Judge->retrieve($judge_id) if $judge_id;

	my $category = Tab::Category->retrieve($category_id);

	my $tourn = $category->tourn;
	my $chapter_judge;
	my $jperson;
	my $original_school;

	if ($chapter_judge_id) {

		$chapter_judge = Tab::ChapterJudge->retrieve($chapter_judge_id);
		$jperson = $chapter_judge->person;

	} elsif ($email) {

		$jperson = Tab::Person->search(email => $email)->first;

		if ($jperson) {
			$original_school = Tab::School->retrieve($original_school_id);

			unless ($original_school) {
				my $err = "Every Worlds judge must have an affiliated school";
				$m->redirect("wsdc_judge_edit.mhtml?judge_id=$judge_id&school_id=$school_id&email=$email&err=$err");
			}

			$chapter_judge = Tab::ChapterJudge->search( chapter => $original_school->chapter->id, person => $jperson->id)->first;

			unless ($chapter_judge) {
				$chapter_judge = Tab::ChapterJudge->create({
					first   => $jperson->first,
					middle  => $jperson->middle,
					last    => $jperson->last,
					chapter => $original_school->chapter,
					retired => 0,
					person  => $jperson->id
				});
			}
		}
	}

	unless ($chapter_judge) {
		my $err = "No chapter judge record found with that ID";
		$m->redirect("wsdc_judge_edit.mhtml?judge_id=$judge_id&school_id=$school_id&email=$email&err=$err");
	}

	unless ($jperson) {
		my $err = "No tabroom account found for that email or judge.  All judges must be linked to a tabroom account";
		$m->redirect("wsdc_judge_edit.mhtml?judge_id=$judge_id&school_id=$school_id&email=$email&err=$err");
	}

	Tab::Judge->set_sql( dupes => "
		select judge.*
			from judge, category
		where judge.category = category.id
			and category.tourn = ?
			and judge.person = ?
			and judge.id != ?
	");

	my @dupes;

	if ($tourn > 0 && $jperson > 0 && $judge > 0) {
		@dupes = Tab::Judge->search_dupes($tourn->id, $jperson->id, $judge->id);
	}

	if (@dupes) {
		my $err = "Tabroom account ".$jperson->email." is already registered to judge this tournament.";
		$m->redirect("wsdc_judge_edit.mhtml?judge_id=$judge_id&school_id=$school_id&cj_id=$chapter_judge_id&email=$email&err=$err");
	}

	if ($judge) {

		$judge->chapter_judge($chapter_judge->id);
		$judge->first($chapter_judge->first);
		$judge->middle($chapter_judge->middle);
		$judge->last($chapter_judge->last);
		$judge->person($chapter_judge->person);
		$judge->update();

	} else {

		$judge = Tab::Judge->create({
			first         => $chapter_judge->first,
			middle        => $chapter_judge->middle,
			last          => $chapter_judge->last,
			person        => $chapter_judge->person,
			school        => $school_id,
			chapter_judge => $chapter_judge->id
		});
	}

	unless ($original_school) {
		$original_school = Tab::School->search(tourn => $tourn, chapter => $chapter_judge->chapter)->first;
	}

	unless ($original_school) {
		my $err = "Every Worlds judge must have an affiliated school";
		$m->redirect("wsdc_judge_edit.mhtml?judge_id=$judge_id&school_id=$school_id&email=$email&err=$err");
	}

	$judge->setting('original_school', $original_school->id);

	$m->comp("/funclib/nsda/membership.mas", person => $jperson);

	my $msg = "Judge details saved";

	$m->redirect("wsdc_judge_edit.mhtml?judge_id=".$judge->id."&school_id=".$school_id."&msg=$msg");

</%init>
