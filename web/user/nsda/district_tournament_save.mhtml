<%args>
	$person
	$person_settings => undef
	$district_id     => undef
</%args>
<%init>

    my $district =
		Tab::District->retrieve($district_id)
		if $district_id;

    $m->abort unless $district;

    my $permission = Tab::Permission->search(
        district => $district->id,
        person   => $person->id
    )->first;

    $permission++ if $person->site_admin;
    $permission++ if $person_settings->{"nsda_admin"};

	unless ($permission) {
		$m->print('<div class="main"><h4 class="warning">');
		$m->print("You do not have access to District ".$district_id);
		$m->print('</h4></div>');
	}

	my @existing = $m->comp(
		"/funclib/district_tourns.mas",
		district => $district
	);

	my $tourn = shift @existing if @existing;

	$m->abort() unless $tourn;

	my $tz = $tourn->tz;
	$tz = "America/Chicago" unless $tz;

	my $earliest_start = $tourn->start;
	my $latest_end = $tourn->end;
    my $answers = $tourn->setting("nsda_district_questions");

	my @weekends = $tourn->weekends();

	foreach my $weekend (@weekends) {

		next unless $weekend->site > 0;
		next if $answers->{'nsda_tabbing_software'} ne "tabroom";

		unless (
			Tab::TournSite->search(
				tourn => $tourn,
				site  => $weekend->site
			)
		) {
			Tab::TournSite->create({
				tourn => $tourn->id,
				site  => $weekend->site->id
			});
		}
	}


	foreach my $weekend (@weekends) {

		$weekend->name($ARGS{"name_".$weekend->id});

		if ($answers->{'nsda_tabbing_software'} eq "tabroom") {
			$weekend->site($ARGS{"site_".$weekend->id});

			unless ($ARGS{"site_".$weekend->id}) {
				if ($ARGS{"site_name_".$weekend->id}) {
					my $site = Tab::Site->create({
						name    => $ARGS{"site_name_".$weekend->id},
						circuit => 83
					});
					$weekend->site($site->id);
				}
			}
		}

		$weekend->city($ARGS{"city_".$weekend->id});
		$weekend->state($ARGS{"state_".$weekend->id});

		my $start;
		my $end;
		my $reg_start;
		my $reg_end;
		my $freeze_deadline;
		my $drop_deadline;
		my $judge_deadline;
		my $fine_deadline;

        eval {

            $start = Tab::dtme(
				$ARGS{"start_".$weekend->id},
				$ARGS{"starttime_".$weekend->id},
				$tz
			);

            $end = Tab::dtme(
				$ARGS{"end_".$weekend->id},
				$ARGS{"endtime_".$weekend->id},
				$tz
			);

            $reg_start = Tab::dtme(
				$ARGS{"reg_start_".$weekend->id},
				$ARGS{"reg_starttime_".$weekend->id},
				$tz
			);

            $reg_end = Tab::dtme(
				$ARGS{"reg_end_".$weekend->id},
				$ARGS{"reg_endtime_".$weekend->id},
				$tz
			);

            $freeze_deadline = Tab::dtme(
				$ARGS{"freeze_deadline_".$weekend->id},
				$ARGS{"freeze_deadlinetime_".$weekend->id},
				$tz
			);

            $drop_deadline = Tab::dtme(
				$ARGS{"drop_deadline_".$weekend->id},
				$ARGS{"drop_deadlinetime_".$weekend->id},
				$tz
			);

            $fine_deadline = Tab::dtme(
				$ARGS{"fine_deadline_".$weekend->id},
				$ARGS{"fine_deadlinetime_".$weekend->id},
				$tz
			);

            $judge_deadline = Tab::dtme(
				$ARGS{"judge_deadline_".$weekend->id},
				$ARGS{"judge_deadlinetime_".$weekend->id},
				$tz
			);

        };

		$weekend->start($start) if $start;
		$weekend->end($end) if $end;
		$weekend->reg_start($reg_start) if $reg_start;
		$weekend->reg_end($reg_end) if $reg_end;
		$weekend->freeze_deadline($freeze_deadline) if $freeze_deadline;
		$weekend->drop_deadline($drop_deadline) if $drop_deadline;
		$weekend->fine_deadline($fine_deadline) if $fine_deadline;
		$weekend->judge_deadline($judge_deadline) if $judge_deadline;

		$weekend->update();

		if ($earliest_start > $start) {
			$earliest_start  = $start->clone();
		}

		if ($latest_end > $end) {
			$latest_end  = $end->clone();
		}

	}

	$tourn->start($earliest_start);
	$tourn->end($latest_end);

	my $msg = "District tournament created successfully!";
	$m->redirect("district_survey.mhtml?district_id=$district_id&msg=$msg");
#	$m->redirect("district_done.mhtml?district_id=$district_id&msg=$msg");

</%init>
