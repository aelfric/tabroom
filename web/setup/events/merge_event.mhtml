<%args>
	$person
	$tourn
	$event_id   => undef
	$merge_into => undef
	$certain    => undef
</%args>
<%perl>

	my $event = Tab::Event->retrieve($event_id);
	my $merge = Tab::Event->retrieve($merge_into);

	unless ($event && $merge) {
		my $err = "You did not specify an event to merge into.";
		$m->redirect("/setup/events/edit.mhtml?err=$err");
	}

	if ($certain eq "I am certain") {

		my $dbh = Tab::DBI->db_Main();

		my $sth = $dbh->prepare('
			update entry set event = ? where event = ?
		');

		$sth->execute($merge->id, $event->id);
		my %new_round_by_name = map {$_->name => $_} $merge->rounds;

		foreach my $old_round ($event->rounds) {

			my $new_round = $new_round_by_name{$old_round->name};

			if ($new_round) {
				foreach my $panel ($old_round->panels) {
					$panel->round($new_round->id);
					$panel->update();
				}
			} else {
				$old_round->event($merge->id);
				$old_round->id();
			}
		}

		my $err = "Entries and rounds from ".$event->name." have been merged into ". $merge->name;
		# $event->delete();
		$m->redirect("/setup/events/edit.mhtml?event_id=$merge_into&err=$err");
	}

</%perl>

	<div class="blankfull centeralign">

		<span class="ninetenths">

		<form
			action = "merge_event.mhtml"
			method = "post"
		>

			<input
				type  = "hidden"
				value = "<% $event_id %>"
				name  = "event_id"
			>

			<input
				type  = "hidden"
				value = "<% $merge_into %>"
				name  = "merge_into"
			>

		<&  "/funclib/warning.mas", person => $person &>

			<p class="strong centeralign martopmore">
				You are about to permanently delete <% $event->name %>, and
				move its entries into <% $merge->name %>
			</p>

			<p>
				The competitors merged into the new event will keep their old
				speaker codes.  Existing panel assignments from the old event
				will be moved to corresponding rounds in the new event, if the
				round numbers match; otherwise rounds will be moved into new
				timeslots.
			</p>

			<p>
				Any debates/speech rounds that have occurred will be merged
				into the round with the corresponding number in the new event.
			</p>

<%perl>
			if (
				($merge->setting('min_entry') != $event->setting('min_entry'))
				|| ($merge->setting('max_entry') != $event->setting('max_entry'))
			) {
</%perl>
				<p class="err bigger">
					EXTRA SPECIAL WARNING: You are trying to merge two events where
					there are different numbers of competitors per entry.  This is
					liable to lead to really weird results.  You better be real certain
					you know what you're doing here, and don't come crying to me when
					the computer pitches a fit at you.
				</p>
%			}

			<p>
				This cannot be undone.
			</p>

			<p>
				No, really.  Please be very certain, Jeff.
			</p>

% 			if ($certain) {
				<p class="redtext semibold bigger">
					You did not type "I am certain", exactly like that.  Try again
				</p>
% 			}

			<p>
				To proceed, type "I am certain" in the box below:
			</p>

			<div class="centeralign">
				<span class="centeralign martopmore third">
					<input
						type           = "text"
						name           = "certain"
						size           = "20"
						autocomplete   = "off"
						autocorrect    = "off"
						autocapitalize = "off"
						spellcheck     = "false"
						class          = "martop notfirst"
					>
				</span>
			</div>

			<div class="centeralign">
				<input
					type  = "submit"
					value = "Yes I am sure I know what I am doing"
				>
			</div>
		</form>

		</span>

	</div>
