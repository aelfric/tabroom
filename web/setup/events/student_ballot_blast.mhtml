<%args>
	$tourn
	$tourn_settings
	$person
	$event_id => undef
	$message  => undef
	$mode     => "event"
</%args>
<%init>

	$message = substr($message, 0, 60);

	my $target;
	my %target_settings;

	if ($mode eq "event") {
		$target = Tab::Event->retrieve($event_id);
		$m->abort unless $target;
		%target_settings = $target->all_settings();
	} else {
		$target = $tourn;
		%target_settings = %{$tourn_settings};
	}

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $label = $target_settings{"student_ballot_label"};
	$label = "Entry Ballot" unless $label;

	my $subject = $target->abbr." $label";

	my $body = " Event: ".$target->name." \n";
	$body .= "Tournament: ".$tourn->name." \n";

	my $student_ballot_open = $target_settings{"student_ballot_opens"};
	my $student_ballot_close = $target_settings{"student_ballot_closes"};
	my $now = DateTime->now();

	$body .= $message;

	if ($student_ballot_open > $now) {

		$body .= "Voting for $label will open at ";

		$body .= $m->comp("/funclib/showdt.mas",
			dt     => $student_ballot_open,
			tz     => $tourn->tz,
			length => "murica",
			return => "yes",
			tzname => "yes"
		);

		$body .= "\n";
		$body .= "Voting will close at ";

		$body .= $m->comp("/funclib/showdt.mas",
			dt     => $student_ballot_close,
			tz     => $tourn->tz,
			length => "murica",
			return => "yes",
			tzname => "yes"
		);

		$body .= "\n";
		$body .= "Active entries only may vote.  Vote by logging into your Tabroom account and checking for the $label button under Future Entries.";
		$body .= "\n";

	} elsif ($student_ballot_open < $now) {

		$body .= "Voting for $label is now open! ";
		$body .= "\n";
		$body .= "Voting will close at ";

		$body .= $m->comp("/funclib/showdt.mas",
			dt => $student_ballot_close,
			tz => $tourn->tz,
			length => "murica",
			return => "yes",
			tzname => "yes"
		);

		$body .= "\n";
		$body .= "Active entries only may vote.  Vote by logging into your Tabroom account and checking for the $label button under Future Entries.";
		$body .= "\n";
	}

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select person.email, person.id
			from person, student, entry_student es, entry
		where entry.event = ?
			and entry.active = 1
			and entry.id = es.entry
			and es.student = student.id
			and student.person = person.id
			and person.no_email != 1
	");

	$sth->execute($target->id);

	my @recipients;
	my @ids;
	my @texts;

	while (
		my ($email, $id) = $sth->fetchrow_array()
	) {
		push @recipients, $email;
		push @ids, $id;
	}

	$sth->finish();

	$sth = $dbh->prepare("
		select person.email, person.id
			from person, permission, school, entry
		where entry.event = ?
			and entry.active = 1
			and entry.school = school.id
			and school.chapter = permission.chapter
			and permission.tag = 'chapter'
			and permission.person = person.id
			and person.no_email != 1
	");

	$sth->execute($target->id);

	while (
		my ($email, $id) = $sth->fetchrow_array()
	) {
		push @recipients, $email;
		push @ids, $id;
	}

	my $numberwang = substr($now->epoch, -6, 6);
	my $from_string = $tourn->name." <".$tourn->webname.'_'.$numberwang.'@www.tabroom.com>';

	$m->comp( "/funclib/send_notify.mas",
		tourn    => $tourn,
		from     => $from_string,
		sender   => $person,
		reply_to => $person->email,
		ids      => \@ids,
		subject  => $subject,
		text     => $body
	);

	my $msg = "Notification emails sent to ".scalar @ids." entries & coaches";

	$m->redirect("student_ballot.mhtml?event_id=".$target->id."&mode=$mode&msg=$msg");

</%init>
