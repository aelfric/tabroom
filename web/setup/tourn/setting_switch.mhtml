<%args>
	$person
	$tourn
	$tourn_settings
	$target_id      => undef
	$setting_name   => undef
	$property_name  => undef
	$property_value => 0
	$logtype        => "tabbing"
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');
	my $now = DateTime->now();
	my $dbh = Tab::DBI->db_Main();

	unless ($property_name || $setting_name) {
		$m->print('{ "error": true, "message": "No property to change sent"}');
		$m->abort();
	}

	unless ($tourn) {
		$m->print('{ "error": true, "message": "No tourn found for ID '.$target_id.'"}');
		$m->abort();
	}

	my $message;
	my $nsda;

	my $logmsg;

	if ($setting_name) {

		$tourn->setting($setting_name, $property_value);
		$tourn_settings->{$setting_name} = $property_value;

		$message = "Setting $setting_name changed to $property_value";

		if (
			(substr($setting_name, 0, 4) eq "nsda")
		) {

			my $award = $setting_name;
			$award =~ s/nsda_//g;
			$award =~ s/_trophy/ award/g;

			if ($property_value) {
				$logmsg = ucfirst($award)." changed to ORDERED";
			} else {
				$logmsg = ucfirst($award)." changed to NOT ordered";
			}

			$logtype = "districts";

		} elsif ($setting_name eq "shipping_address") {
			$logtype = "districts";
			$logmsg = "Shipping address changed";
		}

		circuit_me($tourn_settings, $tourn, "ncfl", 3);
		circuit_me($tourn_settings, $tourn, "wsdc", 120);
		circuit_me($tourn_settings, $tourn, "nsda_nats", 83, "nsda_district");
		circuit_me($tourn_settings, $tourn, "pkd", 126);
		circuit_me($tourn_settings, $tourn, "nsda_ms_nats", 25);

	} elsif ($property_name) {

		if ($property_name eq "hidden") {

			if (
				$tourn_settings->{"nc_purchased"}
				&& (not defined $person->site_admin)
			) {

				my $sth = $dbh->prepare("
					select count(distinct panel.id)
					from panel, round, event
					where event.tourn = ?
						and event.id = round.event
						and round.id = panel.round
				");

				$sth->execute($tourn->id);

				my ($panel_count) = $sth->fetch();
				$sth->finish();

				if ($panel_count) {

					my $message = "You may not change the hidden status of an NSDA Campus tournament that has existing rounds/sections.  You have $panel_count sections assigned.";

					my %response = (
						error   => 1,
						message => $message
					);

					$m->print(JSON::encode_json(\%response));
					$m->abort();
				}
			}

			if ($property_value > 0) {
				$property_value = "1";
			} else {

				my $sth = $dbh->prepare("
					update round, event
						set round.published = 0
						where event.tourn = ?
						and event.id = round.event
				");

				$sth->execute($tourn->id);
				$sth->finish();
				$property_value = "0";
			}
		}

		$tourn->$property_name($property_value);
		$tourn->update();
		$message = "Property $property_name changed to $property_value";

	}

    my %response = (
		error   => 0,
		message => $message
    );

	$logmsg = $message unless $logmsg;

    $m->comp("/funclib/log.mas",
		type        => $logtype,
		tourn       => $tourn->id,
		person      => $person->id,
		description => $logmsg
	);

    $m->print(JSON::encode_json(\%response));
	$m->abort();

	sub circuit_me {

		my ($args, $tourn, $tag, $circuit_id, $tag2)  = @_;

		my @exists = Tab::TournCircuit->search(
			tourn   => $tourn->id,
			circuit => $circuit_id
		);

		if ($args->{$tag} || $args->{$tag2} )  {

			unless (@exists) {

				my $tc = Tab::TournCircuit->create({
					tourn    => $tourn->id,
					circuit  => $circuit_id,
					approved => 1
				});
			}

		} else {
			foreach my $exist (@exists) {
				$exist->delete();
			}
		}
	}


</%init>
