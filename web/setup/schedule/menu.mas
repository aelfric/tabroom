<%args>
	$tourn
	$perms        => undef
	@days         => undef
	$today        => undef
	$event        => undef
	$tourn_events => undef
</%args>

%	my $dbh = Tab::DBI->db_Main();

	<div class="menu">

%		if (@days && (scalar @days > 1) &! $perms->{"details"}) {
			<div class="sidenote padbottom">
				<h4>Tournament Days</h4>

%				foreach my $tday (@days) {
					<a
						href="sked.mhtml?date=<% $tday->mdy('/') %>"
						class="full <% ($today && $tday->mdy eq $today->mdy) ? "dk" : "" %>blue"
					>
						<span class="fourfifth">
							<% $tday->day_name %>
						</span>
						<span class="fifth">
							(<% Tab::niceshortdate($tday) %>)
						</span>
					</a>
%				}
			</div>
%		}

		<div class="sidenote">
			<h4>Schedule Rounds</h4>

			<a
				href  = "sked.mhtml"
				class = "blue full"
			>View/Edit Full Schedule</a>

			<a
				href  = "print.mhtml"
				class = "blue full marbottom"
			>Print Full Schedule</a>
<%perl>
			unless ($tourn_events) {

				my $event_sth = $dbh->prepare("
					select
						event.id, event.name, event.abbr, event.type,
						supp.value supp,
						weekend.value weekend,
						count(round.id) as rounds
					from event

						left join event_setting supp
							on supp.tag = 'supp'
							and supp.event = event.id

						left join event_setting weekend
							on weekend.tag = 'weekend'
							and weekend.event = event.id

						left join round on round.event = event.id

					where event.tourn = ?
					group by event.id
					order by event.type, supp.value, event.name
				");

				$event_sth->execute(int($tourn));

				my %tourn_events = eval {
					return map {$_->{id} => $_} @{$event_sth->fetchall_hash()};
				};

				$tourn_events = $m->comp(
					"/funclib/event_perms.mas",
					perms      => $perms,
					type       => "tabber",
					event_hash => \%tourn_events
				);
			}

			my $undone;
			my $last_type;
			my $last_supp;

			foreach my $ev_id (sort {
				$tourn_events->{$a}{supp} <=> $tourn_events->{$b}{supp}
				|| $tourn_events->{$a}{type} cmp $tourn_events->{$b}{type}
				|| $tourn_events->{$a}{abbr} cmp $tourn_events->{$b}{abbr}
				} keys %{$tourn_events}
			) {

				my $ev = $tourn_events->{$ev_id};

				$undone++ unless $ev->{rounds};
</%perl>
				<a
					href="event.mhtml?event_id=<% $ev->{id} %>"
					class="full <% $event->{id} == $ev->{id} ? "dk" : ""
						%><%
						$ev->{rounds} ? "blue" : "red"
						%> <%
							$last_type ne $ev->{type} ? "martopmore" : ""
						%> <%
							$last_supp ne $ev->{supp} ? "martopmore" : ""
						%>"
					>
					<% $ev->{name} %>
				</a>
%				$last_type = $ev->{type};
%				$last_supp = $ev->{supp};
%			}

%			if ($undone) {
				<p class="warning smaller">
					Events in red have no rounds scheduled.  You MUST schedule
					rounds for events before pairing/sectioning
				</p>
%			}
		</div>
	</div>

