<%args>
	$tourn
	$category_id
</%args>
<%perl>


	my $category;
	$category = Tab::Category->retrieve($category_id) if $category_id;

	$m->abort unless $category;

	my @settings = ("parli", "prefer", "link_required", "supp", "hire_price", "hire", "paradigm_quiz");

	my %jpool_settings = $m->comp(
		"/funclib/jpool_settings.mas",
		category => $category
	);

	foreach my $jpool ($category->jpools) {

		next unless $jpool_settings{$jpool->id}{"registrant"};

		$jpool->name($ARGS{$jpool->id."_name"});
		$jpool->update;

		foreach my $setting (@settings) {

			if ($ARGS{$jpool->id."_".$setting}) {
				$jpool->setting($setting, $ARGS{$jpool->id."_".$setting});
			} else {
				$jpool->setting($setting, 0)
			}
		}

		$jpool->setting("registrant", 1);

		if ($ARGS{"choice_".$jpool->id}) {

			my $already = $jpool_settings{$jpool->id}{"site_choices"};

			my $name = $ARGS{"choice_".$jpool->id};
			$name  =~ s/[^\w\s]//g;

			my $uuid = eval {
				open my $fh, "/proc/sys/kernel/random/uuid";
				return scalar <$fh>;
			};

			chomp $uuid;

			my $new = ({
				id   => $uuid,
				name => $name
			});

			push @{$already}, $new;
			$jpool->setting("site_choices", "json", $already);
		}
	}

	if ($ARGS{"new_name"}) {

		my $jpool = Tab::JPool->create({
			category => $category_id,
			name     => $ARGS{"new_name"}
		});

		foreach my $setting (@settings) {
			$jpool->setting($setting, $ARGS{"new_".$setting});
		}

		$jpool->setting("registrant", 1);
	}

	my $msg = "Judge Pool settings saved ";

	$m->redirect("/setup/judges/nsda_pools.mhtml?category_id=".$category_id."&msg=".$msg);

</%perl>
