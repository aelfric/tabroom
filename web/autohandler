<%args>
</%args>
<%init>

	my $debug = $Tab::debug;
	my ($person, $session) = $m->comp( "/user/login/authenticate.mas");

	my $tourn;
	my %tourn_settings;

	my %perms;
	my %person_settings;

	my $defaults;

	if ($person) {

		$defaults = $session->default();
		%person_settings = $person->all_settings();

		if ($r->hostname eq "www.tabroom.com" ) {
			if ($ARGS{"fabulous"}) {
				if (not defined $defaults->{"fabulous"}) {
					$defaults->{"fabulous"}++;
					$session->default($defaults);
					$session->update();
				}
				$m->redirect("https://www.tabroom.com/index/index.mhtml");
			}

			if ($ARGS{"closet"}) {
				if ($defaults->{"fabulous"}) {
					delete $defaults->{"fabulous"};
					$session->default($defaults);
					$session->update();
				}
				$m->redirect("https://www.tabroom.com/index/index.mhtml");
			}
		}
	}

	# If the user is in the tournament specific areas, verify that they have
	# access to the tournament queried and then supply the tournament,
	# permissions, and tourn_settings required for it.

	my $test;
	my $disallow;
	my $disallow_tourn;

	if ($person_settings{"email_unconfirmed"}) {
		unless ($r->uri =~ /user\/login/
			|| $r->uri =~ /index\//
			|| $r->uri =~ /user\/admin\/su_return.mhtml/
		) {
			$m->redirect("/user/login/confirm.mhtml");
		}
	}

	if (
		$r->uri =~ /user\/chapter\/tourn_register.mhtml/
		|| $r->uri =~ /setup.mhtml/
	) {

	} elsif ( $person && (
			$r->uri =~ /\/setup\//
			|| $r->uri =~ /\/register\//
			|| $r->uri =~ /\/panel\//
			|| $r->uri =~ /\/tabbing\//
			|| $r->uri =~ /\/api\/upload_data.mhtml/
			|| $r->uri =~ /user\/tourn\/select.mhtml/
		)
	) {

		my $dbh = Tab::DBI->db_Main();
		my $sth;

		my %checks;

		if ($ARGS{"panel_id"} && $ARGS{"panel_id"} eq int($ARGS{"panel_id"})) {

			$test++;
			$disallow = "Panel ".$ARGS{"panel_id"};

			$sth = $dbh->prepare("
				select event.tourn, permission.id, event.id, category.id
				from (panel, round, event)
				left join category on category.id = event.category
				left join permission on permission.tourn = event.tourn and permission.person = ?

				where panel.id = ?
					and panel.round = round.id
					and round.event = event.id
					and event.category = category.id
			");

			$sth->execute($person, $ARGS{"panel_id"});
			$checks{"event"}++;
			$checks{"category"}++;

		} elsif ($ARGS{"round_id"} && $ARGS{"round_id"} eq int($ARGS{"round_id"})) {

			$test++;
			$disallow = "Round ".$ARGS{"round_id"};

			$sth = $dbh->prepare("
				select event.tourn, permission.id, event.id, category.id
				from (round, event)
				left join permission on permission.tourn = event.tourn and permission.person = ?
				left join category on category.id = event.category

				where round.id = ?
				and round.event = event.id
				and event.category = category.id
			");

			$sth->execute($person, $ARGS{"round_id"});
			$checks{"event"}++;
			$checks{"category"}++;

		} elsif ($ARGS{"event_id"} && $ARGS{"event_id"} eq int($ARGS{"event_id"})) {

			$test++;
			$disallow = "Event ".$ARGS{"event_id"};

			$sth = $dbh->prepare("
				select event.tourn, permission.id, event.id, category.id
				from (event)
				left join permission on permission.tourn = event.tourn and permission.person = ?
				left join category on category.id = event.category

				where event.id = ?
			");

			$sth->execute($person, $ARGS{"event_id"});
			$checks{"event"}++;
			$checks{"category"}++;

		} elsif ($ARGS{"category_id"} && $ARGS{"category_id"} eq int($ARGS{"category_id"})) {

			$test++;
			$disallow = "Category ".$ARGS{"category_id"};

			$sth = $dbh->prepare("
				select category.tourn, permission.id, category.id, category.id
				from (category)
				left join permission on permission.tourn = category.tourn and permission.person = ?
				where category.id = ?
			");

			$sth->execute($person, $ARGS{"category_id"});
			$checks{"category"}++;

		} elsif ($ARGS{"school_id"} && $ARGS{"school_id"} eq int($ARGS{"school_id"})) {

			$test++;
			$disallow = "School ".$ARGS{"school_id"};

			$sth = $dbh->prepare("
				select school.tourn, permission.id
				from (school)
				left join permission on permission.tourn = school.tourn and permission.person = ?
				where school.id = ?
			");

			$sth->execute($person, $ARGS{"school_id"});

		} elsif ($ARGS{"jpool_id"} && $ARGS{"jpool_id"} eq int($ARGS{"jpool_id"})) {

			$test++;
			$disallow = "School ".$ARGS{"jpool_id"};

			$sth = $dbh->prepare("
				select category.tourn, permission.id
					from (jpool, category)
				left join permission on permission.tourn = category.tourn and permission.person = ?
					where jpool.id = ?
				and jpool.category = category.id
			");

			$sth->execute($person, $ARGS{"jpool_id"});

		} elsif ($ARGS{"tourn_id"} && $ARGS{"tourn_id"} eq int($ARGS{"tourn_id"})) {

			$defaults->{tourn} = $ARGS{"tourn_id"};
		}

		if ($sth) {

			delete $defaults->{tourn};

			my $event_check;
			my $category_check;

			while (
				my (
					$tourn_id, $permission_id, $event_id, $category_id
				) = $sth->fetchrow_array()
			) {

				if ($checks{"category"} && $category_id) {
					$checks{"category"} = $category_id;
				}

				if ($checks{"event"} && $event_id) {
					$checks{"event"} = $event_id;
				}

				if ($permission_id || $person->site_admin || $person_settings{"nsda_admin"}) {
					unless ($defaults->{tourn} == $tourn_id) {
						$defaults->{tourn} = $tourn_id;
						$session->default($defaults);
						last;
					}
				} else {
					$disallow_tourn = $tourn_id;
				}
			}
			$sth->finish();
		}

		if (
			$ARGS{tourn_id}
			&& $ARGS{tourn_id} != $defaults->{tourn}
			&& ($person->site_admin || $person_settings{"nsda_admin"})
		) {
			unless ($defaults->{tourn} == $ARGS{"tourn_id"}) {
				$defaults->{tourn} = $ARGS{"tourn_id"};
				$session->default($defaults);
			}
		}

		#In with the new

		if ($defaults->{tourn}) {

			$tourn = Tab::Tourn->retrieve($defaults->{tourn}) unless $tourn;
			%perms = $person->all_permissions($tourn);

			if (
				$perms{by_event}
				&& $checks{"event"}
				&& (not defined $perms{"details"}{$checks{'event'}})
			) {

				undef $tourn;
				my $err = "You do not have access to that area.";
				$m->redirect("/tabbing/entry/index.mhtml?err=$err");

			} elsif ($perms{tourn}{$tourn->id}) {

				%tourn_settings = $tourn->all_settings();
				$disallow .= " Tournament ".$defaults->{tourn};

			} else {
				undef $tourn;
				my $err = "You do not have access to that tournament.";
				$m->redirect("/user/home.mhtml?err=$err");
			}

			$session->default($defaults);
			$session->update();

		}
	}

	if ($person) {
		unless (%perms) {
			%perms = $person->all_permissions();
		}
	}

</%init>

%	unless ($r->uri =~ /\/api\// && ($r->uri ne '/api/upload_data.mhtml')) {

	<!DOCTYPE
		html
		PUBLIC
		"-//W3C//DTD XHTML 1.0 Transitional//EN"
		"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"
	>

	<meta
		http-equiv = "Content-Type"
		content    = "text/html; charset = utf-8"
	/>

	<html>

		<head>

			<link rel="stylesheet" type="text/css" href="/lib/css/reset.css">
			<link rel="stylesheet" type="text/css" href="/lib/css/jqueryui.css">
			<link rel="stylesheet" type="text/css" href="/lib/css/uniform.css">
			<link rel="stylesheet" type="text/css" href="/lib/css/fonts/fonts.css">
			<link rel="stylesheet" type="text/css" href="/lib/css/alertify.min.css">
			<link rel="stylesheet" type="text/css" href="/lib/css/alertify-bootstrap.min.css">
			<link rel="stylesheet" type="text/css" href="/lib/css/tabroom.css">

<%perl>
			if ($r->hostname eq "local.tabroom.com"
				|| $r->hostname eq "dev.tabroom.com"
				|| $r->hostname eq "abe.debatefail.com"
				|| $r->hostname eq "localhost"
			) {
</%perl>
				<link
					rel   = "stylesheet"
					type  = "text/css"
					media = screen
					href  = "/lib/css/local.css"
				>
<%perl>
			} elsif ($r->hostname =~ "testing.tabroom.com"
				|| $r->hostname =~ "profiler.tabroom.com"
			) {
</%perl>

				<link
					rel   = "stylesheet"
					type  = "text/css"
					media = screen
					href  = "/lib/css/testing.css"
				>

%			} elsif ($r->hostname eq "staging.tabroom.com") {

				<link
					rel   = "stylesheet"
					type  = "text/css"
					media = screen
					href  = "/lib/css/staging.css"
				>

%			} elsif ($r->hostname eq "backup.tabroom.com") {

				<link
					rel   = "stylesheet"
					type  = "text/css"
					media = screen
					href  = "/lib/css/staging.css"
				>

%			} elsif ($defaults->{"fabulous"} || $ARGS{"fabulous"}) {
				<link
					rel   = "stylesheet"
					type  = "text/css"
					media = screen
					href  = "/lib/css/fabulous.css"
				>
%			}

<%perl>
			if ($test && (not defined $perms{"tourn"}{$tourn})) {

				if ($tourn) {
					$disallow_tourn = $tourn;
				}

				my $now = DateTime->now();

				$m->comp("/funclib/log.mas",
					tourn       => $disallow_tourn,
					person      => $person->id,
					type        => 'access_error',
					description => "Access denial to $disallow from ".$ENV{REMOTE_ADDR}
				);

				$m->print("</head><body><div id='wrapper'><div id='content'>");
				$m->comp("/funclib/abort.mas",
					message => "You do not have access to $disallow.  Please go back and try again",
					noback  => 1
				);
			}
</%perl>

			<title>
				<%
					$tourn && $tourn->start ? $tourn->start->year : ""
				%> <%
					$tourn ?  $tourn->name : ""
				%> Tabroom.com
			</title>

%			if ($r->hostname eq "local.tabroom.com" || $r->hostname eq "dev.tabroom.com" ) {
				<script
					type = "text/javascript"
					src  = "/lib/javascript/sources.js"
				></script>
				<script
					type = "text/javascript"
					src  = "/lib/javascript/tabroom.js"
				></script>
%			} else {
				<script
					type = "text/javascript"
					src  = "/lib/javascript/tabroom.v21.min.js"
				></script>
%			}

			<script
				type = "text/javascript"
				src  = "/lib/javascript/tinymce602/tinymce602.min.js"
			></script>

			<script>

				$(".alert").on('click', function(e){
					e.preventDefault();
					var href = this.href;
					alertify.confirm("Are you sure?", function (e) {
						if (e) {
							window.location.href = href;
						}
					});
				});

				$(document).ready(function(){

					// put the focus on the first editable element.
					$('*:input:enabled:visible:not(.notfirst):first').focus();
					$('.starthere').focus();

					// Adds the searchable select menus to eligible elements
					$("select:not(.plain)").chosen({
						no_results_text: "Oops, nothing found!",
						disable_search_threshold: 5
					});

					// Fixes the bug where selects in hidden divs would have
					// zero width.
					$(".chosen-container").each(function(i, chosenOne) {
						if ($(chosenOne).width() == 0) {
							$(chosenOne).width("100%");
						}
					});

					// Control-s gives you the search box
					Mousetrap.bind('mod+s', function(e) {
						$('#searchtext').focus();
						return false;
					});

					// Sets up the little arrows to close and open the sidebars
					$(".menu").prepend("<div class='shade openshade fa fa-forward'></div>");
					$("#content").prepend("<div class='hidden shade closedshade fa fa-backward'></div>");

					$(".shade").click( function() {
						$(".menu").toggleClass("hidden");
						$(".closedshade").toggleClass("hidden");
						$(".main").toggleClass("mainfull");
						$(".tabad_carousel").toggleClass("tabad_full");
					});

					// Scales any text to the size of its parent element that wants that
					$(".scalefont").bigtext();

					// adds zebra striping to elements, and resizes inputs to
					// the size of their parent

					fixVisual();
				});
<%perl>

			# People apparently care about XSS now from Tabroom which is
			# baffling but maybe a sign I've arrvied?

			foreach my $tag ("fullmsg", "err", "warn", "msg", "greenmsg", "yellowmsg", "quick") {
				$ARGS{$tag} =~ s/<br>/BREAKME/g;
				$ARGS{$tag} =~ s/<br\/>/BREAKME/g;
				$ARGS{$tag} =~ s/<br \/>/BREAKME/g;
				$ARGS{$tag} =~ s/\n/BREAKME/g;
				$ARGS{$tag} =~ s/[^a-zA-Z0-9, \@\.]+//g;
				$ARGS{$tag} =~ s/BREAKME/<br \/>/g;
			}

</%perl>

			<!-- This displays errors in a growl-like interface on the right when present. -->

			$(document).ready(function() {

				alertify.set('notifier','position', 'bottom-left');
				alertify.defaults.transition = "slide";
				alertify.defaults.theme.ok = "btn btn-primary";
				alertify.defaults.theme.cancel = "btn btn-danger";
				alertify.defaults.theme.input = "form-control";

%			if ($ARGS{"err"}) {
				alertify.set('notifier','delay', 20);
				alertify.alert("Something is perhaps wrong", "<% $ARGS{"err"} %>");
				alertify.set('notifier','delay', 10);
%			}

%			if ($ARGS{"warn"}) {
				alertify.set('notifier','delay', 20);
				alertify.warning("<% $ARGS{"warn"} %>");
				alertify.set('notifier','delay', 10);
%			}

%			unless ($ARGS{"fullmsg"}) {

%				if ($ARGS{"msg"}) {
					alertify.notify("<% $ARGS{"msg"} %>", "custom");
%				}

%				if ($ARGS{"greenmsg"}) {
					alertify.success("<% $ARGS{"greenmsg"} %>");
%				}

%				if ($ARGS{"yellowmsg"}) {
					alertify.warning("<% $ARGS{"yellowmsg"} %>");
%				}

%				if ($ARGS{"quick"}) {
					alertify.set('notifier','delay', 2);
					alertify.success("<% $ARGS{"quick"} %>");
					alertify.set('notifier','delay', 10);
%				}

%			} else {

				alertify.alert('Tabroom response:', '<% $ARGS{"fullmsg"} %>');
%			}

			});
			</script>

%			if ($r->hostname eq "www.tabroom.com" ) {  # Palmer disabled because shit's too slow and delaying things
				<!-- Matomo
				<script>
					var _paq = window._paq = window._paq || [];
					/* tracker methods like "setCustomDimension" should be called before "trackPageView" */
					_paq.push(['trackPageView']);
					_paq.push(['enableLinkTracking']);
					(function() {
						var u="https://analytics.speechanddebate.org/";
						_paq.push(['setTrackerUrl', u+'matomo.php']);
						_paq.push(['setSiteId', '4']);
						var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
						g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
					})();
				</script>
				End Matomo Code -->
% 			}

			<meta
				property = "og:image"
				content  = "http://www.tabroom.com/lib/images/nsda-blue.png"
			/>

	</head>

	<body>

	<div id="overlay">

		<div id="header">

			<span id="logo">
				<a
					tabindex = "-1"
					href     = "/index/index.mhtml"
				>
					<img
						src = "/lib/images/tabroom-logo.png"
						alt = "Tabroom.com by the National Speech and Debate Association"
					>
				</a>
			</span>

			<span id="toprow">

%				if ($session) {

%					if ($session->su && $session->su->id) {

						<a
							tabindex = "-1"
							href     = "/user/admin/su_return.mhtml"
							class    = "fa fa-2x fa-undo orangetext"
							alt      = "Return to <% $session->su->email %>"
							title    = "Return to <% $session->su->email %>"
						>
						</a>

						<a
							tabindex = "-1"
							href     = "/user/login/profile.mhtml"
							class    = "fa fa-2x fa-user"
							alt      = "Tabroom Account Profile"
							title    = "Tabroom Account Profile"
						>
						</a>

						<a
							tabindex = "-1"
							href     = "/user/home.mhtml"
							class    = "fa fa-2x fa-home borderright"
							alt      = "Tabroom Home Screen"
							title    = "Tabroom Home Screen"
						>
						</a>


%					} else {

						<a
							tabindex = "-1"
							href     = "/user/login/logout.mhtml"
							class    = "fa fa-2x fa-sign-out"
							alt      = "Log Out of Tabroom"
							title    = "Log Out of Tabroom"
						>
						</a>

						<a
							tabindex = "-1"
							href     = "/user/login/profile.mhtml"
							class    = "fa fa-2x fa-user"
							alt      = "Tabroom Account Profile"
							title    = "Tabroom Account Profile"
						>
						</a>

						<a
							tabindex = "-1"
							href     = "/user/home.mhtml"
							class    = "fa fa-2x fa-home borderright"
							alt      = "Tabroom Home Screen"
							title    = "Tabroom Home Screen"
						>
						</a>
%					}

					<a
						tabindex = "-1"
						href     = "/user/home.mhtml"
						class    = "noborder padvert"
					>
%						if ($person->id == 7270) {    #Ed Lee
							<span
								title = "These Pokemon brought to you by Palmer."
								class = "pokemon border"
							>&nbsp;</span>
%						} else {
							<% $person->email %>
%						}
					</a>

%				} else {
					<& "/user/login/login_block.mas" &>
%				}

%				if ($tourn) {

					<span
						id    = "search"
						title = "Search schools, judges and entries"
					>
						<form
							action = "/register/search/tourn_search.mhtml"
							method = "post"
						>
							<input
								type  = "hidden"
								name  = "tourn_id"
								value = "<% $tourn %>"
							>

							<input
								type           = "text"
								maxlength      = "128"
								size           = "15"
								name           = "search"
								placeholder    = "SEARCH ENTRIES"
								autocomplete   = "off"
								autocorrect    = "off"
								autocapitalize = "off"
								spellcheck     = "false"
								id             = "searchtext"
								class          = "notfirst"
								tabindex       = "-1"
							>

							<input
								type  = "hidden"
								name  = "caller"
								value = "<% $r->unparsed_uri %>"
							>

							<button
								type  = "submit"
								class = "search notfirst">
								<img src="/lib/images/search.png">
							</button>
						</form>
					</span>

%				} else {

					<span
						id    = "search"
						title = "Search for tournaments"
					>
						<form action="/index/search.mhtml">
							<input
								type           = "text"
								maxlength      = "128"
								name           = "search"
								placeholder    = "SEARCH TOURNAMENTS"
								autocomplete   = "off"
								autocorrect    = "off"
								autocapitalize = "off"
								spellcheck     = "false"
								id             = "searchtext"
								class          = "notfirst"
								tabindex       = "-1"
							>

							<input
								type  = "hidden"
								name  = "caller"
								value = "<% $r->unparsed_uri %>"
							>

							<button
								type  = "submit"
								class = "search notfirst"
							>
								<img src="/lib/images/search.png">
							</button>
						</form>
					</span>

%				}

				<span id="helpbutton" title="Tabroom Help">
					<a
						tabindex = "-1"
						href     = "http://docs.tabroom.com"
						target   = "_blank"
						class    = "fa fa-question-circle"
					>
					</a>
				</span>

			</span>

			<span id="menus">

%				if ($tourn) {

					<&
						"/lib/menu/menubar_tourn.mas",
						session         => $session,
						tourn           => $tourn,
						person          => $person,
						tourn_settings  => \%tourn_settings,
						person_settings => \%person_settings,
						perms           => \%perms,
					&>

%				} else {

					<&
						"/lib/menu/menubar_index.mas",
						session => $session
					&>

%				}

			<span>

		</div>

%		if ($r->hostname eq "backup.tabroom.com" ) {

			<div class="backupwarning">
				This is a backup copy of Tabroom.  Please use it only to access
				data and information.  Any registration or tournament changes
				entered here will not be copied back to the master Tabroom
				site.
			</div>

%		}

<%perl>

		$m->call_next(
			debug           => $debug,
			session         => $session,
			defaults        => $defaults,
			person          => $person,
			tourn           => $tourn,
			tourn_settings  => \%tourn_settings,
			person_settings => \%person_settings,
			perms           => \%perms
		);

</%perl>

	<div id="footer" >

		<span class="leftlinks twothirds">

			<a
				tabindex = "-1"
				href     = "https://www.speechanddebate.org/join"
			>Join the NSDA</a>

			<a
				tabindex = "-1"
				href     = "https://www.speechanddebate.org/mission"
			>About</a>

			<a
				tabindex = "-1"
				href     = "mailto:help@tabroom.com"
			>Help</a>

			<a
				tabindex = "-1"
				href     = "https://www.tabroom.com/index/about.mhtml"
			>Contact</a>

			<a
				tabindex = "-1"
				href     = "https://www.speechanddebate.org/privacy-policy"
			>Privacy Policy</a>

			<a
				tabindex = "-1"
				href     = "https://www.speechanddebate.org/terms-conditions"
			>Terms</a>


		</span>

%		if ($person && $person->site_admin) {

			<span
				class="third rightalign"
			>
				<span class="third centeralign nospace">
					TID <% $tourn ? $tourn->id : 0 %>
				</span>
				<span class="third centeralign nospace">
					SID <% $session->id %>
				</span>
				<span class="third centeralign nospace">
					Host <% `/bin/hostname` %>
				</span>
			</span>
%		}

	</div>

	</div>

<%perl>

	if (
		$person_settings{'scream_in_pain'}
		&& (not defined $person_settings{'please_stop_screaming'})
	)  {

</%perl>
		<& "/funclib/scream_in_pain.mas" &>
%	}

	</body>

</html>

% }	else {
%		$m->call_next();
% }
