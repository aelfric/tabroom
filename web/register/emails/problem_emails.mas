<%args>
	$args
</%args>
<%init>

	$m->print("<div class='main'>");
	$m->print("<span class='nospace upload_scroll'>");
	$m->print("<h4>Sending emails with incomplete registrations</h4>");
	$m->flush_buffer();

	my $tourn = $args->{"tourn"};
	my $person = $args->{"person"};
	my $tourn_settings = $args->{"tourn_settings"};

	my %schools = $m->comp(
		"/funclib/nsda/bulk_problems.mas",
		tourn          => $tourn,
		tourn_settings => $tourn_settings,
		emails         => 'yass',
	);

	&outlog("Bulk problems updated.  I have ".scalar(keys %schools)." with issues to address");

	my $now = DateTime->now(time_zone => $tourn->tz);

	my $nice_now = $m->comp("/funclib/showdt.mas",
		dt     => $now,
		format => "murica_noyear",
		tz     => $tourn->tz,
		tzname => 1,
		return => 'yass'
	);

	my $content = $m->comp("/funclib/save_editor.mas", text => $args->{"content"});
	my $subject = $args->{'subject'};
	$subject = "Nationals Registration Issues for ";

	my $counter;
	my $sender;
	my $sender_raw;

	if ($args->{"from"} && (not defined $args->{"nosend"})) {

		if ($args->{"from"} eq int($args->{"from"})) {
			$sender = Tab::Person->retrieve($args->{"from"});
			$sender_raw = $sender->first." ".$sender->last." <".$sender->email.">";
		} else {
			if ($tourn_settings->{"senders"} && $tourn_settings->{"senders"}{$args->{"from"}}) {
				my $sender = $tourn_settings->{"senders"}{$args->{"from"}};
				if ($sender->{"verified"}) {
					$sender_raw = $sender->{"name"}." <".$args->{"from"}.">";
				}
			}
		}
	}

	&outlog('<div class="full padvert ltbordertop">');

	my $dbh = Tab::DBI->db_Main();
	my $find_admins_sth = $dbh->prepare("
		select
			person.id
		from person, permission, school
			where permission.tag = 'chapter'
			and permission.chapter = school.chapter
			and permission.person = person.id
			and person.no_email != 1
			and school.id = ?
	");

	SCHOOL:
	foreach my $school_id (sort keys %schools) {

		if (not defined $schools{$school_id}{"name"}) {
			$m->print("<p class='redtext semibold'> School ID $school_id has no identity. Not sending </p>");
			next SCHOOL;
		}

		if (not defined $schools{$school_id}{"ids"}) {
			$find_admins_sth->execute($school_id);
			my $results = $find_admins_sth->fetchall_hash();

			foreach my $ref (@{$results}) {
				push @{$schools{$school_id}{"ids"}}, $ref->{id};
			}
		}

		if (not defined $schools{$school_id}{"ids"}) {
			$m->print("<p class='redtext semibold'>".$schools{$school_id}{"name"}." ID $school_id has problems but no email recipients.  Not sending </p>");
			next SCHOOL;
		}

		my $problems;
		$problems .= "<p>School ".$schools{$school_id}{"name"}."</p>";

		if ($schools{$school_id}{"state"}) {
			$problems .= "<p>State ".$schools{$school_id}{"state"}."</p>";
		}

		$problems .= "<p>Member ID ".$schools{$school_id}{"nsda_id"}."</p>";
		$problems .= "<p>Registration issues as of ".$nice_now.":</p>";

		my %already;

		my $sort = ({
			balance => 1,
			hotel   => 2,
			contact => 3,
			judging => 4,
			entries => 5
		});

		foreach my $reason (
			sort {
				$sort->{$a} cmp $sort->{$b}
			} keys %{$schools{$school_id}{"bad"}}
		) {

			if ($reason eq "balance") {

				$problems .= "<p> Unpaid tournament fees of ";
				$problems .= '$'.$schools{$school_id}{"bad"}{"balance"};
				$problems .= "</p>";

			} elsif (
				 $reason eq "contact"
				|| $reason eq "hotel"
				|| $reason eq "judging"
			) {

				$schools{$school_id}{"bad"}{$reason} =~ s/\n/<\/p>/g;

				if ($reason eq "judging") {
					$problems .= "<h3>Judging:</h3>";
				}

				$problems .= "<p>".$schools{$school_id}{"bad"}{$reason}."</p>";

			} else {

				$problems .= "<h3>Entries:</h3>";

				foreach my $entry_id (sort keys %{$schools{$school_id}{"bad"}{$reason}}) {

					my @all_reasons = split("-", $schools{$school_id}{"bad"}{$reason}{$entry_id}{"reason"});
					my @reasons;

					$problems .= "<p>";

					foreach my $reason (@all_reasons) {
						$reason =~ s/^\s+//;
						$reason =~ s/\s+$//;
						if ($already{$reason}) {
						} else {
							push @reasons, $reason unless ($already{$reason});
						}
					}
					next unless @reasons;

					$problems .= $schools{$school_id}{"bad"}{$reason}{$entry_id}{"event"}." entry ";
					$problems .= $schools{$school_id}{"bad"}{$reason}{$entry_id}{"name"}.": ";

					my $notfirst;
					foreach my $reason (@reasons) {
						$problems .= $reason;
						if (index($reason, "No release forms uploaded for") != -1) {
							$already{$reason}++;
						}
					}
					$problems .= "</p>";
				}
			}
		}

		my $body = $content."</p>".$problems;
		my $from = $tourn->name.' <'.$now->epoch.'@speechanddebate.org>';

		my $response = $m->comp("/funclib/send_notify.mas",
			from     => $from,
			ids      => $schools{$school_id}{"ids"},
			subject  => $subject.$schools{$school_id}{"name"},
			reply_to => 'info@speechanddebate.org',
			html     => $body,
			no_web   => 1,
		);

		&outlog("<p>Sending email about ".$schools{$school_id}{"name"}." to ".@{$schools{$school_id}{'ids'}}." recipients: $response </p>");
	}

	$m->print('</div>');

	sub outlog {
		my $text = shift;
		$m->print($text);
		Tab::debuglog($text);
		$m->flush_buffer();
	}

</%init>
