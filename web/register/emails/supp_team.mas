<%args>
	$args
</%args>
<%init>

	my $tourn          = $args->{tourn};
	my $tourn_settings = $args->{tourn_settings};
	my $person         = $args->{person};
	my $teams          = $tourn_settings->{supp_teams};

	my $team = $teams->{$args->{supp_team}};

	unless ($team) {
		$m->comp("/funclib/abort.mas",
			message => "Invalid supplemental team ID ".$args->{supp_team}." sent."
		);
	}

	$m->print("<div class='main'>");
	$m->print("<h5>Sending emails to schools with supplementals registered at ".$team->{label}."</h5>");
	$m->print("<span class='nospace upload_scroll'>");
	$m->flush_buffer();

	my $subject = $args->{'subject'} || "Your School's Supplemental Locations";
	my $content = $m->comp("/funclib/save_editor.mas", text => $args->{"content"});

	my $counter;
	my $sender;
	my $sender_raw;

	if ($args->{"reply_to"} && (not defined $args->{"nosend"})) {

		if ($args->{"reply_to"} eq int($args->{"reply_to"})) {

			$sender = Tab::Person->retrieve($args->{"reply_to"});
			$sender_raw = $sender->first." ".$sender->last." <".$sender->email.">";

		} else {

			if ($tourn_settings->{"senders"} && $tourn_settings->{"senders"}{$args->{"reply_to"}}) {
				my $sender = $tourn_settings->{"senders"}{$args->{"reply_to"}};
				if ($sender->{"verified"}) {
					$sender_raw = $sender->{"name"}." <".$args->{"reply_to"}.">";
				}
			}
		}
	}

	my $dbh = Tab::DBI->db_Main();
	my %schools;

	my $sth = $dbh->prepare("
		select
			school.id, school.name, count(entry.id) entries
		from school, entry, event_setting supp, school_setting supp_team
		where school.tourn = ?
			and entry.school = school.id
			and entry.event = supp.event
			and supp.tag = 'supp'
			and supp_team.tag = 'supp_team'
			and supp_team.school = school.id
		group by school.id
	");

	$sth->execute($tourn->id);
	my $schools = $sth->fetchall_hash();

	my $now = DateTime->now();

	&outlog('<div class="full padvert ltbordertop">');
	&outlog("<p>I have found ".scalar @{$schools}." schools at team ".$team->{label}." </p>");

	SCHOOL:
	foreach my $school_ref (@{$schools}) {

		my $school_id = $school_ref->{id};

		my $contacts = $m->comp("/funclib/contacts.mas",
			school         => $school_id,
			return         => 'yaskween',
			email_contacts => 1,
		);

		my @ids;

		if ($contacts) {
			foreach my $con (@{$contacts}) {
				push @ids, $con->{person_id};
			}
		}

		my $message = "<p>School ".$school_ref->{"name"}."</p>";
		$message .= "<p>Your Supplemental Sites Team: ".$team->{"label"}."</p>";

		my $body = $message."</p>".$content;
		my $from = $tourn->name.' <'.$tourn->webname."-".$now->epoch.'@www.tabroom.com>';

		my $response = $m->comp("/funclib/send_notify.mas",
			from     => $from,
			ids      => \@ids,
			tourn    => $tourn,
			reply_to => $sender_raw || 0,
			sender   => $sender,
			subject  => $subject.": ".$school_ref->{"name"},
			no_web   => 1,
			html     => $body
		);

		&outlog("<p>Sending email about ".$school_ref->{"name"}." to ".scalar @ids." recipients:  $response </p>");
	}

	$m->print('</div>');
	$m->print('</span>');
	$m->print('<p class="orangetext semibold">Sending Emails Complete!</p>');
	$m->print('</div>');

	$m->print('<div class="menu">');
	$m->print('<div class="sidenote">');
	$m->print('<h4>Return to Emails</h4>');
	$m->print('<a class="full blue" href="compose.mhtml">Return to Emails</a>');
	$m->print('</div>');



	sub outlog {
		my $text = shift;
		$m->print($text);
		$m->flush_buffer();
	}

</%init>
