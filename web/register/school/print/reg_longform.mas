<%args>
	$school_id
	$filename
	$judges     => undef
	$entries    => undef
	$hide_codes => undef
</%args>
<%init>

	use POSIX;

	my $school = Tab::School->retrieve($school_id);
	my $tourn  = $school->tourn;

	my @entries = Tab::Entry->search(
		school      => $school->id,
		unconfirmed => 0
	);

	@entries = sort { $a->code <=> $b->code } @entries;

	@entries = sort { $a->event->name cmp $b->event->name } @entries;

	my $filepath = $Tab::file_root."/tmp/".$filename;
	open (TEXOUT, ">>$filepath.tex");
	binmode(TEXOUT, ":utf8");

    my $logo_file = $tourn->setting("logo");

    if ($logo_file && (not defined -e "$Tab::file_root/tmp/".$logo_file)) {
        system "cd $Tab::file_root/tmp;
        $Tab::latex_path_prefix/wget ".$Tab::s3_url."/".$tourn->id."/".$logo_file;
    }

    unless ($logo_file && -e "$Tab::file_root/tmp/".$logo_file) {
        undef $logo_file;
    }

	my %breakouts;

	foreach my $event ($tourn->events) {

		my @breakout_keys = (1 .. $event->setting("breakouts"));

		$breakouts{$event->id}{"keys"} = \@breakout_keys;

		foreach my $breakout_key (@breakout_keys) {

			$breakouts{$event->id}{"labels"}{$breakout_key}
				= $event->setting("breakout_".$breakout_key."_label");

			$breakouts{$event->id}{$breakout_key} =
				JSON::decode_json($event->setting('breakout_'.$breakout_key.'_students'))
				if $event->setting('breakout_'.$breakout_key."_students");

		}

	}

	my $switch;

	unless ($judges) {

		print TEXOUT "\\textbf{\\Large COMPETITORS } \n";
		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";

		foreach my $entry (@entries) {

			my $event = $entry->event;

			my @students = $entry->students();

			print TEXOUT "\\begin{tabular}{p{.5in}p{1in}p{4.25in}p{.5in}}\n";

			print TEXOUT "\\rowcolor[rgb]{.98,.98,.98}\[5.5pt\]\[5.5pt\]\n" unless $switch % 2;
			print TEXOUT "\\rowcolor[rgb]{.92,.92,.92}\[5.5pt\]\[5.5pt\]\n" if $switch++ % 2;


			print TEXOUT Tab::texify($event->abbr);
			print TEXOUT " & ";

			if ($entry->setting("tba")) {
				print TEXOUT "TBA";
			} else {
				print TEXOUT Tab::texify($entry->code);
			}

			print TEXOUT " & ";

			if (@students) {

				print TEXOUT "\\parbox{4.40in}{ \n";

				print TEXOUT "\\begin{tabular}{p{2in}p{.5in}p{.25in}p{.5in}p{.25in}}\n";

				foreach my $student (@students) {

					print TEXOUT Tab::texify($student->first." ".$student->middle." ".$student->last);

					foreach my $breakout_key (@{$breakouts{$event->id}{"keys"}}) {

						print TEXOUT " & ";

						print TEXOUT Tab::texify($breakouts{$event->id}{"labels"}{$breakout_key}.":");

						print TEXOUT " & ";

						print TEXOUT " Y " if $breakouts{$event->id}{$breakout_key}{$student->id};
						print TEXOUT " N " unless $breakouts{$event->id}{$breakout_key}{$student->id};

					}

					print TEXOUT " \\\\ \n";

				}

				print TEXOUT "\\end{tabular} }\n";

			} else {

				print TEXOUT "\$\\rightarrow\$ \\textsb{\\color{red} \\bf WARNING: NO COMPETITORS REGISTERED!";
				print TEXOUT "FIX THIS OR THIS ENTRY WILL GET NO POINTS AND CANNOT ADVANCE TO ELIMS! } \n";
				print TEXOUT "\$\\leftarrow\$";
			}

			print TEXOUT " & ";
			if ($entry->waitlist) {
				print TEXOUT "Waitlist ";
			} elsif ($entry->dropped) {
				print TEXOUT "{\\bf DROP} ";
			} else {
			}

			print TEXOUT "\\\\ \n";
			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\newline\n";

		}

		unless ($entries) {
			print TEXOUT "\\vspace{.2in}\n";
			print TEXOUT "\\newline\n";
		}

	}

	undef $switch;

	unless ($entries) {

		my %category_settings;

		print TEXOUT "\\textbf{\\Large JUDGES } \n";
		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";

		foreach my $judge ($school->judges) {

			my $category = $judge->category;

            %{$category_settings{$category->id}} = $category->all_settings()
                unless (keys %{$category_settings{$category->id}});

			print TEXOUT "\\begin{tabular}{p{.5in}p{1in}p{1.5in}p{1.5in}p{1.6in}}\n";

			print TEXOUT "\\rowcolor[rgb]{.98,.98,.98}\[5.5pt\]\[5.5pt\]\n" unless $switch % 2;

			print TEXOUT "\\rowcolor[rgb]{.92,.92,.92}\[5.5pt\]\[5.5pt\]\n" if $switch++ % 2;

			print TEXOUT Tab::texify($category->abbr);

			print TEXOUT " & ";

			print TEXOUT &Tab::texify($judge->code)
				unless $category_settings{$category->id}{"no_codes"};

			if ($category_settings{$category->id}{"rounds_per"}) {
				print TEXOUT &Tab::texify($judge->obligation)." Rounds ";
			}

			print TEXOUT " & ";

			print TEXOUT &Tab::texify($judge->first." ".$judge->middle." ".$judge->last);

			print TEXOUT " & \\footnotesize ";

			if ($category_settings{$category->id}{"rounds_per"}) {
				print TEXOUT &Tab::texify("Hired for ".$judge->hired." rounds ")
				if $judge->hired;
			}

			my $notes = $judge->setting('notes');

			print TEXOUT $m->comp(
				"/funclib/print_format.mas",
				message => $notes
			) if $notes;

			foreach my $jpool (
				$m->comp("/funclib/judge_jpools.mas",
					judge => $judge,
					limit => "registrant")
			) {

				print TEXOUT "\\parbox[b]{1.45in}{\\raggedright ";
				print TEXOUT &Tab::texify($jpool->name)." ";
				print TEXOUT " } ";
			}

			print TEXOUT " & \\footnotesize ";

			print TEXOUT $m->comp(
				"/funclib/print_format.mas",
				message => $category_settings{$category->id}{"reg_sheet_notice"}
			);

			if ($category_settings{$category->id}{'show_judge_contacts'}) {

				if ($judge->person > 0) {

					print TEXOUT "\\parbox[b]{1.6in}{ ";
					print TEXOUT &Tab::texify($judge->person->email);
					print TEXOUT " } \n";

					print TEXOUT "\\parbox[b]{1.6in}{ ";
					print TEXOUT &Tab::texify(Tab::phoneme($judge->person->phone));
					print TEXOUT " } \n";

				} else {

					if ($judge->setting("email")) {
						print TEXOUT "\\parbox[b]{1.6in}{\\raggedright ";
						print TEXOUT &Tab::texify($judge->setting("email"));
						print TEXOUT " } \n";
					}

					if ($judge->setting("phone")) {
						print TEXOUT "\\parbox[b]{1.6in}{\\raggedright ";
						print TEXOUT &Tab::texify(Tab::phoneme($judge->setting("phone")));
						print TEXOUT " } ";
					}
				}
			}

			print TEXOUT "\\\\ \n";
			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\newline\n";

		}

	}


	close TEXOUT;

	return;

</%init>

