<%args>
	$school_id
	$filename
	$judges     => undef
	$entries    => undef
	$hide_codes => undef
	$weekend    => undef
</%args>
<%init>

	use POSIX;

	my $school = Tab::School->retrieve($school_id);
	my $tourn  = $school->tourn;

	my @entries = Tab::Entry->search(
		school      => $school->id,
		unconfirmed => 0
	);

	@entries = sort { $a->code <=> $b->code } @entries;
	@entries = sort { $a->event->name cmp $b->event->name } @entries;

	Tab::Entry->columns(TEMP => "hybridname");

	Tab::Entry->set_sql( hybrids => "
		select entry.*, school.name as hybridname
		from entry, entry_student, student, school
		where student.chapter = ?
		and student.id = entry_student.student
		and entry_student.entry = entry.id
		and entry.school = school.id
		and student.chapter != school.chapter
		and school.tourn = ?
	");

	push @entries, Tab::Entry->search_hybrids($school->chapter, $tourn) if $school->chapter;

	my $filepath = $Tab::file_root."/tmp/".$filename;
	open (TEXOUT, ">>$filepath.tex");
	binmode(TEXOUT, ":utf8");

	my $switch;

	unless ($judges) {

		print TEXOUT "\\begin{tabular}{p{6.885in}}\n";
		print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n";
		print TEXOUT "{\\bf Entries: ".Tab::texify($school->name)." }\\\\ \n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";

		ENTRY:
		foreach my $entry (@entries) {

			my $event = $entry->event;
			my $type = $event->type;

			if ($weekend) {
				next ENTRY if $event->setting('weekend') ne $weekend;
			}

			my @students = $m->comp(
				"/funclib/entry_students.mas",
				entry => $entry
			);

			print TEXOUT "\\begin{tabular}{p{1.75in}p{1.75in}p{3.05in}}\n";

			if (@students || $entry->setting("tba")) {
				if ($switch++ % 2) {
					print TEXOUT "\\rowcolor[rgb]{.99,.99,.99}\[5.5pt\]\[5.5pt\]\n";
				} else {
					print TEXOUT "\\rowcolor[rgb]{.92,.92,.92}\[5.5pt\]\[5.5pt\]\n";
				}
			} else {
				print TEXOUT "\\rowcolor[rgb]{.94,.89,.80}\[5.5pt\]\[5.5pt\]\n";
			}

			if ($entry->waitlist) {
				print TEXOUT "Waitlist ";
			} elsif ($entry->dropped) {
				print TEXOUT "{\\bf DROP} ";
			} elsif ($hide_codes) {
			} else {
				print TEXOUT Tab::texify($entry->code);
			}

			print TEXOUT " & ";

			print TEXOUT Tab::texify($event->name)." & ";

			my $notfirst;

			if (@students) {

				foreach my $student (@students) {

					if ($notfirst++) {
						print TEXOUT ", ";
					}

					print TEXOUT Tab::texify($student->first." ".$student->last);
				}

			} elsif ($entry->setting("tba")) {

			} else {

				print TEXOUT "\$\\rightarrow\$ {\\color{red} \\bf WARNING: NO COMPETITORS REGISTERED!";
				print TEXOUT "FIX THIS OR THIS ENTRY WILL GET NO POINTS AND CANNOT ADVANCE TO ELIMS! } \$\\leftarrow\$";
			}

			if ($entry->hybridname) {

				print TEXOUT "\\hfill Hybrid w/".Tab::texify(Tab::short_name($entry->hybridname));

			}

			print TEXOUT "\\\\ \n";
			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\newline\n";

		}

		unless ($school->judges) {
			return;
		}
	}

    print TEXOUT "\\begin{tabular}{p{6.9in}}\n";
	print TEXOUT "\\\\ \n";
    print TEXOUT "\\end{tabular}\n";
    print TEXOUT "\\newline\n";

	unless ($entries) {

	    print TEXOUT "\\newline\n";
    	print TEXOUT "\\begin{tabular}{p{6.9in}}\n";
		print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n";

	    print TEXOUT "{\\bf Judges: ". &Tab::texify($school->chapter->name) ."}\\\\\n"
			if $school->judges && $school->chapter;

	    print TEXOUT "{\\bf *No judges listed* }\\\\\n" unless $school->judges;

	    print TEXOUT "\\end{tabular}\n";
	    print TEXOUT "\\newline\n";

		undef $switch;
		my %rounds_pers;
		my %category_settings = ();

		my $tabular .= "\\begin{tabular}{p{.35in}p{.5in}p{1.5in}p{2in}p{1.88in}}\n";

		JUDGE:
		foreach my $judge (sort { $a->last cmp $b->last } $school->judges) {

			my $category = $judge->category();

			if ($weekend) {
				next JUDGE if $category->setting('weekend') ne $weekend;
			}

			%{$category_settings{$category->id}} = $category->all_settings()
				unless (keys %{$category_settings{$category->id}});

			my $rounds_per = $rounds_pers{$category->id};

			$rounds_per = $category_settings{$category->id}{"rounds_per"} unless $rounds_per;
			$rounds_pers{$category->id} = $rounds_per;

			my $no_codes++ if $category_settings{$category->id}{"no_codes"};
			$no_codes++ if $hide_codes;

			print TEXOUT $tabular;

			if ($switch++ % 2) {
				print TEXOUT "\\rowcolor[rgb]{.99,.99,.99}\[5.5pt\]\[5.5pt\]\n";
			} else {
				print TEXOUT "\\rowcolor[rgb]{.92,.92,.92}\[5.5pt\]\[5.5pt\]\n";
			}

			print TEXOUT &Tab::texify($category->abbr)." & ";
			print TEXOUT &Tab::texify($school->code) if $school->code &! $no_codes;
			print TEXOUT &Tab::texify($judge->code) unless $no_codes;

			print TEXOUT " & ";
			print TEXOUT &Tab::texify($judge->last.", ".$judge->first);

			print TEXOUT " & \\footnotesize ";

			if ($rounds_per) {
				print TEXOUT &Tab::texify($judge->obligation)." Rds and ";
				print TEXOUT &Tab::texify("hired for ".$judge->hired) if $judge->hired;
				print TEXOUT "\\hfill ";
			}

			print TEXOUT " \\scriptsize ";

			my $notes = $m->comp(
				"/funclib/print_format.mas", message => $judge->setting('notes')
			) if $judge->setting("notes");

			print TEXOUT &Tab::texify($notes);

			foreach my $jpool (
				$m->comp("/funclib/judge_jpools.mas",
					judge => $judge,
					limit => "registrant")
			) {

				print TEXOUT "\\parbox[b]{1.45in}{\\raggedright ";
				print TEXOUT &Tab::texify($jpool->name)." ";
				print TEXOUT " } ";
			}

			print TEXOUT " & \\footnotesize ";

			my $message = $m->comp(
				"/funclib/print_format.mas",
				message => $category_settings{$category->id}{"reg_sheet_notice"}
			);

			if ($message) {
				print TEXOUT "\\parbox[b]{1.6in}{\\raggedright ";
				print TEXOUT &Tab::texify($message);
				print TEXOUT " } ";
			}

			if ($category_settings{$category->id}{'show_judge_contacts'}) {

				if ($judge->person > 0) {

					print TEXOUT "\\parbox[b]{1.6in}{ ";
					print TEXOUT &Tab::texify($judge->person->email);
					print TEXOUT " } \n";

					print TEXOUT "\\parbox[b]{1.6in}{ ";
					print TEXOUT &Tab::texify(Tab::phoneme($judge->person->phone));
					print TEXOUT " } \n";

				} else {

					if ($judge->setting("email")) {
						print TEXOUT "\\parbox[b]{1.6in}{\\raggedright ";
						print TEXOUT &Tab::texify($judge->setting("email"));
						print TEXOUT " } \n";
					}

					if ($judge->setting("phone")) {
						print TEXOUT "\\parbox[b]{1.6in}{\\raggedright ";
						print TEXOUT &Tab::texify(Tab::phoneme($judge->setting("phone")));
						print TEXOUT " } ";
					}
				}
			}

			print TEXOUT "\\\\ \n";
			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\newline\n";

		}
	}

	close TEXOUT;

</%init>

