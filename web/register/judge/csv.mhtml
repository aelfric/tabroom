<%args>
	$tourn
	$tourn_settings
	$person
	$session
	$category_id => 0
	$hires    => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $dbh = Tab::DBI->db_Main();

	my $limit;

	if ($category_id) {
		$limit = " and judge.category = ".int($category_id);
	}

	my $sth = $dbh->prepare("
		select
			judge.id,
			judge.code, judge.first, judge.middle, judge.last, judge.ada, judge.timestamp, judge.active,
			person.phone, person.email, paradigm.id,
			category.abbr,
			school.code, school.name,
			region.code, region.name,
			district.code, district.name,
			chapter.state,
			diamonds.value,
			tab_room.value,
			parli.value,
			prefers_congress.value,
			diverse.value,
			notes.value_text,
			special_job.value_text,
			GROUP_CONCAT(jpool.name)

		from (judge, category)

			left join person on judge.person = person.id

			left join person_setting paradigm
				on paradigm.person = person.id
				and paradigm.tag = 'paradigm'

			left join school on judge.school = school.id
			left join chapter on chapter.id = school.chapter
			left join region on school.region = region.id
			left join district on school.district = district.id

			left join jpool_judge on jpool_judge.judge = judge.id
			left join jpool on jpool_judge.jpool = jpool.id and exists (
				select js.id from jpool_setting js where js.tag = 'registrant' and js.jpool = jpool.id
			)

			left join person_setting diamonds
				on diamonds.person = person.id
				and diamonds.tag = 'diamonds'

			left join judge_setting tab_room
				on tab_room.judge = judge.id
				and tab_room.tag = 'tab_room'

			left join judge_setting notes
				on notes.judge = judge.id
				and notes.tag = 'notes'

			left join judge_setting special_job
				on special_job.judge = judge.id
				and special_job.tag = 'special_job'

			left join judge_setting diverse
				on diverse.judge = judge.id
				and diverse.tag = 'diverse'

			left join judge_setting parli
				on parli.judge = judge.id
				and parli.tag = 'parli'

			left join judge_setting prefers_congress
				on prefers_congress.judge = judge.id
				and prefers_congress.tag = 'prefers_congress'

		where judge.category = category.id
			and category.tourn = ?
			$limit

		group by judge.id
		order by judge.code, judge.last, judge.first
	");

	my $tourn_name = $tourn->name;
	$tourn_name =~ s/[\W_]//g;
	my $filename = "$tourn_name-Judges.csv";

	$m->clear_buffer;
	$r->content_type('application/csv');
	$r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	$m->print("Code,");
	$m->print("First,Middle,Last,");
	$m->print("Category,");

	if ($tourn_settings->{"ncfl"}) {
		$m->print("DioCode,");
		$m->print("Diocese,");
	}

	if ($tourn_settings->{"nsda_nats"}) {
		$m->print("State,");
		$m->print("District,");
		$m->print("Dist Code,");
		$m->print("Diamonds,");
		$m->print("Tab Staff,");
	}

	if ($tourn_settings->{"regions"}) {
		$m->print("RegCode,");
		$m->print("Region,");
	}

	$m->print("School,");
	$m->print("Schcode,");
	$m->print("Phone,");
	$m->print("Email,");
	$m->print("Timestamp,");
	$m->print("ADA,");
	$m->print("Paradigm,");
	$m->print("Active,");
	$m->print("Diverse,");
	$m->print("Parli,");
	if ($tourn_settings->{"nsda_nats"}) {
		$m->print("Pref Con,");
	}
	$m->print("Notes,");
	$m->print("Special Duty,");
	$m->print("Pools,");
	$m->print("Unavailable\n");

	$sth->execute($tourn->id);

	my $strike_sth = $dbh->prepare("
		select
			strike.id,
			strike.judge,
			strike.type,
			CONVERT_TZ(strike.start, '+00:00', tourn.tz) start,
			CONVERT_TZ(strike.end, '+00:00', tourn.tz) end

		from strike, judge, category, tourn

		where tourn.id = ?
			and category.tourn = tourn.id
			and judge.category = category.id
			and judge.id = strike.judge
			and strike.type in ('time', 'departure')
		$limit
	");

	$strike_sth->execute($tourn->id);

	my %strikes;

	my @raw_strikes = eval {
		return @{$strike_sth->fetchall_hash};
	};

	foreach my $rs (@raw_strikes) {
		$strikes{$rs->{judge}} .= " " if $strikes{$rs->{judge}};

		if ($rs->{type} eq "time") { 
			$strikes{$rs->{judge}} .= "Between ";
			$strikes{$rs->{judge}} .= $m->comp("/funclib/showdt.mas", string => $rs->{"start"}, return => "yas", length => "shorter" );
			$strikes{$rs->{judge}} .= " and ";
			$strikes{$rs->{judge}} .= $m->comp("/funclib/showdt.mas", string => $rs->{"end"}, return => "yas", length => "shorter");
		} else { 
			$strikes{$rs->{judge}} .= "After ";
			$strikes{$rs->{judge}} .= $m->comp("/funclib/showdt.mas", string => $rs->{"start"}, return => "yas", length => "shorter" );
		}
	}

	while (
		my (
			$judge_id,
			$judge_code, $judge_first, $judge_middle, $judge_last, $judge_ada, $judge_timestamp, $judge_active,
			$person_phone, $person_email, $paradigm,
			$category_abbr,
			$school_code, $school_name,
			$region_code, $region_name,
			$district_code, $district_name,
			$chapter_state,
			$diamonds,
			$tab_room,
			$parli,
			$prefers_congress,
			$diverse,
			$notes,
			$special_job,
			$pools
		) = $sth->fetchrow_array()
	) {

		$m->print('"'.$judge_code.'",');
		$m->print('"'.$judge_first.'",');
		$m->print('"'.$judge_middle.'",');
		$m->print('"'.$judge_last.'",');
		$m->print('"'.$category_abbr.'",');

		if ($tourn_settings->{"nsda_nats"}) {
			$m->print('"'.$chapter_state.'",');
			$m->print('"'.$region_code.'",');
			$m->print('"'.$district_name.'",');
			$m->print('"'.$district_code.'",');
			$m->print('"'.$diamonds.'",');
			if ($tab_room) {
				$m->print('"Y",');
			} else {
				$m->print(",");
			}
		} elsif ($tourn_settings->{"ncfl"} || $tourn_settings->{"regions"}) {
			$m->print('"'.$region_code.'",');
			$m->print('"'.$region_name.'",');
		}

		$m->print('"'.$school_name.'",');
		$m->print('"'.$school_code.'",');
		$m->print('"'.$person_phone.'",');
		$m->print('"'.$person_email.'",');
		$m->print('"'.$judge_timestamp.'",');

		if ($judge_ada) {
			$m->print('"Y",');
		} else {
			$m->print(",");
		}

		if ($paradigm) {
			$m->print('"Y",');
		} else {
			$m->print(",");
		}
		if ($judge_active) {
			$m->print('"Y",');
		} else {
			$m->print(",");
		}
		if ($diverse) {
			$m->print('"Y",');
		} else {
			$m->print(",");
		}
		if ($parli) {
			$m->print('"Y",');
		} else {
			$m->print(",");
		}

		if ($tourn_settings->{"nsda_nats"}) {
			if ($prefers_congress) {
				$m->print('"Y",');
			} else {
				$m->print(",");
			}
		}

		$m->print('"'.$notes.'",');
		$m->print('"'.$special_job.'",');
		$m->print('"'.$pools.'",');
		$m->print('"'.$strikes{$judge_id}.'"');
		$m->print("\n");
	}

	$m->abort();

</%init>

