<%args>
	$judge_id
	$reason => undef
	$person
	$tourn
	$tourn_settings
</%args>
<%init>

	my $judge = Tab::Judge->retrieve($judge_id);

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	my $now = DateTime->now(time_zone => $tz);

	Tab::Fine->set_sql( revoke_bond => "
		update fine
		set deleted = 1
		where reason  = 'Judge Bond'
		and school = ?
	");

	my $fine_amount = $tourn_settings->{"forfeit_judge_fine"};

	my $school = $judge->school if $judge->school;

	if ($tourn_settings->{"first_forfeit_multiplier"}) {

		Tab::Fine->set_sql( judge_fine => "
			select * from fine
				where reason like 'BOND REVOKED:%'
				and school = ?
		");

		if (Tab::Fine->search_judge_fine($school->id)) {

			$reason = "JUDGE FINE: ".$reason;

		} else {

			$fine_amount = $fine_amount * $tourn_settings->{"first_forfeit_multiplier"};
			$reason = "BOND REVOKED: ".$reason;
			Tab::Fine->sql_revoke_bond->execute($school->id);

		}
	}

	my $fine = Tab::Fine->create({
		tourn     => $tourn->id,
		school    => $school->id,
		judge     => $judge->id,
		amount    => $fine_amount,
		reason    => $reason,
		levied_at => $now,
		levied_by => $person->id,
		payment   => 0,
		deleted   => 0
	});


	if ($fine && $school && $tourn_settings->{'forfeit_notify_coaches'}) {

		my $contacts = $m->comp("/funclib/contacts.mas",
			school         => $school->{id},
			return         => 'yaskween',
			email_contacts => 1,
		);

		unless ($contacts && scalar @{$contacts} > 0) {

			my $dbh = Tab::DBI->db_Main();

			my $sth = $dbh->prepare("
				select
					person.id person_id, person.email, person.no_email
				from person, permission
				where person.id = permission.person
					and permission.tag = 'chapter'
					and permission.chapter = ?
			");

			$sth->execute($school->chapter);
			$contacts = $sth->fetchall_hash();
		}

		my %id = map {$_->{person_id} => $_} @{$contacts};
		my @ids = keys %id;

		my $subject = "Fine levied for missing judge";

		my $message = "\n\tThe ".$tourn->name." has issued a fine to your school in the amount of

\$".sprintf ("%.2f", $fine->amount)."

This fine was triggered because:

$reason

Please contact the tournament officials if you believe this to be in error.

";
		$message .= $tourn_settings->{"judge_fine_message"};

		my $numberwang = substr($now->epoch, -6, 6);
		my $from_string = $tourn->name." <".$tourn->webname.'_'.$numberwang.'@www.tabroom.com>';

		$m->comp("/funclib/send_notify.mas",
			from    => $from_string,
			ids     => \@ids,
			tourn   => $tourn,
			subject => $subject,
			body    => $message
		);
	}

	my $description = "Fined judge ".$judge->first." ".$judge->last." for $reason";

	$m->comp("/funclib/log.mas",
		tourn       => $tourn->id,
		type        => "judge",
		fine        => $fine,
		judge       => $judge_id,
		description => $description,
		person      => $person->id
	);

	my $msg = "Bond/Judge Fine recorded";
	$m->redirect("edit.mhtml?judge_id=".$judge->id."&msg=$msg");

</%init>
