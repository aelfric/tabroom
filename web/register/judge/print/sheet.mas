<%args>
	$judge
	$filename
	$linebreaks => undef
</%args>
<%init>

	my $category = $judge->category;
	my $tourn = $category->tourn;

	$m->abort unless $tourn;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $filepath = $Tab::file_root."/tmp/";

	open (TEXOUT, ">>$filepath"."$filename.tex");
	binmode(TEXOUT, ":utf8");

	my @days = $m->comp(
		"/funclib/tourn_days.mas",
		tourn => $tourn
	);

	my $ncfl++ if $tourn->setting("ncfl");
	my $code = $judge->school->code if $judge->school;
	$code = $judge->school->region->code if $ncfl;
	$code = "-" unless $code;

    my $jpool_settings = $m->comp(
        "/funclib/jpool_settings.mas",
        category => $category
    );

	print TEXOUT "\\noindent\n";

	if ($judge->school > 0) {
		print TEXOUT "\\textsb{\\huge ".Tab::texify($judge->school->short_name." (".$code.")")." }\\hfill \n";
	} else {
		print TEXOUT "\\textsb{\\huge Hired Judge } \\hfill \n";
	}

	print TEXOUT "\\huge \\textsb{ ".Tab::texify($judge->first." ".$judge->last)."} \\\\ \n";
	print TEXOUT "\\smallskip\n";
	print TEXOUT "\\newline\n";
	print TEXOUT "\\Large ".Tab::texify($tourn->name)." \\hfill \n";
	print TEXOUT "\\Large Code ".$judge->code." " unless $category->setting("no_codes");
	print TEXOUT "\\Large in ".Tab::texify($category->name)." \\\\ \n" if $category->name;
	print TEXOUT "\\medskip\n";
	print TEXOUT "\\newline\n";

	my @panels = $m->comp("/funclib/judge_panels.mas", judge => $judge);

	@panels =
		sort {$a->round->timeslot->start->epoch <=> $b->round->timeslot->start->epoch}
		@panels;

	print TEXOUT "\\noindent\n";

	print TEXOUT "\\small\n";

	if ($judge->person > 0 ) {

		print TEXOUT "\\textsb{Phone:} ";
		print TEXOUT Tab::phone($judge->person->phone());

		print TEXOUT "\\hfill\n";

		print TEXOUT "\\textsb{Email:} ";
		print TEXOUT "\\parbox{1.5in}{ ";
		print TEXOUT Tab::texify($judge->person->email());
		print TEXOUT " } ";
		print TEXOUT "\\hfill\n";

	} else {

		print TEXOUT "\\textsb{Phone:} ";
		print TEXOUT Tab::phone($judge->setting("phone"));

		print TEXOUT "\\hfill\n";

		print TEXOUT "\\textsb{Email:} ";
		print TEXOUT "\\parbox{1.5in}{ ";
		print TEXOUT Tab::texify($judge->setting("email"));
		print TEXOUT " } ";
		print TEXOUT "\\hfill\n";

	}

	my $notes = $judge->setting("notes");

	print TEXOUT "\\smallskip\n";
	print TEXOUT "\\newline\n";

	print TEXOUT "\\textsb{ Notes:} ";

	print TEXOUT "\\parbox{6.25in}{ ";
		print TEXOUT $m->comp(
			"/funclib/print_format.mas",
			message => $notes
		) if $notes;
	print TEXOUT ". \n\n } \n";

	print TEXOUT "\\bigskip\n";
	print TEXOUT "\\newline\n";
	print TEXOUT "\\normalsize\n";
	print TEXOUT "{\\large Judging Assignments: } \n\n" if @panels;
	print TEXOUT "\\begin{tabular}{p{1.5in}p{.75in}p{1.0in}p{.75in}p{2.15in}} \n";

	my $switch;

	my %done_timeslots = ();

	foreach my $panel (@panels) {

		my $round = $panel->round;
		my $ts = $round->timeslot;

		$done_timeslots{$ts->id}++;

		my $start = $ts->start;
		$start->set_time_zone($tz);

		print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\n" unless $switch++ % 2;
		print TEXOUT "\\textsb{ ".Tab::texify(substr($round->event->name,0,18))." } & ";
		print TEXOUT "\\textsb{ ".Tab::texify($round->realname)." }";
		print TEXOUT " & ";
		print TEXOUT $start->day_abbr." "  if scalar @days > 1;
		print TEXOUT $start->hour_12.":".$start->strftime("%M")." ";
		print TEXOUT $start->strftime("%p");
		print TEXOUT " & ";
		print TEXOUT "Section: ".$panel->letter." & ";
		print TEXOUT "Room: ".Tab::texify($panel->room->name)." " if $panel->room;
		print TEXOUT "\\\\ \n";
	}

	print TEXOUT "\\end{tabular}\n";

	if ($judge->setting('special_job')) {

		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\strut \\hrulefill \\strut\n";
		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\textsb{\\large Special Assignment: } \n";
		print TEXOUT $m->comp(
			"/funclib/print_format.mas",
			message => $judge->setting('special_job')
		);
	}

	my @jpools = $judge->jpools;

	if (@jpools) {

		undef $switch;

		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\strut \\hrulefill \\strut\n";
		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "{\\large Additional Pooled Assignments: } \n";
		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\begin{tabular}{p{3in}p{3.75in}} \n";

		foreach my $jpool ( sort {$a->name cmp $b->name} @jpools) {
			next if $done_timeslots{$jpool_settings->{$jpool}{"standby_timeslot"}};
			print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\n" unless $switch++ % 2;
			print TEXOUT "\\textsb{ ";
			print TEXOUT "Pool: ".Tab::texify($jpool->name);
			print TEXOUT " } & ";
			print TEXOUT " at ".Tab::texify($jpool->site->name) if $jpool->site;
			print TEXOUT "\\\\ \n";
		}

		print TEXOUT "\\end{tabular}\n";
	}

	my $message = $category->setting("judge_sheet_notice");

	if ($message) {

		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\strut \\hrulefill \\strut\n";
		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT $m->comp(
			"/funclib/print_format.mas",
			message => $message
		);
	}

	print TEXOUT "\\newpage \n" if $linebreaks;
	close TEXOUT;

	return;

</%init>
