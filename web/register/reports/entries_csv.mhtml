<%args>
	$tourn
	$tourn_settings
	$person
	$session
</%args>
<%init>


    my $tz = $tourn->tz;
    $tz = "UTC" unless $tz;
    my $now = DateTime->now->set_time_zone($tz);

	my $tourn_name = $tourn->name;
	$tourn_name =~ s/[\W_]//g;

	my $filename = "Entries-".$tourn_name.".csv";

	my $dbh = Tab::DBI->db_Main();

	$m->clear_buffer;
	$r->content_type('application/csv');
	$r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";


	$m->print( "DioCode,Diocese,") if $tourn_settings->{"ncfl"};
	$m->print( "School,");
	$m->print( "SchoolCode,") unless $tourn_settings->{"ncfl"};
	$m->print( "Hotel,") if $tourn_settings->{"ncfl"};
	$m->print( "Event,");
	$m->print( "Code,");
	$m->print( "Name,");
	$m->print( "Students\n");

	my $sth = $dbh->prepare("
		select
			region.code, region.name,
			school.name, school.code,
			hotel.name,
			event.abbr,
			entry.code,
			entry.name,
			GROUP_CONCAT(CONCAT(student.first,' ',student.last) SEPARATOR ',') as students

		from (school, event, entry, entry_student es, student)
			left join region on school.region = region.id
			left join school_setting hs
				on hs.school = school.id
				and hs.tag = 'hotel'
			left join hotel on hotel.id = hs.value

		where school.tourn = ?
			and school.id = entry.school
			and entry.unconfirmed = 0
			and entry.event = event.id
			and es.entry = entry.id
			and es.student = student.id
		group by entry.id
		order by region.code, school.code, school.name, entry.code
	");

	$sth->execute($tourn->id);

	while (
		my (
			$region_code, $region_name,
			$school_name, $school_code,
			$hotel_name,
			$event,
			$code,
			$name,
			$students
		) = $sth->fetchrow_array()
	) {

		$m->print('"');

		if ($tourn_settings->{"ncfl"}) {
			$m->print($region_code.'","');
			$m->print($region_name.'","');
		}

		$m->print($school_name.'","');

		if ($tourn_settings->{"ncfl"}) {
			$m->print($hotel_name.'","');
		} else {
			$m->print($school_code.'","');
		}

		$m->print($event.'","');
		$m->print($code.'","');
		$m->print($name);

		foreach my $student (split (/\,/, $students) ) {
			$m->print('","');
			$m->print($student);
		}
		$m->print('"'."\n");
	}

	$sth->finish();

	$m->flush_buffer();
	$m->abort();

</%init>

