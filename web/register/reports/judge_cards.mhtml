<%args>
	$tourn
	$tourn_settings
	$session
	$category_id => undef
	$school_id   => undef
	$judge_id    => undef
	$sort_by     => undef
</%args>
<%init>

	my $limit;
	my $tz = $tourn->tz;

	my %data = $m->comp("/funclib/judge_card.mas",
		tourn          => $tourn,
		tourn_settings => $tourn_settings,
		category_id    => $category_id,
		school_id      => $school_id,
		judge_id       => $judge_id,
	);

	# Name the file.  This shouldn't really require 50 lines of code but
	# whatever.

	my $name;

	my @sites = $tourn->sites;
	my $site_count = scalar @sites;

	if ($category_id) {
		my $category = $tourn->categories(id => $category_id)->first;
		$name = $category->abbr;
		$name =~ s/[\W_]//g;
	}

	if ($school_id) {
		my $school = Tab::School->retrieve($school_id);
		my $school_name = $school->name;
		$school_name =~ s/[\W_]//g;
		$name .= "-".$school_name
	}

	unless ($name) {
		my $tourn_name = $tourn->name;
		$tourn_name =~ s/[\W_]//g;
		$name = $tourn_name;
	}

	if ($judge_id) {
		my $judge = Tab::Judge->retrieve($judge_id);
		my $judge_name = $judge->first.$judge->last;
		$judge_name =~ s/[\W_]//g;
		$name .= "-".$judge_name
	}

	my $filename = "JudgeCards-".$name."-".$session->id;
	my $filepath = $Tab::file_root."tmp/".$filename;

	$m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		array    => 2,
		head     => 1
	);

	open (TEXOUT, ">>$filepath.tex");
	binmode(TEXOUT, ":utf8");

	# If the tournament has a logo try to be pretty about it.

	my $logo_file = $tourn_settings->{"logo"};

	if ($logo_file && (not defined -e "$Tab::file_root/tmp/".$logo_file)) {
		system "cd $Tab::file_root/tmp;
		$Tab::latex_path_prefix/wget ".$Tab::s3_url."/".$tourn->id."/".$logo_file;
	}

	unless ($logo_file && -e "$Tab::file_root/tmp/".$logo_file) {
		undef $logo_file;
	}

	my %judges;
	%judges = %{$data{"judges"}} if $data{"judges"};

	my %messages;
	%messages = %{$data{"messages"}} if $data{"messages"};

	my %jpools;
	%jpools = %{$data{"jpools"}} if $data{"jpools"};

	my %rounds;
	%rounds = %{$data{"rounds"}} if $data{"rounds"};

	# Create each judge card and let 'er rip.

	my @keys = sort {
			$judges{$a}{"school_state"} cmp $judges{$b}{"school_state"}
			|| $judges{$a}{"school_sort_name"} cmp $judges{$b}{"school_sort_name"}
			|| $judges{$a}{"last"} cmp $judges{$b}{"last"}
		} keys %judges;

	if ($sort_by eq "lastname") {
		@keys = sort { $judges{$a}{"last"} cmp $judges{$b}{"last"} } @keys;
	} elsif ($sort_by eq "code") {
		@keys = sort { $judges{$a}{"code"} cmp $judges{$b}{"code"} } @keys;
	} elsif ($sort_by eq "school") {
		@keys = sort { $judges{$a}{"school_sort_name"} cmp $judges{$b}{"school_sort_name"} } @keys;
	}

	foreach my $judge_id (@keys) {

		my $has_type;
		foreach my $epoch (sort keys %{$judges{$judge_id}{epochs}}) {
			$has_type = $judges{$judge_id}{epochs}{$epoch}{slot_type};
		}
		next unless $has_type;

		print TEXOUT "\\begin{minipage}[l][][t]{5.35in}\n";
		print TEXOUT "\\textsb{\\huge ";
		print TEXOUT "\\parbox{1in}{";

		print TEXOUT Tab::texify($judges{$judge_id}{"code"});
		print TEXOUT "}";
		print TEXOUT "\\parbox{4.25in}{";
		print TEXOUT Tab::texify($judges{$judge_id}{"last"}),", ";
		print TEXOUT Tab::texify($judges{$judge_id}{"first"});

		if ($judges{$judge_id}{"middle"}) {
			print TEXOUT " ".Tab::texify($judges{$judge_id}{"middle"});
		}

		print TEXOUT "}}\n";
		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "{\\Large ";

		print TEXOUT "\\parbox{.75in}{";
		print TEXOUT Tab::texify($judges{$judge_id}{"school_state"});
		print TEXOUT "} ";
		print TEXOUT "\\parbox{4in}{";
		print TEXOUT Tab::texify($judges{$judge_id}{"school_name"});
		print TEXOUT "}}\n";

		if ($judges{$judge_id}{"person_email"}) {
			print TEXOUT "\\smallskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\large ";
			print TEXOUT "Linked to ".Tab::texify($judges{$judge_id}{"person_email"});
			print TEXOUT " \\hfill ";
		}

		print TEXOUT "\\end{minipage}\n";

		if ($logo_file) {
			print TEXOUT "\\begin{minipage}[l][][t]{1.5in}\n";
			print TEXOUT "\\hfill\n";
			print TEXOUT "\\includegraphics[height=1.25in,width=1.25in,keepaspectratio]{".$logo_file."}\n";
			print TEXOUT "\\end{minipage}\n";
		}

		print TEXOUT "\\vspace{.32in}\n";
		print TEXOUT "\\newline\n";

		print TEXOUT " \\strut ";
		print TEXOUT " \\hfill ";
		print TEXOUT "\\textsb{\\LARGE \\color{black!64} JUDGING ASSIGNMENTS }\n";
		print TEXOUT " \\hfill ";
		print TEXOUT " \\strut ";

		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\small\n";

		my $tabular;
		if ($site_count > 1) {
			$tabular = "\\begin{tabular}{p{.5in}p{.75in}p{1in}p{1in}p{3.25in}}\n";
		} else {
			$tabular = "\\begin{tabular}{p{.75in}p{1in}p{1.5in}p{3.25in}}\n";
		}
		my $switch = 1;

		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n";
		print TEXOUT "\\textsb{ Type } & ";
		print TEXOUT "\\textsb{ Name } & ";
		print TEXOUT "\\textsb{ Time } & ";
		if ($site_count > 1) {
			print TEXOUT "\\textsb{ Site } & ";
		}
		print TEXOUT "\\textsb{ Room } \\\\ \n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";

		foreach my $epoch (sort keys %{$judges{$judge_id}{epochs}}) {

			my $type = $judges{$judge_id}{epochs}{$epoch}{slot_type};

			if ($type eq "jpool") {

				my $jpool_id = $judges{$judge_id}{"epochs"}{$epoch}{slot_id};

				next unless $jpools{$jpool_id}{name};
				next if ($jpools{$jpool_id}{name} eq "Prefers Congress");

				$jpools{$jpool_id}{name} =~ s/Congress/CON/g;

				if ($tourn_settings->{show_jpools}) {
					next if $jpools{$jpool_id}{registrant};
				} else {
					next unless $jpools{$jpool_id}{show_judges};
				}

				my $start_dt = $jpools{$jpool_id}{start};

				print TEXOUT $tabular;
				print TEXOUT "\\rowcolor[rgb]{.92,.92,.92}\[5.5pt\]\[5.5pt\]\n" if $switch++ % 2;

				print TEXOUT "Pool & \\textsb{ ".Tab::texify($jpools{$jpool_id}{name})." } & ";

				print TEXOUT $m->comp("/funclib/showdt.mas",
					dt     => $start_dt,
					length => "casual",
					return => 1
				);

				print TEXOUT " & ";
				if ($site_count > 1) {
					print TEXOUT Tab::texify($jpools{$jpool_id}{site});
					print TEXOUT " & ";
				}
				print TEXOUT Tab::texify($jpools{$jpool_id}{message});
				print TEXOUT " \\\\ \n";
				print TEXOUT "\\end{tabular}\n";
				print TEXOUT "\\newline\n";

			} elsif ($type eq "round") {

				my $round_id = $judges{$judge_id}{epochs}{$epoch}{slot_id};
				my $start_dt = $rounds{$judge_id}{$round_id}{start};

				my $event = $rounds{$judge_id}{$round_id}{event};
				my $round_name = $rounds{$judge_id}{$round_id}{round_name};

				print TEXOUT $tabular;
				print TEXOUT "\\rowcolor[rgb]{.92,.92,.92}\[5.5pt\]\[5.5pt\]\n" if $switch++ % 2;

				print TEXOUT "Round & \\textsb{ ".Tab::texify($event." ".$round_name)." } & ";
				print TEXOUT $m->comp("/funclib/showdt.mas", dt => $start_dt, length => "casual", return => 1);
				print TEXOUT " & ";
				if ($site_count > 1) {
					print TEXOUT Tab::texify($rounds{$judge_id}{$round_id}{site});
					print TEXOUT " & ";
				}
				print TEXOUT Tab::texify($rounds{$judge_id}{$round_id}{room});
				print TEXOUT " \\\\ \n";
				print TEXOUT "\\end{tabular}\n";
				print TEXOUT "\\newline\n";

			}
		}

		my $local_category = $category_id;
		$local_category = $judges{$judge_id}{category_id} unless $local_category;

		if ($local_category && $messages{$local_category}) {

			print TEXOUT " \\strut ";
			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT " \\strut ";
			print TEXOUT " \\hfill ";
			print TEXOUT "\\textsb{\\large Notes and Messages}\n";
			print TEXOUT " \\hfill ";
			print TEXOUT " \\strut ";
			print TEXOUT "\\smallskip\n";
			print TEXOUT "\\newline\n";

			print TEXOUT " \\strut ";
			print TEXOUT " \\hfill ";
			print TEXOUT "\\parbox{6in}{\n";
				print TEXOUT "\\raggedright\n ";
				print TEXOUT "\\normalsize\n ";
				print TEXOUT $messages{$local_category};
			print TEXOUT " } \n";
			print TEXOUT " \\hfill ";
			print TEXOUT " \\strut ";
		}

		print TEXOUT "\\newpage\n";

	}

	$m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		tail     => 1
	);

</%init>
