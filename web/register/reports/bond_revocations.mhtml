<%args>
	$tourn
	$tourn_settings
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my $bond_sth = $dbh->prepare("
		select school.id, school.name, fine.amount, chapter.nsda
		from school, fine, chapter
		where school.tourn = ?
			and fine.deleted != 1
			and school.id = fine.school
			and school.chapter = chapter.id
			and fine.reason = 'Judge Bond'
	");

	my %schools;

	$bond_sth->execute($tourn->id);

	while (
		my ($school_id, $school_name, $fine_amount, $nsda_id) =
		$bond_sth->fetchrow_array()
	) {
		$schools{$school_id}{"name"} = $school_name;
		$schools{$school_id}{"id"}   = $nsda_id;
		$schools{$school_id}{"bond"} = int($fine_amount);
	}

	my $lost_sth = $dbh->prepare("
		select school.id, school.name, fine.amount, chapter.nsda
		from school, fine, chapter
		where school.tourn = ?
			and school.id = fine.school
			and school.chapter = chapter.id
			and fine.reason like 'BOND REVOKED:%'
			and fine.deleted != 1
	");

	$lost_sth->execute($tourn->id);

	while (
		my ($school_id, $school_name, $fine_amount, $nsda_id) =
		$lost_sth->fetchrow_array()
	) {
		$schools{$school_id}{"name"}   = $school_name;
		$schools{$school_id}{"id"}     = $nsda_id;
		$schools{$school_id}{"revoke"} = int($fine_amount);
	}

	my $more_sth = $dbh->prepare("
		select school.id, school.name, fine.amount, chapter.nsda
		from school, fine, chapter
		where school.tourn = ?
			and school.id = fine.school
			and school.chapter = chapter.id
			and fine.reason like 'JUDGE FINE%'
			and fine.deleted != 1
	");

	$more_sth->execute($tourn->id);

	while (
		my ($school_id, $school_name, $fine_amount, $nsda_id) =
		$more_sth->fetchrow_array()
	) {
		$schools{$school_id}{"name"}   = $school_name;
		$schools{$school_id}{"id"}     = $nsda_id;
		$schools{$school_id}{"more"}  += $fine_amount;
	}

	my $refund_sth = $dbh->prepare("
		select school.id, school.name, fine.amount, chapter.nsda
		from school, fine, chapter
		where school.tourn = ?
			and school.id = fine.school
			and school.chapter = chapter.id
			and fine.reason like 'Bond Refunded%'
			and fine.deleted != 1
	");

	$refund_sth->execute($tourn->id);

	while (
		my ($school_id, $school_name, $fine_amount, $nsda_id) =
		$refund_sth->fetchrow_array()
	) {
		$schools{$school_id}{"name"}   = $school_name;
		$schools{$school_id}{"id"}     = $nsda_id;
		$schools{$school_id}{"refund"} = $fine_amount;
	}

	my $preference_sth = $dbh->prepare("
		select school.id, school.state,
			refund_method.value_text method,
			refund_payable.value_text payable,
			refund_address.value_text address

		from school

			left join school_setting refund_method
				on refund_method.tag = 'refund_method'
				and refund_method.school= school.id

			left join school_setting refund_payable
				on refund_payable.tag = 'refund_payable'
				and refund_payable.school= school.id

			left join school_setting refund_address
				on refund_address.tag = 'refund_address'
				and refund_address.school= school.id

		where school.tourn = ?
	");

	$preference_sth->execute($tourn->id);

	my $refunds = $preference_sth->fetchall_hash();

	my %refund = map {$_->{id} => $_} @{$refunds};

</%init>


	<& "menu.mas",
		tourn          => $tourn,
		tourn_settings => $tourn_settings,
		whoami         => "bond_report"
	&>

	<div class="main">

		<span class="half">
			<h4>Bond Report</h4>
		</span>

		<span
			class = "half rightalign"
			id    = "bonds_buttonarea"
		></span>

		<& "/funclib/tablesorter.mas", table => "bonds" &>

		<table id="bonds">

			<thead>
				<tr class="yellowrow smallish">

					<th>
						School
					</th>

					<th>
						NSDA ID
					</th>

					<th>
						Bond
					</th>

					<th>
						Revoked
					</th>

					<th title="Additional Fines beyond the bond revocation">
						Extra
					</th>

					<th title="Bond Refunds already paid">
						Refunded
					</th>

					<th>
						Owed
					</th>

					<th>
						Method
					</th>

					<th>
						Payable To
					</th>

					<th class="hiddencsv">
						To
					</th>
					<th class="hiddencsv">
						Street
					</th>
					<th class="hiddencsv">
						Street2
					</th>
					<th class="hiddencsv">
						City
					</th>
					<th class="hiddencsv">
						State
					</th>
					<th class="hiddencsv">
						Zip
					</th>
					<th class="hiddencsv">
						Country
					</th>

					<th>
						Address
					</th>
				</tr>
			</thead>

			<tbody>

%				foreach my $school_id (keys %schools) {

					<tr>

						<td class="nospace smallish">
							<a
								href  = "/register/school/invoice.mhtml?school_id=<% $school_id %>"
								class = "full padvert marno white"
							><% $schools{$school_id}{"name"} %></a>
						</td>

						<td>
							<% $schools{$school_id}{"id"} %>
						</td>

						<td class="rightalign">
							<% $schools{$school_id}{"bond"} %>
						</td>

						<td class="centeralign">
							<% $schools{$school_id}{"revoke"} eq "200" ? "YES" : $schools{$school_id}{"revoke"} %>
						</td>

						<td class="rightalign">
							<% $schools{$school_id}{"more"} %>
						</td>

						<td class="rightalign">
							<% $schools{$school_id}{"refund"} %>
						</td>

						<td class="rightalign">
							<%
							   $schools{$school_id}{"more"}
							   - $schools{$school_id}{"refund"}
							   - $schools{$school_id}{"bond"}
							%>
						</td>

						<td class="rightalign">
							<% ucfirst($refund{$school_id}{"method"}) %>
						</td>

						<td class="rightalign">
							<% $refund{$school_id}{"payable"} %>
						</td>

%						my $address = eval { return JSON::decode_json($refund{$school_id}{"address"}); };

						<td class="hiddencsv">
							<% $address->{"contact_name"} %>
						</td>
						<td class="hiddencsv">
							<% $address->{"street"} %>
						</td>
						<td class="hiddencsv">
							<% $address->{"secondary"} %>
						</td>
						<td class="hiddencsv">
							<% $address->{"city"} %>
						</td>
						<td class="hiddencsv">
							<% $address->{"state"} %>
						</td>
						<td class="hiddencsv">
							<% $address->{"zip"} %>
						</td>
%						if ( $address->{"country"} && $address->{'country'} ne "US") {
							<td class="hiddencsv">
								 <& "/funclib/country_translate.mas", country => $address->{"country"}, uppercase => 1 &>
							</td>
%						}

						<td class="leftalign">
							<& "/funclib/address.mas",
								showme => 'yaskween',
								json   => $refund{$school_id}{"address"},
								nowarn => 1
							&>
						</td>


					</tr>
%				}

			</tbody>
		</table>
	</div>
