<%args>
	$tourn
	$tourn_settings
</%args>
<%init>

	my %done;

	my $dbh = Tab::DBI->db_Main();

	my $person_sth = $dbh->prepare("
		select person.id, person.first, person.middle, person.last, person.nsda from person where person.id = ?
	");

	my $school_sth = $dbh->prepare("

		select
			school.id, school.name,
			chapter.state, chapter.nsda,
			district.id district_id,
			district.code district_code,
			district.name district_name,
			district.location,
			contact_name.value as contact_name,
			contact_email.value as contact_email,
			contact_number.value as contact_number,
			second_contact_name.value as second_contact_name,
			second_contact_email.value as second_contact_email,
			second_contact_number.value as second_contact_number,
			tbook_coaches.value_text tbook_coaches

		from school

			left join chapter on chapter.id = school.chapter
			left join district on district.id = school.district

			left join school_setting tbook_coaches
				on tbook_coaches.school = school.id
				and tbook_coaches.tag = 'tbook_coach_ids'

			left join school_setting contact_name
				on contact_name.school = school.id
				and contact_name.tag = 'contact_name'

			left join school_setting contact_email
				on contact_email.school = school.id
				and contact_email.tag = 'contact_email'

			left join school_setting contact_number
				on contact_number.school = school.id
				and contact_number.tag = 'contact_number'

			left join school_setting second_contact_name
				on second_contact_name.school = school.id
				and second_contact_name.tag = 'second_contact_name'

			left join school_setting second_contact_email
				on second_contact_email.school = school.id
				and second_contact_email.tag = 'second_contact_email'

			left join school_setting second_contact_number
				on second_contact_number.school = school.id
				and second_contact_number.tag = 'second_contact_number'

		where school.tourn = ?
	");

	$school_sth->execute($tourn->id);

	my $school_results = $school_sth->fetchall_hash();
	my %raw_schools = map {$_->{"id"} => $_} @{$school_results};

	my $sth = $dbh->prepare("
		select
			student.id, student.first, student.last,
			entry.id entry, event.abbr,
			school.id as school,
			coach.id coach_id,
			coach.first coach_first, coach.middle coach_middle, coach.last coach_last, coach.nsda coach_nsda

		from (student, entry_student es, entry, event, chapter, school)

			left join entry_setting coach_points
				on coach_points.entry = entry.id
				and coach_points.tag = 'coach_points'

			left join person coach on coach.nsda = coach_points.value

		where event.tourn       = ?
			and entry.event     = event.id
			and entry.active    = 1
			and entry.id        = es.entry
			and es.student      = student.id
			and entry.event     = event.id
			and student.chapter = chapter.id
			and chapter.id      = school.chapter
			and school.tourn    = event.tourn

		group by es.id
		order by event.id, student.last
	");

	$sth->execute($tourn->id);

	my $entry_refs = $sth->fetchall_hash();
	my %schools;
	my %in;

	foreach my $result (@{$entry_refs}) {

		unless ($schools{$result->{"school"}}{"entries"}{$result->{"id"}}) {
			$schools{$result->{"school"}}{"entries"}{$result->{"id"}} = $result;
			$schools{$result->{"school"}}{"students"}++;
		}

		if ($result->{"abbr"} eq "PF") {
			$schools{$result->{"school"}}{"pf"}{$result->{"id"}}++;
		} elsif ($result->{"abbr"} eq "HSE") {
			$schools{$result->{"school"}}{"hse"}{$result->{"id"}}++;
		} elsif ($result->{"abbr"} eq "SEN") {
			$schools{$result->{"school"}}{"sen"}{$result->{"id"}}++;
		}

		$schools{$result->{"school"}}{"other"}{$result->{"id"}}++;

		if ($schools{$result->{"school"}}{"entries"}{$result->{"id"}}{"events"}) {
			$schools{$result->{"school"}}{"entries"}{$result->{"id"}}{"events"} .= ", ";
		}

		if ($result->{"coach_nsda"} && (not defined $schools{$result->{"school"}}{"coaches"}{$result->{"coach_nsda"}}) ) {
			next if ($done{$result->{school}}{$result->{"coach_id"}}++);
			$schools{$result->{"school"}}{"coaches"}{$result->{"coach_nsda"}}
				= $result->{"coach_first"}." ".$result->{"coach_middle"}." ".$result->{"coach_last"};
		}

		$schools{$result->{"school"}}{"entries"}{$result->{"id"}}{"events"} .= $result->{"abbr"};
	}

	my $judge_sth = $dbh->prepare("
		select
			judge.id, judge.first, judge.last, category.abbr, school.id school, person.nsda
		from (school, chapter_judge, judge, category, chapter)

			left join person on judge.person = person.id

		where school.tourn = ?

			and school.chapter   = chapter.id
			and chapter.id       = chapter_judge.chapter
			and chapter_judge.id = judge.chapter_judge
			and judge.category   = category.id
			and category.tourn   = school.tourn
		group by judge.id
	");

	$judge_sth->execute($tourn->id);

	my $judge_refs = $judge_sth->fetchall_hash();

	foreach my $judge (@{$judge_refs}) {

		$schools{$judge->{"school"}}{"judges"}{$judge->{'id'}} = $judge;
	}

	my $now = DateTime->now;
    $now->set_time_zone($tourn->tz);

    my $filename = "RibbonPickSheets-".$now->year;
    my $filepath = $Tab::file_root."tmp/".$filename;

    `rm -f $filepath.*`;

    $m->comp("/funclib/printout.mas",
        filename  => $filename,
        head      => 1
    );

    open (my $texout, ">>$filepath.tex");

	foreach my $school_id (keys %schools) {
		my $school_result = $raw_schools{$school_id};

		$schools{$school_id}{"name"}                  = $school_result->{"name"};
		$schools{$school_id}{"state"}                 = $school_result->{"state"};
		$schools{$school_id}{"state"}                 = $school_result->{"location"} unless $schools{$school_id}{"state"};
		$schools{$school_id}{"contact_name"}          = $school_result->{"contact_name"};
		$schools{$school_id}{"contact_email"}         = $school_result->{"contact_email"};
		$schools{$school_id}{"contact_number"}        = $school_result->{"contact_number"};
		$schools{$school_id}{"second_contact_name"}   = $school_result->{"second_contact_name"};
		$schools{$school_id}{"second_contact_email"}  = $school_result->{"second_contact_email"};
		$schools{$school_id}{"second_contact_number"} = $school_result->{"second_contact_number"};

		if ($school_result->{"tbook_coaches"}) {
			my $extra = eval {
				return  JSON::decode_json($school_result->{"tbook_coaches"});
			};

			if ($extra) {
				foreach my $coach_id (keys %{$extra}) {
					next if ($done{$school_id}{$coach_id}++);
					$person_sth->execute($coach_id);
					my $coach = $person_sth->fetch_hash();
					if ($coach) {
						$schools{$school_id}{"coaches"}{$coach->{nsda}}= $coach->{first}." ".$coach->{middle}." ".$coach->{last};
					} else {
						Tab::debuglog("INVALID ACCOUNT ID $coach_id FOUND IN SCHOOL ".$school_result->{"name"});
					}
				}
			}
		}
	}


	foreach my $school_id (
		sort {
			$schools{$a}{"state"} cmp $schools{$b}{"state"}
			|| $schools{$a}{"name"} cmp $schools{$b}{"name"}
		} keys %schools
	) {


		print $texout "\\textsb{\\LARGE ".Tab::texify($schools{$school_id}{"name"})." } \\hfill \n";
		print $texout "\\textsb{\\color{black!64}\\Huge ".Tab::texify($schools{$school_id}{"state"})." } \n";
        print $texout "\\medskip \\newline\n";
		print $texout "\\makebox[7in]{\\hrulefill}\n";
        print $texout "\\smallskip \\newline\n";


		if ($schools{$school_id}{"adults"} < 2) {
			foreach my $coach (keys %{$schools{$school_id}{"coaches"}}) {
				unless ($schools{$school_id}{"adult"}{$coach}++) {
					$schools{$school_id}{"adults"}++;
				}
			}
		}

		if ($schools{$school_id}{"adults"} > 2) {
			$schools{$school_id}{"adults"} = 2;
		}

        print $texout "\\parbox[t][1.35in][t]{.45in}{\n }\n";
        print $texout "\\parbox[t][1.35in][t]{4.2in}{\n ";
			print $texout "\\textsb{\\large CONTACT INFO} \n";
			print $texout "\\medskip \\newline\n";
			print $texout Tab::texify($schools{$school_id}{"contact_name"});
			print $texout "\\smallskip \\newline \n";
			print $texout Tab::texify($schools{$school_id}{"contact_email"});
			print $texout "\\smallskip \\newline\n";
			print $texout Tab::texify($schools{$school_id}{"contact_number"});
			print $texout "\n";
			print $texout "\\medskip \\newline\n";
			print $texout Tab::texify($schools{$school_id}{"second_contact_name"});
			print $texout "\\smallskip \\newline\n";
			print $texout Tab::texify($schools{$school_id}{"second_contact_email"});
			print $texout "\\smallskip \\newline\n";
			print $texout Tab::texify($schools{$school_id}{"second_contact_number"});
			print $texout "\n";
		print $texout " }\n ";

        print $texout "\\parbox[t][1.35in][t]{2.25in}{ \n";

			print $texout "\\textsb{\\large ENTRY COUNTS} \n";
			print $texout "\\medskip \\newline\n";

			my $switch;

			foreach my $tag ("pf", "hse", "sen") {
				foreach my $key (keys %{$schools{$school_id}{$tag}}) {
					delete $schools{$school_id}{"other"}{$key};
				}
			}

			foreach my $tag ("pf", "hse", "sen", "other") {
				print $texout "\\hfill\n";
				print $texout "\\begin{tabular}{p{1in}p{1.1in}}\n";
				print $texout "\\rowcolor[rgb]{.94,.94,.94}\n" unless $switch++ % 2;
				print $texout "\\textsb{\\color{black!64} ".uc($tag)." } & ";

				if ($schools{$school_id}{$tag}) {
					print $texout scalar (keys %{$schools{$school_id}{$tag}});
				}

				print $texout "\\end{tabular}\n";
				print $texout "\\newline\n";
			}

		print $texout " } \n";

		print $texout "\\medskip \\newline\n";

		print $texout "\\fbox{";
        print $texout "\\parbox[t][7in][t]{3.25in}{ \n";
		print $texout "\\smallskip \\newline\n";
        print $texout "\\hspace{.25em} \\textsb{\\LARGE COMPETITORS } \n";
		print $texout "\\medskip \\newline\n";

		undef $switch;

		foreach my $entry_id (
			sort {
				$schools{$school_id}{"entries"}{$a}{"events"} cmp $schools{$school_id}{"entries"}{$b}{"events"}
				|| $schools{$school_id}{"entries"}{$a}{"last"} cmp $schools{$school_id}{"entries"}{$b}{"last"}
			} keys %{$schools{$school_id}{"entries"}}
		) {

			my $entry = $schools{$school_id}{"entries"}{$entry_id};

			print $texout "\\begin{tabular}{p{2in}p{1in}}\n";
			print $texout "\\rowcolor[rgb]{.95,.95,.95}\n" unless $switch++ % 2;
			print $texout Tab::texify($entry->{"first"});
			print $texout " ";
			print $texout Tab::texify($entry->{"last"});
			print $texout " & ";
			print $texout Tab::texify($entry->{"events"});
			print $texout "\\end{tabular}\n";
			print $texout "\\newline\n";
		}
		print $texout " } \n";
		print $texout " } \n";

		print $texout "\\hspace{4mm}\n";

		print $texout "\\fbox{";
        print $texout "\\parbox[t][7in][t]{3.25in}{ \n";

		print $texout "\\smallskip \\newline\n";
        print $texout "\\hspace{.25em} \\textsb{\\LARGE JUDGES } \n";
		print $texout "\\medskip \\newline\n";

		undef $switch;

		foreach my $judge_id (
			sort {
				$schools{$school_id}{"judges"}{$a}{"abbr"} cmp $schools{$school_id}{"judges"}{$b}{"abbr"}
				|| $schools{$school_id}{"judges"}{$a}{"last"} cmp $schools{$school_id}{"judges"}{$b}{"last"}
			} keys %{$schools{$school_id}{"judges"}}
		) {

			my $judge = $schools{$school_id}{"judges"}{$judge_id};

			print $texout "\\begin{tabular}{p{2in}p{1in}}\n";
			print $texout "\\rowcolor[rgb]{.95,.95,.95}\n" unless $switch++ % 2;
			print $texout Tab::texify($judge->{"first"});
			print $texout " ";
			print $texout Tab::texify($judge->{"last"});
			print $texout " & ";
			print $texout Tab::texify($judge->{"abbr"});
			print $texout "\\end{tabular}\n";
			print $texout "\\newline\n";
		}

		print $texout "\\bigskip \\newline\n";
        print $texout "\\strut \\hspace{.25em} \\textsb{\\LARGE LISTED COACHES } \n";
		print $texout "\\medskip \\newline\n";

		undef $switch;

		foreach my $coach ( sort {$a <=> $b} keys %{$schools{$school_id}{"coaches"}}) {
			print $texout "\\begin{tabular}{p{3in}}\n";
			print $texout "\\rowcolor[rgb]{.95,.95,.95}\n" unless $switch++ % 2;
			print $texout Tab::texify($schools{$school_id}{"coaches"}{$coach});
			print $texout "\\end{tabular}\n";
			print $texout "\\newline\n";
		}

		print $texout " } \n";
		print $texout " } \n";
        print $texout "\\newpage\n";
	}

	close $texout;

    $m->comp("/funclib/printout.mas",
        filename  => $filename,
        tail      => 1,
    );


</%init>
