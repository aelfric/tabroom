<%args>
	$tourn
	$tourn_settings
	$session
	$judges     => undef
	$entries    => undef
	$no_invoice => undef
</%args>
<%init>

    my $name = $tourn->name;
    $name =~ s/[\W_]//g;

    my $filename = "EntryPackets-".$name."-".$session->id;
    $filename = "JudgePackets-".$name."-".$session->id if $judges;
    my $filepath = $Tab::file_root."tmp/".$filename;

    $m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		head     => 1
	);

    my $now = DateTime->now;
    $now->set_time_zone($tourn->tz);

	my $dbh = Tab::DBI->db_Main();
	my $sth;

	if ($ARGS{'defaults'}{"weekend"}) {

		$sth = $dbh->prepare("
			select school.id, school.name, school.code, school.state, chapter.state, chapter.country
			from (school, entry, event_setting weekend)
				left join chapter on chapter.id = school.chapter
			where school.tourn = ?
				and school.id = entry.school
				and entry.event = weekend.event
				and weekend.tag = 'weekend'
				and weekend.value = ?
			group by school.id
			order by school.name
		");

		$sth->execute($tourn->id, $ARGS{'defaults'}{"weekend"});

	} else {

		$sth = $dbh->prepare("
			select school.id, school.name, school.code, school.state, chapter.state, chapter.country
			from (school)
				left join chapter on chapter.id = school.chapter
			where school.tourn = ?
			order by school.name
		");

		$sth->execute($tourn->id);
	}

	my %schools;

	while (
		my ($school_id, $school_name, $school_code, $school_state, $chapter_state, $chapter_country) = $sth->fetchrow_array()
	) {
		$schools{$school_id}{"name"} = $school_name;
		$school_name =~ s/^The //g;

		$schools{$school_id}{"sort_name"} = $school_name;
		$schools{$school_id}{"code"} = $school_code;

		if ($school_state) {
			$schools{$school_id}{"state"} = $school_state;
		} elsif ($chapter_state) {
			$schools{$school_id}{"state"} = $chapter_state;
		}

		$schools{$school_id}{"country"} = $chapter_country;
	}

    my $logo_file = $tourn_settings->{"logo"};

	if ($logo_file) {

		unless (-e "$Tab::file_root/tmp/".$logo_file) {
			system "cd $Tab::file_root/tmp;
			$Tab::latex_path_prefix/wget ".$Tab::s3_url."/".$tourn->id."/".$logo_file;
		}

		unless (-e "$Tab::file_root/tmp/".$logo_file) {
			undef $logo_file;
		}
	}

	my $notfirst;
	my @school_ids = keys %schools;

	if (
		$tourn_settings->{"nsda_nats"}
		|| $tourn_settings->{"nsda_ms_nats"}
	) {
		@school_ids = sort {
			$schools{$a}{state} cmp $schools{$b}{state}
			|| $schools{$a}{sort_name} cmp $schools{$b}{sort_name}
		} @school_ids;

	} else {
		@school_ids = sort {$schools{$a}{sort_name} cmp $schools{$b}{sort_name}} @school_ids;
	}

	my $start_year = $tourn->start->year;
	my $tourn_name = $tourn->name;

	my %invoice_data = ();

	unless ($no_invoice) {

		my @events = $tourn->events;
		$invoice_data{events} = \@events;

		foreach my $event ($tourn->events) {
			%{$invoice_data{event_settings}{$event->id}} = $event->all_settings();
			$invoice_data{event_settings}{$event->id}{"fee"} = $event->fee;
		}

		my @categories = $tourn->categories;
		$invoice_data{categories} = \@categories;

		foreach my $category ($tourn->categories) {
			%{$invoice_data{category_settings}{$category->id}} = $category->all_settings();
		}

		my @concessions = $tourn->concessions;
		$invoice_data{concessions} = \@concessions;

		my @hotels = $tourn->hotels();

		if (@hotels) {
			%{$tourn_settings->{$tourn->id}{"hotels"}} = map {$_->id => $_} @hotels;
		}

		%{$invoice_data{school_settings}} = $m->comp("/funclib/school_settings.mas", tourn => $tourn);
	}

	my $counter;

	foreach my $school_id (@school_ids) {

		$counter++;

		open (TEXOUT, ">>$filepath.tex");
		binmode(TEXOUT, ":utf8");

		if ($notfirst++) {
			print TEXOUT "\\newpage\n";
		}

		print TEXOUT "\\noindent\n";

		if ($logo_file) {
			print TEXOUT "\\begin{minipage}[l]{1.5in}\n";
			print TEXOUT "\\includegraphics[height=1in,width=1in,keepaspectratio]{".$logo_file."}\n";
			print TEXOUT "\\end{minipage}\n";
			print TEXOUT "\\begin{minipage}[r]{5.65in}\n";
		} else {
			print TEXOUT "\\begin{minipage}[r]{7.15in}\n";
		}

		print TEXOUT "\\noindent\n";
		print TEXOUT "\\strut\n";
		print TEXOUT "\\hfill\n";

		print TEXOUT "{\\LARGE \\bf ".$start_year." ".Tab::texify($tourn_name)." } \n";
		print TEXOUT "\\medskip\n\\newline\n";
		print TEXOUT "\\noindent\n";
		print TEXOUT "\\strut\n";
		print TEXOUT "\\hfill\n";
		print TEXOUT "{\\Large \\bf \\color{black!64}  ".Tab::texify($schools{$school_id}{name})." } \n";

		if ($tourn_settings->{nsda_nats} || $tourn_settings->{nsda_ms_nats}) {
			if ($schools{$school_id}{state}) {
				print TEXOUT "{\\Large \\bf \\color{black!64} -- ".Tab::texify($schools{$school_id}{state})." } \n";
			} elsif ($schools{$school_id}{country}) {
				print TEXOUT "{\\Large \\bf \\color{black!64} -- INT: ".Tab::texify($schools{$school_id}{country})." } \n";
			}
		}
		print TEXOUT "\\medskip\n\\newline\n";
		print TEXOUT "\\noindent\n";
		print TEXOUT "\\strut\n";
		print TEXOUT "\\hfill\n";
		print TEXOUT "{\\scriptsize \\color{black!64}  ";
		print TEXOUT "Code ".Tab::texify($schools{$school_id}{code})." -- " if $schools{$school_id}{code};
		print TEXOUT "Printed ".Tab::nicefulldate($now)." at ".Tab::nicetime($now)." } \\hspace{1mm} \n";
		print TEXOUT "\\end{minipage}\n";

		print TEXOUT "\\vspace{.2in}\n";
		print TEXOUT "\\newline\n";

		close TEXOUT;

		if ($tourn_settings->{'wsdc'}) {

			$m->comp("/register/school/print/reg_longform.mas",
				school_id => $school_id,
				filename  => $filename,
				judges    => $judges,
				entries   => $entries
			);

		} else {

			$m->comp("/register/school/print/registration.mas",
				school_id => $school_id,
				filename  => $filename,
				judges    => $judges,
				entries   => $entries,
				weekend   => $ARGS{'defaults'}{"weekend"}
			);
		}

		unless ($no_invoice) {

			open (TEXOUT, ">>$filepath.tex");
			print TEXOUT "\\newpage\n";
			close TEXOUT;

			$m->comp("/register/school/print/invoice.mas",
				school            => Tab::School->retrieve($school_id),
				tourn             => $tourn,
				tourn_settings    => $tourn_settings,
				events            => $invoice_data{events},
				concessions_array => $invoice_data{concessions},
				category_settings => $invoice_data{category_settings},
				categories        => $invoice_data{categories},
				event_settings    => $invoice_data{event_settings},
				school_settings   => $invoice_data{school_settings},
				filename          => $filename
			);
		}

	}

    $m->comp("/funclib/printout.mas",
		tourn    => $tourn,
		filename => $filename,
		tail     => 1
	);

</%init>
