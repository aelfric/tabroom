<%args>
	$tourn
	$tourn_settings
	$quiz_id     => undef
	$category_id => undef
</%args>
<%init>

	use Switch;

	my $category = Tab::Category->retrieve($category_id);
	my @all_categories = $tourn->categories();

	unless ($category) {
		$category = $all_categories[0];
	}

	my @keys;

	if ($category) {

		foreach my $jpool (
			$m->comp("/funclib/category_jpools.mas",
				category => $category,
				limit => "registrant"
			)
		) {
			push @keys, $jpool->setting("paradigm_quiz")
				if $jpool->setting("paradigm_quiz");
		}

		push @keys, $category->setting("paradigm_quiz")
			if $category->setting("paradigm_quiz");
	}

	my %seen;
	@keys = grep { ! $seen{$_} ++ } @keys;

	my %quiz_by_id;

	foreach my $key (@keys) {
		my $quiz = Tab::Quiz->retrieve($key);
		$quiz_by_id{$quiz->id} = $quiz;
	}

	my $quiz;

	if (scalar @keys == 1 || (not defined $quiz_id)) {
		$quiz_id = $keys[0];
	}

	$quiz =  $quiz_by_id{$quiz_id};

	my %form = eval {
		return %{JSON::decode_json($quiz->questions)};
	};

	foreach my $key (keys %form) {
	}

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			judge.id, judge.first, judge.last,
			school.name school,
			chapter.state state,
			person.email, pq.answers,
			district.name district
		from judge
			left join school on judge.school = school.id
			left join chapter on school.chapter = chapter.id
			left join district on school.district = district.id
			left join person on judge.person = person.id
			left join person_quiz pq on pq.person = person.id
				and pq.quiz = ?
		where judge.category = ?

		order by chapter.state, school.name, judge.last
	");

	my $result_refs;

	if ($quiz && $category) {
		$sth->execute($quiz, $category);
		$result_refs = $sth->fetchall_hash();
	}

</%init>

	<& "menu.mas",
		tourn          => $tourn,
		tourn_settings => $tourn_settings,
		whoami         => "paradigms"
	&>

	<div class="main">

	<span class="third nospace">
		<h4 class="nospace">Paradigm Sheets</h4>
	</span>

	<form action="questionnaire.mhtml" method="post">

	<span class="third centeralign">
		<select
			name     = "category_id"
			class    = "fixedmed"
			onChange = "this.form.submit();"
		>
%			foreach my $ocat (@all_categories) {
				<option
					value="<% $ocat->id %>"
					<% $ocat == $category ? 'selected' : "" %>
				><% $ocat->name %></option>
%			}
		</select>
	</span>

	<span class="third centeralign">
		<select
			name     = "quiz_id"
			class    = "fixedmed"
			onChange = "this.form.submit();"
		>
%			foreach my $key (@keys) {
				<option
					value="<% $key %>"
					<% $key eq $quiz->id ? 'selected' : "" %>
				><% $quiz_by_id{$key}->label %></option>
%			}
		</select>
	</span>

	</form>

<%perl>

	my $counter;

	if (keys %form) {

		my @judges = $m->comp("/funclib/category_judges.mas", category => $category);

		foreach my $judge (@{$result_refs}) {

			next unless $judge->{"answers"};

			my %answers = eval {
				return %{JSON::decode_json($judge->{"answers"})};
			};

</%perl>
			<div class="full martopmore padvertless">
				<span class="quarter nospace">
					<h6 class="semibold nospace">
					<% $judge->{"first"} %> <% $judge->{"last"} %>
					</h6>
				</span>

				<span class="half rightalign semibold bigger nospace">
					<% $judge->{"school"} %>
				</span>
				<span class="quarter rightalign semibold bigger nospace">
					<% $judge->{"state"} %>
					<% $judge->{"district"} %>
				</span>
			</div>
<%perl>

			my @keys = sort keys %{$form{"questions"}};

			@keys =
				map  { $_->[0] }
				sort { uc($a->[1]) cmp uc($b->[1]) }
				map  { [$_, $_ =~ /(\D+)/] }
				@keys;

			@keys =
				map  { $_->[0] }
				sort { $a->[1] <=> $b->[1] }
				map  { [$_, $_ =~ /(\d+)/] }
				@keys;


			foreach my $key (@keys) {

				my $subquestion;
				$subquestion = 1 unless $key eq int($key);

				my $question = $form{"questions"}{$key};

				my $class = $question->{"class"};

				next if $question->{"type"} eq "title";
				next if $question->{"type"} eq "subtitle";

</%perl>

				<div class="row">

%					if ($subquestion) {
						<span class="twenty marno">&nbsp;</span>
						<span class="nineteen">
%					}

%					if ($question->{"type"} eq "textbox") {

						<span class="full">
						<p class="bluetext semibold biggish">Additional remarks:</p>

%					} elsif ($question->{"type"} eq "boolean") {

						<span class="threequarters <% $subquestion ? "" : "semibold" %> marno bluetext padsetting">
							<p class="nospace marleftmore">
								<% $question->{"question"} %>
							</p>
						</span>

						<span class="fifth">

%					} else {

						<span class="fiveeighths <% $subquestion ? "" : "semibold" %> marno bluetext padsetting">
							<p class="nospace marleftmore">
								<% $question->{"question"} %>
							</p>
						</span>

						<span class="threeeighths padvert marno">
%					}

<%perl>

					if ($question->{"type"}eq "textbox") {
						$m->print("<p>");
					} elsif ($question->{"type"} eq "checkbox") {

						my $notfirst;

						foreach my $answer (@{$question->{"answers"}}) {
							next unless $answers{$key."_".$answer};
							$m->print(", ") if $notfirst++;
							$m->print(ucfirst($answer));
						}


					} else {
						$m->print( ucfirst($answers{$key}) );
					}

					if ($question->{"type"} eq "radio") {
						my $max;
						foreach my $answer (@{$question->{"answers"}}) {
							next if $answer ne int($answer);
							$max = $answer if $max < $answer;
						}
						$m->print("/".$max) if $max;
					}
</%perl>

				</span>

%				unless ($subquestion) {
					</span>
%				}

				</div>

%			}
%		}
%	}

	</div>

