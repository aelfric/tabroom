<%args>
	$tourn
	$tourn_settings
	$person
	$entry_id     => undef
</%args>
<%init>

	my $entry = eval {
		return Tab::Entry->retrieve($entry_id);
	};

	unless ($entry) {
		$m->comp("/funclib/abort.mas", message => "No entry record found for ID ".$entry_id);
	}

	my $school = $entry->school;

	my %entry_settings = $entry->all_settings;

	foreach my $field (
		"title",
		"topic",
		"author",
		"publisher",
		"publish_date",
		"publish_isbn",
		"publish_url",
	) {

		if ($ARGS{$field}) {
			unless ($entry_settings{$field} eq $ARGS{$field}) {
				$entry->setting($field, $ARGS{$field});
			}
		} else {
			$entry->setting($field, 0);
		}
	}

	foreach my $field (
		"video_link",
		"bibliography"
	) {

		my $text;

		unless ($field eq "video_link") {
			$text = $m->comp(
				"/funclib/save_editor.mas",
				text => $ARGS{$field}
			);
		} else {
			$text = $ARGS{$field};
		}

		if ($text) {
			unless ($entry_settings{$field} eq $text) {
				$entry->setting($field, "text", $text);
			}
		} elsif ($entry_settings{$field}) {
			$entry->setting($field, 0);
		}
	}

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	my $time = "12:00 PM";
	my $now = DateTime->now();

	foreach my $field (
		"publish_print_date",
	) {

		my $dt = eval {
			return Tab::dtme($ARGS{$field}, $time, $tz);
		};

		if ($dt) {
			unless (
				$entry_settings{$field}
				&& ($entry_settings{$field}->epoch eq $dt->epoch)
			) {
				$entry->setting($field, "date", $dt);
			}

		} elsif ($entry_settings{$field}) {
			$entry->setting($field, 0);
		}
	}

	my $upload_error;

	my $req = Apache2::Request->new($r);

	if ($req) {

		my $upload = $req->upload($entry->id."_script");

		if ($upload && $upload->filename) {

			$m->comp("/funclib/upload_test.mas", upload => $upload);

			my $filename  = $upload->filename;

			$filename =~ s/.*[\/\\](.*)/$1/;
			$filename =~ s/\ //g;
			$filename =~ s/\)//g;
			$filename =~ s/\(//g;
			$filename =~ s/\'//g;  # '  stupid vim

			$filename = substr($filename, 0, 100);

			my $filetemp = $upload->tempname;

			my $history = $entry_settings{"script_history"};
			my $max_id;

			if ($history) {
				my @ids = sort {$b <=> $a} keys %{$history};
				$max_id = shift @ids;
			}

			$max_id++;

			$history->{$max_id}{"script"} = $filename;
			$history->{$max_id}{"uploaded"} = DateTime::Format::MySQL->format_datetime($now);
			$history->{$max_id}{"person"} = $person->id;

			$entry->setting("script_history", "json", $history);

			if ($Tab::hostname eq "www.tabroom.com") {
				system $Tab::s3_cmd." put $filetemp ".$Tab::s3_bucket."/tourns/".$tourn->id."/".$school->id."/scripts/".$entry->id."/".$filename;
				system $Tab::s3_cmd." cp $filetemp ".$Tab::s3_bucket."/tourns/".$tourn->id."/".$school->id."/scripts/$max_id/".$entry->id."/".$filename;
			}

			$entry->setting('script_file', $filename);
			$ARGS{$entry->id."_script_file"} = $filename;
		}
	}

	my $msg = "Entry piece &amp; title information updated";

	if ($tourn_settings->{'nsda_nats'}) {
		foreach my $student ($entry->students) {
			$m->comp("/funclib/nsda/status_check.mas",
				school  => $school,
				student => $student
			);
		}
	}

	$m->redirect("edit.mhtml?entry_id=$entry_id&titles=1&err=$upload_error&msg=$msg");

</%init>
