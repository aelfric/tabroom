<%args>
	$person
	$tourn
	$tourn_settings
	$from => undef
</%args>
<%init>

	my $school_year = Tab::school_year - 1;

	my $district = Tab::District->retrieve(
		$tourn_settings->{"nsda_district"}
	);

	Tab::Student->columns(TEMP => qw/schoolname schoolid school_nsda/);

	Tab::Student->set_sql( non_nsda => "
		select distinct student.*, school.name as schoolname,
			chapter.nsda as school_nsda, school.id as schoolid
		from student, entry_student, entry, school, chapter
		where school.tourn = ?
			and school.id = entry.school
			and entry.id = entry_student.entry
			and entry_student.student = student.id
			and school.chapter = chapter.id
			and (student.nsda = 0 or student.nsda is null)
	");

	my @unmarked_students = Tab::Student->search_non_nsda($tourn->id);

	my $merged;
	my $updated;

	foreach my $student (@unmarked_students) {

		my $nsda = $ARGS{$student->id};

		next unless $nsda;

		my $exists = Tab::Student->search(
			nsda => $nsda
		)->first;

		if ($exists && $exists->chapter->id == $student->chapter->id) {

			$merged++;

			$m->comp("/funclib/student_merge.mas",
				person => $person,
				victim => $student,
				target => $exists,
				force => 1
			);

		} else {

			$m->comp("/funclib/nsda/student_link.mas",
				student => $student,
				nsda_id => $nsda
			);

			$updated++;
		}

	}

	my $msg = "Updated $updated student records, merged $merged records with existing ones";

	if ($from eq "jot") {
		$m->redirect("/tabbing/publish/joydistrict.mhtml?function=Confirm NSDA Memberships&msg=$msg");
	} elsif ($from eq "sw") {
		$m->redirect("/tabbing/publish/swdistrict.mhtml?function=Confirm NSDA Memberships&msg=$msg");
	} else {
		$m->redirect("nsda_student_memberships.mhtml?msg=$msg");
	}

</%init>
