<%args>
	$tourn
	$tourn_settings
	$session
	$event_id => undef
	$by_round => undef
	$cutoff   => "14"
	$names    => undef
</%args>
<%init>

	my @events = sort {$a->name cmp $b->name} $tourn->events ;

	Tab::Entry->columns(TEMP => "tie");
	Tab::Entry->columns(TEMP => "key");

	my $tourn_name = $tourn->name;
	$tourn_name =~ s/[\W_]//g;

	my $filename = $tourn_name."-winner-contacts.csv";

	$m->clear_buffer();
	$r->content_type('application/csv');
	$r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	our %school_dump;

	EVENT:
	foreach my $event (sort {$a->name cmp $b->name} $tourn->events) {

		my %order = $m->comp("/tabbing/results/nats_order.mas",
			event          => $event,
			tourn          => $tourn,
			tourn_settings => $tourn_settings,
			limit          => $cutoff
		);

		$m->print("\n\n");
		$m->print($event->name);
		$m->print("\n");
		$m->print("Top ".$cutoff);
		$m->print("\n\n");
		$m->print("Place,First,Last,School,District,Head of School,Head Email,School Street,School City, School State, School Zip,Phone,Entry Coaches,Chapter Advisor, Advisor Email\n");

		foreach my $entry_id (sort {$order{$a}{"place"} <=> $order{$b}{"place"}} keys %order) {
			my $entry = Tab::Entry->retrieve($entry_id);
			next unless $entry;
			$entry->key($order{$entry_id}{"place"});
			print_entry($entry, 'final', '', $tourn_settings);
		}
	}

	undef %school_dump;

	$m->flush_buffer();
	$m->abort();

	sub print_entry {

		my ($entry, $type, $tag, $tourn_settings) = @_;

		my @students = $entry->students;

		$m->print('"');

		if ($tag && $type ne "elim") {

			$m->print("Top Novice") if $tag eq "TN";
			$m->print("Honorable Mention") if $tag eq "HM";

		} elsif ($type eq "final") {

			my $place = Lingua::EN::Numbers::Ordinate::ordinate($entry->key);
			$m->print($place);

		} elsif ($type eq "elim") {

			$m->print($tag);

		} else {

			$m->print($type);
		}

		foreach my $student (@students) {
			$m->print('","');
			$m->print($student->first.'","'.$student->last) ;
		}

		$m->print('","');

		my $nsda_school = $school_dump{$entry->school->id};

		unless ($nsda_school) {

			my $nsda_id = $entry->school->chapter->nsda;

			if ($nsda_id) {
				my $junk;
				($nsda_school, $junk) = $m->comp("/funclib/nsda/api_client.mas", path => "/schools/".$nsda_id);
				$school_dump{$entry->school->id} = $nsda_school;
			}
		}

		my $status = eval {
			return 1 if %{$nsda_school};
		};

		unless ($status) {
			undef $nsda_school;
		}

		if ($nsda_school) {

			my $principal = $nsda_school->{"principal"};
			my $mailing = $nsda_school->{"mailing"};

			foreach my $address (@{$nsda_school->{addresses}}) {
				if ($address->{"principal"} == 1 && not defined $principal) {
					$principal = $address;
					$nsda_school->{principal} = $address;
				}

				if ($address->{"street"} && not defined $mailing) {
					$mailing = $address;
					$nsda_school->{mailing} = $address;
				}
			}

			unless ($nsda_school->{advisor_name}) {

				my $advisors_ref = $m->comp("/funclib/nsda/coaches.mas", chapter => $entry->school->chapter);

				my $emails;
				my %dupe;

				if ($advisors_ref) {
					foreach my $ad (@{$advisors_ref}) {
						next if $dupe{$ad->{first}."-".$ad->{last}}++;
						if ($ad->{email}) {
							$emails .= ", " if $emails;
							$emails .= $ad->{email};
						}
						$advisors .= ", " if $advisors;
						$advisors .= $ad->{first}." ";
						$advisors .= $ad->{middle}." " if $ad->{middle};
						$advisors .= $ad->{last};
					}
				}

				$nsda_school->{advisor_name} = $advisors;
				$nsda_school->{advisor_email} = $emails;
			}

			$m->print($nsda_school->{"official_name"});
			$m->print('","');

			my $district = $entry->school->district;

			if ($district) {
				$m->print($district->name);
				$m->print('","');
			}

			$m->print($principal->{"contact_name"});
			$m->print('","');
			$m->print($principal->{"contact_email"});
			$m->print('","');
			$m->print($mailing->{"street"});
			$m->print('","');
			$m->print($mailing->{"city"});
			$m->print('","');
			$m->print($mailing->{"state"});
			$m->print('","');
			$m->print($mailing->{"zip"});
			$m->print('","');
			$m->print($mailing->{"phone"});
			$m->print('","');

			my $coach_name = $entry->setting("coach_script");
			$m->print($coach_name);
			$m->print('","');

			$m->print($nsda_school->{advisor_name});
			$m->print('","');

			$m->print($nsda_school->{advisor_email});
			$m->print('","');

		}

		$m->print('"');
		$m->print("\n");

	}

</%init>

