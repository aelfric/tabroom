<%args>
	$tourn
	$tourn_settings
	$perms
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare('
		select
			school.id, school.name, chapter.state, chapter.country,
			picked_up.value picked_up,
			COUNT(distinct(entry.id)) as entries

		from (school, chapter, student, entry_student es, entry, event, round, panel, ballot, tourn)

			left join school_setting picked_up
				on picked_up.school = school.id
				and picked_up.tag = "picked_up"

		where tourn.id         = ?
			and school.tourn   = tourn.id
			and school.chapter = chapter.id
			and chapter.id     = student.chapter
			and student.id     = es.student
			and es.entry       = entry.id
			and entry.event    = event.id
			and event.tourn    = tourn.id
			and entry.id       = ballot.entry
			and ballot.panel   = panel.id
			and panel.round    = round.id
			and round.type     = "elim"

		group by school.id
		order by chapter.state, chapter.country, school.name
	');

	$sth->execute($tourn->id);
	my $results = $sth->fetchall_hash();

	my $speaker_count = 21;

	if ($tourn_settings->{nsda_nats}) {
		$speaker_count = 15;
	}

	my $speaker_sth = $dbh->prepare('
		select
			school.id, school.name, chapter.state, chapter.country,
			picked_up.value picked_up,
			COUNT(distinct(student.id)) as students

		from (school, chapter, student, result, result_set)

			left join school_setting picked_up
				on picked_up.school = school.id
				and picked_up.tag = "picked_up"

		where school.tourn     = ?
			and school.chapter = chapter.id
			and chapter.id     = student.chapter

			and student.id        = result.student
			and result.rank       < '.$speaker_count.'
			and result.result_set = result_set.id
			and result_set.tourn  = school.tourn
			and result_set.label  = "Speaker Awards"

		group by school.id
		order by chapter.state, chapter.country, school.name
	');

	$speaker_sth->execute($tourn->id);
	my $speaker_refs = $speaker_sth->fetchall_hash();

	my %speakers = map { $_->{id} => $_ } @{$speaker_refs};
	my @schools;

	foreach my $school (@{$results}) {
		if ($speakers{$school->{id}}) {
			$school->{entries} += $speakers{$school->{id}}{students};
			delete $speakers{$school->{id}};
		}
		push @schools, $school;
	}

	foreach my $speaker_id (keys %speakers) {
		my $speaker = $speakers{$speaker_id};
		$speaker->{entries} = $speaker->{students};
		push @schools, $speaker;
	}

	@schools = sort {
		$a->{state} cmp $b->{state}
		|| $a->{country} cmp $b->{country}
		|| $a->{name} cmp $b->{name}
	} @schools;

</%init>

	<& menu.mas,
		perms          => $perms,
		tourn          => $tourn,
		tourn_settings => $tourn_settings,
		whoami         => "pickup"
	&>

	<div class="main">

		<div class="full flexrow">
			<span class="threequarters">
				<h4>Schools In Elimination Rounds</h4>
			</span>

			<span
				class = "quarter rightalign"
				id    = "awards_buttonarea"
			></span>
		</div>

		<& "/funclib/tablesorter.mas", table => "awards" &>

		<table id="awards">

			<thead>
				<tr class="yellowrow smallish padvertless">
					<th>
						School
					</th>

					<th>
						State
					</th>

					<th>
						Entries
					</th>

					<th>
						Picked Up?
					</th>
				</tr>
			</thead>

			<tbody>
%				foreach my $result (@schools) {

					<tr>
						<td>
							<a
								class  = "plain hover full"
								target = "blank"
								href   = "awards_school.mhtml?school_id=<% $result->{id} %>"
							><% $result->{name} %></a>
						</td>

						<td class="centeralign">
							<% $result->{state} || $result->{country} %>
						</td>

						<td class="centeralign">
							<% $result->{entries} %>
						</td>

						<td
							class     = "padvertless nospace centeralign"
							data-text = "<% $result->{picked_up} ? 1 : 2 %>"
						>
							<& '/funclib/bool_switch.mas',
								id        => "switch_".$result->{id},
								tag       => 'picked_up',
								school_id => $result->{id},
								value     => $result->{picked_up} || 0,
								url       => "pickup_switch.mhtml",
								smaller   => 1,
							&>
						</td>
					</tr>
%				}
			</tbody>
		</table>
	</div>


		<script>

			function refreshPickups() {
				const url = 'awards_refresh.mhtml';

				$.ajax({
					type : 'GET',
					url,
					crossDomain : true,
					xhrFields: {
						withCredentials: true
					},
				}).then( function(schools) {
					schools.forEach( function (school) {
						if (school.picked_up) {
							$(`#switch_${school.id}`).prop('checked', true);
							$(`#sort_${school.id}`).attr('data-text', '2');
						} else {
							$(`#switch_${school.id}`).prop('checked', false);
							$(`#sort_${school.id}`).attr('data-text', '1');
						}
					});
				});
			}

			$(document).ready(function() {
				refreshPickups();
				setInterval(refreshPickups, 15000);
			});

		</script>

