<%args>
	$tourn
	$person
	$unsave => undef
	$sweep_set_id => undef
</%args>
<%init>

	my $master_set = Tab::SweepSet->retrieve($sweep_set_id);

	unless ($master_set) {
		$master_set = $tourn->sweep_sets(name => "Diocesan Cumulative")->first;
	}

	my %regions;

	if ($master_set) {

		my %schools = $m->comp(
			"/tabbing/results/sweep_schools.mas",
			sweep_set   => $master_set,
			all_entries => 1
		);

		my $target_rule = $master_set->rules(tag => "entries")->first;
		my $target_count;

		if ($target_rule) {
			$target_count = $target_rule->value;
		}

		foreach my $school_id (keys %schools) {
			my $region_id = $schools{$school_id}{"regionid"};
			my $region_code = $schools{$school_id}{"regioncode"};
			my $region_name = $schools{$school_id}{"regionname"};

			unless ($regions{$region_id}) {
				$regions{$region_id}{"code"} = $region_code;
				$regions{$region_id}{"name"} = $region_name;
			}

			foreach my $entry_id (keys %{$schools{$school_id}{"entries"}}) {
				$regions{$region_id}{"entries"}{$entry_id} =
					$schools{$school_id}{'entries'}{$entry_id};
			}
		}

		if ($target_count) {

			foreach my $region_id (keys %regions) {
				foreach my $entry_id ( sort {
					$regions{$region_id}{"entries"}{$b}{"points"}
						<=> $regions{$region_id}{"entries"}{$a}{"points"}
					} keys %{$regions{$region_id}{"entries"}}
				) {

					next if $regions{$region_id}{"counted"} >= ($target_count);
					$regions{$region_id}{"counted"} >= ($target_count);
					$regions{$region_id}{"total"} += $regions{$region_id}{"entries"}{$entry_id}{"points"};
					$regions{$region_id}{"hover"} .= $regions{$region_id}{"entries"}{$entry_id}{"event_abbr"}." ";
					$regions{$region_id}{"hover"} .= $regions{$region_id}{"entries"}{$entry_id}{"points"}."\n";
					$regions{$region_id}{"hover"} .= $regions{$region_id}{"entries"}{$entry_id}{"code"}.": ";
				}
			}
		}
	}

	my $circuit = $tourn->circuits->first;

	my %cooke = $m->comp(
		"/funclib/region_settings.mas",
		tag     => "cooke",
		circuit => $circuit
	);

	foreach my $region_id (keys %regions) {
		if ($unsave) {
			$region->setting("cooke", ($cooke{$region_id} - $regions{$region_id}{"counted"} ));
		} else {
			$region->setting("cooke", ($cooke{$region_id} + $regions{$region_id}{"counted"} ));
		}
	}

	my $description = $person->first." ".$person->last." (".$person->email.") has saved the diocesan points from this year to the cumulative totals.";

	my $now = DateTime->now();

	$m->comp("/funclib/log.mas",
		type        => 'tabbing',
		tourn       => $tourn->id,
		person      => $person->id,
		description => $description
	);

	my $msg = "Cooke points saved.  Future runs of the Cooke cumulative report will be inaccurate for this tournament.";

	$m->redirect("show_diocesan_sweeps.mhtml?msg=$msg");

</%init>
