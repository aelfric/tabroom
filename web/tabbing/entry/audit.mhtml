<%args>
	$person
	$session
	$tourn
	$perms
	$tourn_settings
	$defaults      => undef
	$judge_id      => undef
	$judge_code    => undef
	$timeslot_id   => undef
	$flight        => undef
	$all           => undef
	$errs          => undef
	$ballot_err    => undef
	$rank_string   => undef
</%args>
<%init>

    my $judge;

    if ($judge_id) {

        $judge = Tab::Judge->retrieve($judge_id);

    } elsif ($judge_code) {

        my @code_judges = $m->comp(
			"/funclib/tourn_judges.mas",
			tourn => $tourn,
			code  => $judge_code,
			nats  => $tourn_settings->{"nsda_nats"}
		);

        $judge = shift @code_judges if @code_judges;
    }

	my ($eventref, $catref) = $m->comp(
		"/funclib/allowed_events.mas",
		tourn => $tourn,
		perms => $perms
	);

	my %cats = map {$_->id => $_} @{$catref};
	my %evs = map {$_->id => $_} @{$eventref};

	my $event;
	my $category;

	if ($ARGS{event_id} && $evs{$ARGS{"event_id"}}) {
		$event = $evs{$ARGS{"event_id"}};
	} elsif ($defaults->{tourns}{$tourn}{event} && $evs{$defaults->{tourns}{$tourn}{event}}) {
		$event = $evs{$defaults->{tourns}{$tourn}{event}};
	} elsif (scalar @{$eventref} == 1) {
		$defaults->{tourns}{$tourn}{event} = int(${$eventref}[0]);
		$event = ${$eventref}[0];
	}

	if ($event) {
		$category = $event->category;
		$defaults->{tourns}{$tourn}{category} = $category->id;
	} elsif ($ARGS{category_id} && $cats{$ARGS{"category_id"}}) {
		$category = $cats{$ARGS{"category_id"}};

	} elsif ($defaults->{tourns}{$tourn}{category} && $cats{$defaults->{tourns}{$tourn}{category}}) {
		$category = $cats{$defaults->{tourns}{$tourn}{category}};
	} elsif (scalar @{$catref} == 1) {
		$defaults->{tourns}{$tourn}{category} = int(${$catref}[0]);
		$category = ${$catref}[0];
	}

	if ( (not defined $event) && scalar ($category->events) == 1) {
		$event = $category->events->first;
		$defaults->{tourns}{$tourn}{event} = $event->id;
	}

	$session->default($defaults);

	my $timeslot = Tab::Timeslot->retrieve($timeslot_id) if $timeslot_id;

    $flight = 1 unless $flight;

    my @panels = $m->comp(
		'/funclib/judge_panels.mas',
			flight   => $flight,
			judge    => $judge,
			timeslot => $timeslot
	) if $judge && $timeslot ;

    my $panel = shift @panels if @panels;

</%init>

	<& "menu.mas",
		tourn          => $tourn,
		tourn_settings => $tourn_settings,
		timeslot       => $timeslot,
		perms          => $perms,
		all            => $all,
		session        => $session,
		panel          => $panel,
		judge          => $judge,
		flight         => $flight,
		points_later   => $ARGS{"points_later"},
		audit_mode     => $ARGS{"audit_mode"},
		checker     => $ARGS{"checker"},
		category       => $category,
		event          => $event,
		person         => $person,
	&>


	<div class="main">

		<% $rank_string %>

%		if ($ballot_err) {

			<h1 class="warning centeralign" style="margin-top: 50px;">
				OH, NOES!!!!
			</h1>

			<h2 class="warning centeralign">
				STOP RIGHT THERE
			</h2>

			<h2 style="text-align: center;">
				The last ballot had an error:
			</h2>

			<h4 class="warning centeralign">
				<% $ballot_err %>
			</h4>

%		   if ($judge) {
				<h4 class="warning centeralign">
					Judge: <% $judge->first." ".$judge->last %>
				</h4>
%		   }

			<p class="centeralign">
				Each ballot must be entered the same way twice in a row to be
				accepted.  Pass the ballot to someone else to enter again.
				This error will disappear once the ballot has been entered the
				same way twice in a row.
			</p>

%		} else {

%			if ($errs) {
				<div class="block lirdrow">
					<h4>Terrible terrible damage!</h4>
					<p><% $errs %></p>
				</div>
%			}

%			if ($judge &! $panel) {
				<h4
					class = "centeralign"
					style = "margin-bottom: 75pt; margin-top: 50pt;"
				>
					No ballots found for judge in this round
				</h4>
%			}

%			unless ($judge) {
				<h4
					class = "centeralign"
					style = "margin-bottom: 75pt; margin-top: 75pt;"
				>
					Select a judge on the right to continue
				</h4>
%			}

%			if ($panel) {

%				my $event_type = $panel->round->event->type;

%				if ($event_type eq "congress" && $tourn->setting("ncfl")) {

					<& "audit/congress_points.mas",
						session        => $session,
						person         => $person,
						judge          => $judge,
						timeslot       => $timeslot,
						panel          => $panel,
						tourn          => $tourn,
						tourn_settings => $tourn_settings,
					&>

%				} elsif ($event_type eq "wudc") {

					<& "audit/wudc.mas",
						session  => $session,
						person   => $person,
						judge    => $judge,
						timeslot => $timeslot,
						panel    => $panel
					&>

%				} elsif ($event_type eq "debate" || $event_type eq "wsdc") {

					<& "audit/debate.mas",
						session  => $session,
						person  => $person,
						judge    => $judge,
						timeslot => $timeslot,
						panel    => $panel
					&>

%				} elsif ($event_type eq "speech") {

					<& "audit/speech.mas",
						session  => $session,
						person  => $person,
						judge    => $judge,
						timeslot => $timeslot,
						panel    => $panel
					&>

%				} elsif ($event_type eq "congress") {

					<& "audit/congress.mas",
						session  => $session,
						person  => $person,
						judge    => $judge,
						timeslot => $timeslot,
						panel    => $panel
					&>

%				}
%			}
%		}

	</div>
