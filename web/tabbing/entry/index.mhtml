<%args>
	$person
	$person_settings
	$session
	$tourn
	$tourn_settings
	$defaults     => undef
	$perms        => undef
	$judge_id     => undef
	$judge_code   => undef
	$timeslot_id  => undef
	$flight       => undef
	$all          => undef
	$errs         => undef
	$ballot_err   => undef
	$rank_string  => undef
	$audit_mode   => undef
	$checker      => undef
	$points_later => undef
</%args>
<%init>

	unless ($tourn->hidden) {
		$m->comp("/funclib/online_usage.mas",
			tourn    => $tourn,
			env      => \%ENV,
			district => $tourn_settings->{"nsda_district"}
		);
	}

    my $judge;

    if ($judge_id) {

        $judge = Tab::Judge->retrieve($judge_id);

    } elsif ($judge_code) {

        my @code_judges = $m->comp(
			"/funclib/tourn_judges.mas",
			tourn => $tourn,
			code  => $judge_code,
			nats  => $tourn_settings->{"nsda_nats"}
		);

        $judge = shift @code_judges if @code_judges;
    }

	my %events = $m->comp("/funclib/perms/events.mas",
		tourn   => $tourn,
		perms   => $perms,
		limited => 1,
		checker => 1,
		by_both => 1
	);

	my @event_ids = sort {
		$events{$a}{"nsda"} <=> $events{$b}{"nsda"}
		|| $events{$a}{"nsda"} cmp $events{$b}{"nsda"}
	} keys %events;

	my %categories = $m->comp("/funclib/perms/categories.mas",
		tourn       => $tourn,
		perms       => $perms,
		checker     => 1,
		limited     => 1,
	);

	my @category_ids = sort {
		$categories{$a}{"nsda"} <=> $categories{$b}{"nsda"}
		|| $categories{$a}{"nsda"} cmp $categories{$b}{"nsda"}
	} keys %categories;

	my $event_id;
	my $category;

	if ($ARGS{event_id} && $events{$ARGS{"event_id"}}) {
		$event_id = $ARGS{"event_id"};
	} elsif ($defaults->{tourns}{$tourn}{event} && $events{$defaults->{tourns}{$tourn}{event}}) {
		$event_id = $defaults->{tourns}{$tourn}{event};
	} elsif (scalar @event_ids == 1) {
		$defaults->{tourns}{$tourn}{event} = $event_ids[0];
		$event_id = $event_ids[0];
	}

	my $event;
	if ($event_id) {
		$event = Tab::Event->retrieve($event_id);
	}

	if ($event) {
		$category = $event->category;
		$defaults->{tourns}{$tourn}{category} = $category->id if $category;
	} elsif ($ARGS{category_id} && $categories{$ARGS{"category_id"}}) {
		$category = Tab::Category->retrieve($ARGS{"category_id"});
	} elsif ($defaults->{tourns}{$tourn}{category} && $categories{$defaults->{tourns}{$tourn}{category}}) {
		$category = Tab::Category->retrieve($defaults->{"category"});
	} elsif (scalar @category_ids == 1) {
		$defaults->{tourns}{$tourn}{category} = $category_ids[0];
		$category = Tab::Category->retrieve($category_ids[0]);
	}

	if ($category && (not defined $event) && scalar ($category->events) == 1) {
		$event = $category->events->first;
		$defaults->{tourns}{$tourn}{event} = $event->id;
	}

	$session->default($defaults);

	if ($event && $event->setting("combined_ballots")) {
		$m->redirect("combined.mhtml");
	}

	Tab::Timeslot->columns(TEMP => "roundlabel");
	Tab::Timeslot->columns(TEMP => "roundname");

	my %timeslots = $m->comp("/funclib/perms/timeslots.mas",
		tourn   => $tourn,
		perms   => $perms,
		by_both => 1,
		checker => 1,
	);

	my $timeslot = $timeslots{$timeslot_id};

    $flight = 1 unless $flight;

    my @panels = $m->comp(
		'/funclib/judge_panels.mas',
			flight   => $flight,
			judge    => $judge,
			timeslot => $timeslot->{id}
	) if $judge && $timeslot ;

    my $panel = shift @panels if @panels;

	$m->comp("/funclib/panel_dedupe.mas", panel => $panel) if $panel;

</%init>

	<& "menu.mas",
		tourn          => $tourn,
		tourn_settings => $tourn_settings,
		timeslot       => $timeslot,
		perms          => $perms,
		all            => $all,
		session        => $session,
		panel          => $panel,
		judge          => $judge,
		flight         => $flight,
		points_later   => $points_later,
		audit_mode     => $audit_mode,
		checker        => $checker,
		category       => $category,
		event          => $event,
		categories     => \%categories,
		events         => \%events,
		person         => $person,
	&>

	<div class="main">
		<% $rank_string %>

%		if ($ballot_err) {

			<h1 class="warning centeralign"
				style="margin-top: 50px;"
			>
				OH, NOES!!!!
			</h1>

			<h2 class="warning centeralign">
				STOP RIGHT THERE
			</h2>

			<h2 style="text-align: center;">
				The last ballot had an error:
			</h2>

			<h4 class="warning centeralign">
				<% $ballot_err %>
			</h4>

%		   if ($judge) {
				<h4 class="warning centeralign">
					Judge: <% $judge->first." ".$judge->last %>
				</h4>
%		   }

			<p class="centeralign">
				Each ballot must be entered the same way twice in a row to be
				accepted.  Pass the ballot to someone else to enter again.
				This error will disappear once the ballot has been entered the
				same way twice in a row.
			</p>

%		} else {

%			if ($errs) {
				<div class="centeralign borderred">

					<h2 class="orangetext">
						Terrible terrible damage!
					</h2>

					<span class="leftalign threequarters redtext semibold">
						<% $errs %>
					</span>

				</div>
%			}

%			if ($judge &! $panel) {
				<h4 class="centeralign"
					style="margin-bottom: 75pt; margin-top: 50pt;"
				>
					No ballots found for that judge in this round
				</h4>
%			}

%			unless ($judge) {
				<h4 class="centeralign"
					style="margin-bottom: 75pt; margin-top: 75pt;"
				>
					Select a judge on the right to continue
				</h4>
<%perl>

			}

			if ($panel) {

				my $round = $panel->round;
				my $event = $round->event;
				my $protocol = $round->protocol;

				unless ($protocol > 0) {

					my $err = "This round doesn't have tiebreakers, thus I do
					not know what to ask you for. Set them and try again";

					$m->redirect("/setup/schedule/event.mhtml?round_highlight=".$round->id."&event_id=".$event->id."&err=$err");

				}

				my $event_type = $event->type;

				$event_type = "debate"
					if $event_type eq "pf"
					|| $event_type eq "ld"
					|| $event_type eq "big_questions"
					|| $event_type eq "policy"
					|| $event_type eq "parli";

				$event_type = "debate"
					if $event_type eq "wsdc"
					&& $round->type eq "elim";

				$event_type = "legion"
					if $tourn_settings->{"legion"};

				$event_type = "debate"
					if $event_type eq "wsdc"
					&& $round->type eq "final"
					&& $round->type eq "runoff";


				my $timeslot_obj = Tab::Timeslot->retrieve($timeslot->{id});

</%perl>

%				if ($event_type eq "legion") {

					<& "ballots/legion.mas",
						session         => $session,
						person          => $person,
						person_settings => $person_settings,
						judge           => $judge,
						timeslot        => $timeslot_obj,
						panel           => $panel,
						tourn           => $tourn,
						tourn_settings  => $tourn_settings,
					&>

<%perl>
				} elsif ($event_type eq "congress"
						&& ($tourn_settings->{"ncfl"}
						|| $points_later
					)
				) {
</%perl>

					<& "ballots/congress_points.mas",
						session         => $session,
						person          => $person,
						person_settings => $person_settings,
						judge           => $judge,
						timeslot        => $timeslot_obj,
						panel           => $panel,
						tourn           => $tourn,
						tourn_settings  => $tourn_settings,
					&>

%				} elsif ($event_type eq "wudc") {

					<& "ballots/wudc.mas",
						session         => $session,
						person          => $person,
						person_settings => $person_settings,
						judge           => $judge,
						timeslot        => $timeslot_obj,
						panel           => $panel
					&>

%				} elsif ($event_type eq "wsdc") {

%					if ($event->setting("wsdc_subtotal_ballot")) {

						<& "ballots/wsdc_subtotal.mas",
							session         => $session,
							person_settings => $person_settings,
							person          => $person,
							judge           => $judge,
							timeslot        => $timeslot_obj,
							panel           => $panel
						&>

%					} else {

						<& "ballots/wsdc.mas",
							session         => $session,
							person          => $person,
							person_settings => $person_settings,
							judge           => $judge,
							timeslot        => $timeslot_obj,
							panel           => $panel
						&>

%					}

%				} elsif ($event_type eq "debate") {

					<& "ballots/debate.mas",
						session         => $session,
						person          => $person,
						person_settings => $person_settings,
						judge           => $judge,
						timeslot        => $timeslot_obj,
						panel           => $panel
					&>

%				} elsif ($event_type eq "speech") {

					<& "ballots/speech.mas",
						session        => $session,
						person         => $person,
						judge          => $judge,
						timeslot       => $timeslot_obj,
						tourn_settings => $tourn_settings,
						panel          => $panel
					&>

%				} elsif ($event_type eq "congress") {

					<& "ballots/congress.mas",
						session  => $session,
						person   => $person,
						judge    => $judge,
						timeslot => $timeslot_obj,
						panel    => $panel
					&>

%				}
%			}
%		}

	</div>
