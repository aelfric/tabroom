<%args>
	$event
</%args>
<%init>

	return unless $event;

	my $tourn = $event->tourn;

	my $top_novice;

	my $novice = $event->setting("top_novice");

	my %is_novice = map {$_->id => 1} $m->comp("/funclib/event_novii.mas", event => $event);

	my @rounds = sort {$b->name <=> $a->name} $event->rounds;

	my $last_round_type;
	my %not_eligible;

	ROUND:
	foreach my $round (@rounds) {

		next if $top_novice;

		if ($novice eq "noelim") {

			if ($round->type eq "final" || $round->type eq "elim") {

				foreach my $entry ($m->comp("/funclib/round_entries.mas", round => $round)) {
					$not_eligible{$entry->id}++;
				}

				next ROUND;
			}
		}

		next if (defined $last_round_type && ($last_round_type ne "final" && $last_round_type ne "elim"));
		$last_round_type = $round->type;

		my (
			$entries_ref,
			$tbs_ref,
			$desc_ref,
			$forfeit_ref
		) = $m->comp("/tabbing/results/order_entries.mas",
				round  => $round,
				return => $ARGS{"return"}
			);

		if ($entries_ref) {
			foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) {
				foreach my $entry (@{${$entries_ref}{$key}}) {
					next if $not_eligible{$entry};
					$top_novice = $entry if $is_novice{$entry};
					next ROUND if $top_novice;
				}
			}
		}
	}

	return $top_novice;

</%init>

