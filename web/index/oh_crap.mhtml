<%flags>
#	inherit => undef
</%flags>

<html>

<head>
	<title>Error</title>
</head>

<body>

<div class="blankfull">

%	if ( index($stack, 'Internal apreq error') != -1) {

		<h2 title="Dagnabit">
			Your file upload was interrupted.
		</h2>

		<p>
			As best I can tell, you were in the middle of uploading a file to
			Tabroom and the process did not complete.
		</p>

		<p>
			This error can happen if the file you are uploading is too big, or
			because your internet connection is not very stable and got interrupted.
			If you file isn't larger than 10MB, you can hit the browser Back button
			and try again.
		</p>

		<p>
			If your file is on the larger side, you should try shrinking the
			size down, either my reformatting it or if it's a scan, re-scan it
			at a lower resolution.  A lot of PDF editors also have tools and options
			built in to shrink file sizes down.
		</p>

		<p>
			If you have further questions though, please do
			contact us at <a href="mailto:help@tabroom.com">help@tabroom.com</a>.
		</p>

		<h4>Error text:</h4>

		<pre>
			<% $error_text %>
		</pre>

%	} else {

%		if ($r->hostname eq "www.tabroom.com") {

			<h2 title="Dagnabit">
				Well, that's just unfortunate
			</h2>

			<p>
				Looks like you just tripped over a bug in tabroom.com.
			</p>

			<p>
				Please, <span class="inline semibold redtext">do not send this bug
				report to us.</span>. The bug has automatically been logged and
				emailed to the developer!  Emailing it in again doesn't help, and
				just adds to my already daunting email intake.
			</p>

			<p>
				If you have further questions though, please do
				contact us at <a href="mailto:help@tabroom.com">help@tabroom.com</a>.
			</p>

			<p>
				Otherwise, your browser's back button will bring you back to start again.
			</p>

			<h4>Error text:</h4>

%		} else {
			<h5 class="centeralign">Kaboom</h5>
%		}

		<pre>
			<% $error_text %>
		</pre>

%	}

</div>

</body>
</html>

<%init>

	use Apache2::URI;
	use APR::URI;
	use MIME::Lite;
	use UNIVERSAL::can;

	my $error = $r->pnotes('error');

	my $stack = UNIVERSAL::can( $error, 'as_text' ) ? $error->as_text : $error;


	if ( index($stack, "no value sent for required parameter") != -1) {

		my ($error, $junque) = split ("Stack", $stack);

		$m->comp("/funclib/abort.mas",
			message => "That page cannot be displayed because of a broken link with missing inputs: <br /> ".$error
		);

	} elsif ( index($stack, "Apache2::RequestIO::rflush") != -1) {
		$m->comp("/funclib/abort.mas",
			message => "Your browser connection was interrupted before the data fully transferred"
		);
	} elsif ( index($stack, "Apache2::RequestIO::print") != -1) {
		$m->comp("/funclib/abort.mas",
			message => "Your browser connection was interrupted before the data fully transferred"
		);
	}

	my $error_text .= "\nGenerated at ".DateTime->now(time_zone => "America/New_York")." EST/EDT on ".`/bin/hostname`;
	$error_text .= "Requestor IP is ".$ENV{REMOTE_ADDR}."\n";
	$error_text .= "Proxied IP is ".$ENV{"HTTP_X_FORWARDED_FOR"}."\n\n";
	$error_text .= "Page is " . $r->parsed_uri->unparse . "\n\n";

	my %cookies = eval {

		my @cookies = split(";", $r->headers_in->{'Cookie'});
		my %return;

		foreach my $cookie (@cookies) {
			my ($key, @values) = split(/=/, $cookie);
			my $value = APR::Request::decode(join("=", @values));
			$key =~ s/\s+//g;
			$return{$key} = $value;
		}
		return %return;
	};

	if ($cookies{"TabroomToken"}) {

		my %userdata = eval {
			my $dbh = Tab::DBI->db_Main();

			my $sth = $dbh->prepare("
				select
					person.id, person.email, person.first, person.last,
					session.id,
					tourn.id, tourn.name
				from session
					left join person on session.person = person.id
					left join tourn on session.tourn = tourn.id
				where session.userkey = ?
			");

			my %data;

			$sth->execute($cookies{"TabroomToken"});

			while (
				my (
					$id, $email, $first, $last,
					$session, $tourn_id, $tourn_name
				) = $sth->fetchrow_array()
			) {

				$data{"id"} = $id;
				$data{"email"} = $email;
				$data{"name"} = $first." ".$last;
				$data{"tourn_id"} = $tourn_id;
				$data{"tourn_name"} = $tourn_name;
				$data{"session"} = $session;
			}

			return %data;
		};

		if (keys %userdata) {
			$error_text .= "User ".$userdata{"id"}." ".$userdata{"email"}." ".$userdata{"name"}."\n";
			$error_text .= "Tournament ".$userdata{"tourn_id"}." ".$userdata{"tourn_name"}."\n" if $userdata{'tourn_id'};
			$error_text .= "Session ".$userdata{"session"}."\n\n";
		}
		if (keys %ARGS) {
			$error_text .= "ARGS Array\n";
			foreach my $key (keys %ARGS) {
				$error_text .= "\tKey $key value ".$ARGS{$key}."\n";
			}
		}
	}

	$error_text .= "\nError Text:\n\n";
	$error_text .= $stack;
	$r->log_error($error_text);

	if ( index($stack, 'Internal apreq error') != -1) {

		if ($r->hostname eq "www.tabroom.com") {

			my $mail = MIME::Lite->new(
				From    => 'error-handler@tabroom.com',
				To      => 'errors@tabroom.com',
				Subject => 'Bug tripped on '.$Tab::url_prefix,
				Data    => $error_text
			);

			$mail->send();
		}
	}

</%init>

