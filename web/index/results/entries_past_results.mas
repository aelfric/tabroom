<%args>
	$id1       => undef
	$id2       => undef
	$startdate => undef
	$enddate   => undef
</%args>
<%init>

	my $debug=0;

	my $student1 = Tab::Student->retrieve($id1) if $id1;
	my $student2 = Tab::Student->retrieve($id2) if $id2;
	$m->abort unless $student1;

	my $student1_id = $student1->id;
	my $student2_id = $student2->id if $student2;

	use Time::HiRes qw( time );
	use DateTime;
	use Date::Parse;
	use Data::Dumper;
	my $start = time();

	my $this_year = Tab::school_year;
	my $year = $this_year->year;
	my $start_string = "07/01/$year";
	my $end_string = "06/30/".($year + 1);
	my $start_dt = Tab::dtme($start_string);
	my $end_dt = Tab::dtme($end_string);

	my $start_epoch = $start_dt->epoch;
	my $end_epoch = $end_dt->epoch;

	# NOW PULL EVERY BALLOT FOR EVERY ENTRY THAT EITHER SPEAKER HAS BEEN

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			ballot.id, ballot.side, ballot.bye, ballot.entry,
			panel.id, panel.letter,
			score.id, score.tag, score.student, score.value,
			round.id, round.name, round.label, round.type,
			event.name, opponent.code,
			tourn.id, tourn.name, tourn.start,
			event.id,
			CONCAT(judge.last, ', ', judge.first) as judge_name,
			event.level,
			round_robin.value,
			aff_label.value, neg_label.value,
			score_student.id, score_student.first, score_student.last

		from (ballot, entry_student, score, round, panel, event, tourn, judge, ballot oppballot, entry opponent)

		left join event_setting round_robin on round_robin.event = event.id and round_robin.tag = 'round_robin'
		left join event_setting aff_label on aff_label.event = event.id and aff_label.tag = 'aff_label'
		left join event_setting neg_label on neg_label.event = event.id and neg_label.tag = 'neg_label'
		left join student score_student on score.student = score_student.id

		where entry_student.student = ?
			and ballot.entry = entry_student.entry
			and score.ballot = ballot.id
			and judge.id = ballot.judge
			and panel.id = ballot.panel
			and round.id = panel.round
			and round.post_secondary > 2
			and event.id = round.event
			and tourn.id = event.tourn
			and panel.id = oppballot.panel
			and oppballot.entry = opponent.id
			and opponent.id != entry_student.entry
		group by score.id
		order by tourn.start desc, event.id asc, ballot.panel asc, score.value desc, judge.last
	");

	my %panel;
	my %summary;
	my %students;

	foreach my $student ($student1, $student2) {

		next unless $student;
		$sth->execute($student);

		my $last_entry;

		while (

			my (
				$ballot_id, $ballot_side, $ballot_bye, $entry_id,
				$panel_id, $panel_letter,
				$score_id, $score_tag, $score_student, $score_value,
				$round_id, $round_name, $round_label, $round_type,
				$event_name, $opponent_code,
				$tourn_id, $tourn_name, $tourn_start,
				$event_id,
				$judge_name,
				$level, $round_robin, $aff_label, $neg_label,
				$student_id, $student_first, $student_last
			) = $sth->fetchrow_array()

		) {
			next if $panel{$panel_id}{'scores'}{$score_id}++;

			$panel{$panel_id}{'tourn'}       = $tourn_name." ".substr($tourn_start, 0, 4);
			$panel{$panel_id}{'tourn_id'}    = $tourn_id;
			$panel{$panel_id}{'round_id'}    = $round_id;
			$panel{$panel_id}{'entry_id'}    = $entry_id;
			$panel{$panel_id}{'tourn_start'} = substr($tourn_start,0,10);
			$panel{$panel_id}{'event_name'}  = $event_name;
			$panel{$panel_id}{'opponent'}    = $opponent_code;
			$panel{$panel_id}{'round_name'}  = $round_name;
			$panel{$panel_id}{'round_label'} = $round_name;
			$panel{$panel_id}{'round_label'} = $round_label if $round_label;

			$panel{$panel_id}{"tourn_order"} = str2time($tourn_start);

			if ( $panel{$panel_id}{"tourn_order"} >= $start_epoch ) {
				$panel{$panel_id}{'this_yr'} = 1;
			} else {
				$panel{$panel_id}{'this_yr'} = 0;
			}

			if ($round_robin) {
				$panel{$panel_id}{'event_level'} = "rr";
			} elsif ($level) {
				$panel{$panel_id}{'event_level'} = $level;
			} else {
				$panel{$panel_id}{'event_level'} = "missing";
			}

			$panel{$panel_id}{'event_id'} = $event_id;

			if ($ballot_side == 1) {
				$panel{$panel_id}{'side'} = "Aff";
				$panel{$panel_id}{'side'} = $aff_label if $aff_label;
			} elsif ($ballot_side == 2) {
				$panel{$panel_id}{'side'} = "Neg";
				$panel{$panel_id}{'side'} = $neg_label if $neg_label;
			};

			if ( $round_type eq "elim" || $round_type eq "final" ) {
				$panel{$panel_id}{'elim'} = 1;
			} else {
				$panel{$panel_id}{'elim'} = 0;
			}

			if ( $score_tag eq "winloss" ) {

				$panel{$panel_id}{'total_ballots'}++;
				my $lost;

				if ( $score_value == 1 ) {
					$panel{$panel_id}{'decision_str'}.= "W";
					$panel{$panel_id}{'ballots_won'} += $score_value;
				} else {
					$panel{$panel_id}{'decision_str'}.= "L";
					$lost = '*';
				}

				unless ($panel{$panel_id}{'judges'}{$judge_name}) {
					$panel{$panel_id}{'judges'}{$judge_name}++;
					$panel{$panel_id}{'judge_raw'} .= " ".$judge_name;
					$panel{$panel_id}{'judge_third'} .= "<span class=\"smallish third nospace nowrap\">".$judge_name.$lost." </span> ";
				}
			}

			if ($score_tag eq "point" ) {
				if ($score_student == $student1_id) {
					$panel{$panel_id}{'spkr1_pts'} .= $score_value." ";
				} elsif ($student2_id && $score_student == $student2_id) {
					$panel{$panel_id}{'spkr2_pts'} .= $score_value." ";
				}
			}

			$panel{"entry_speaker"}{$entry_id}{$student_id}++ if $student_id;

			if ($student_id) {
				unless ($student_id == $student1_id || $student_id == $student2_id) {
					$panel{$panel_id}{'third_speaker'} = $student_first." ".$student_last;
				}
			}

			$last_entry = $entry_id;
			print "<br>" if $debug;
		}

	}

	$sth->finish;
	$dbh;

    foreach my $panel_id ( keys %panel ) {

        my $dummy;

        my $this_yr="other_yr";
        $this_yr ="this_yr" if $panel{$panel_id}{'this_yr'} == 1;

		my $entry_id = $panel{$panel_id}{"entry_id"};

		if ($panel{"entry_speaker"}{$entry_id}{$student1_id} && $panel{"entry_speaker"}{$entry_id}{$student2_id}) {
			$dummy = "together";
		} elsif ($panel{"entry_speaker"}{$entry_id}{$student1_id}) {
			$dummy = "spkr1";
		} elsif ($panel{"entry_speaker"}{$entry_id}{$student2_id}) {
			$dummy = "spkr2";
		}

        my $dummy0 = $dummy;
        my $dummy1 = $dummy."-".$this_yr;
        my $dummy2 = $dummy."-".$this_yr."-".$panel{$panel_id}{'event_level'};

		my $thing = "prelim";
		$thing = "elim" if $panel{$panel_id}{'elim'} > 0;

		if ($thing eq "elim") {
			$panel{$panel_id}{'elim_level'} = $m->comp(
				"/funclib/round_elim_level.mas",
				round_id => $panel{$panel_id}{'round_id'}
			);
		}

        foreach my $dummy ($dummy0, $dummy1, $dummy2) {

			foreach my $tag ($thing, "total") {

                $summary{$dummy}{$tag."_ballots"} += $panel{$panel_id}{"total_ballots"};
                $summary{$dummy}{$tag."_ballots_won"} += $panel{$panel_id}{"ballots_won"};
                $summary{$dummy}{$tag."_rds"}++;

				my $losses = $panel{$panel_id}{"total_ballots"} - $panel{$panel_id}{"ballots_won"};

                if ( $panel{$panel_id}{"ballots_won"} > $losses) {
                    $summary{$dummy}{$tag."_wins"}++;
                } elsif ( $panel{$panel_id}{"ballots_won"} < $losses) {
                    $summary{$dummy}{$tag."_losses"}++;
                }

            }
        }
    }

	#add the levels
	foreach my $key (keys(%summary)) {
		$summary{$key}{'level'} = "Open" if (index($key, "open") != -1);
		$summary{$key}{'level'} = "Junior Varsity" if (index($key, "jv") != -1);
		$summary{$key}{'level'} = "Novice" if (index($key, "novice") != -1);
		$summary{$key}{'level'} = "Round Robin" if (index($key, "rr") != -1);
		$summary{$key}{'level'} = "Other/missing" unless $summary{$key}{'level'};
	}

	if ($debug) {
	 	my $end = time();
 		print "hash creation processing time:  "; printf("%.2f\n", $end - $start);
	}

	return \%panel, \%summary ;


</%init>
