<%args>
	$panel
</%args>
<%init>

	return unless $panel;

	Tab::Judge->columns(TEMP => "schoolname");
	Tab::Judge->columns(TEMP => "schoolcode");
	Tab::Judge->columns(TEMP => "regionname");
	Tab::Judge->columns(TEMP => "roomname");
	Tab::Judge->columns(TEMP => "regioncode");
	Tab::Judge->columns(TEMP => "districtname");
	Tab::Judge->columns(TEMP => "districtcode");
	Tab::Judge->columns(TEMP => "state");
	Tab::Judge->columns(TEMP => "started");
	Tab::Judge->columns(TEMP => "started_by_name");
	Tab::Judge->columns(TEMP => "coach_rating");

	Tab::Judge->set_sql( judges_by_panel => "
		select distinct judge.*,
			school.name as schoolname,
			school.code as schoolcode,
			region.name as regionname,
			region.code as regioncode,
			room.name as roomname,
			district.name as districtname,
			district.code as districtcode,
			chapter.state as state,
			ballot.chair as chair,
			ballot.judge_started as started,
			CONCAT(started_by.first,' ', started_by.last) as started_by_name,
			tab_rating.value tab_rating,
			rt.name coach_rating
		from (judge, panel)
			inner join ballot on ballot.judge = judge.id
			left join judge_setting as tab_rating
				on tab_rating.judge = judge.id
				and tab_rating.tag = 'tab_rating'
			left join rating
				on rating.judge = judge.id
				and rating.type  = 'coach'
			left join rating_tier rt on rt.id = rating.rating_tier
			left join school on judge.school = school.id
			left join chapter on school.chapter = chapter.id
			left join region on school.region = region.id
			left join room on panel.room = room.id
			left join district on school.district = district.id
			left join person started_by on started_by.id = ballot.started_by
		where ballot.judge = judge.id
			and ballot.panel = panel.id
			and panel.id = ?
			group by judge.id
		order by ballot.chair DESC, judge.last
	");

	return Tab::Judge->search_judges_by_panel( $panel->id );

</%init>

