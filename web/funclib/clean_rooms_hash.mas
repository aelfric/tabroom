<%args>
	$round  => undef
	$panel  => undef
	$flight => undef
</%args>
<%init>

	my $limit;

	if ($panel) {
		$limit .= " and panel.id = ".int($panel);
	} elsif ($round) {
		$limit .= " and panel.round = ".int($round);
	}

	if ($flight) {
		$limit .= " and panel.flight = ".int($flight);
	}

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select rpool_round.id
			from rpool_round, panel
		where rpool_round.round = panel.round
		$limit
		limit 1
	");

	my $fields;
	my $rpool_limit;

	$sth->execute();

	if ($sth->fetchrow_array()) {
		$fields = ", rpool_room, rpool_round";
		$rpool_limit = " and room.id = rpool_room.room
			and rpool_room.rpool = rpool_round.rpool
			and rpool_round.round = round.id ";
	}

	$sth->finish;

	$sth = $dbh->prepare("
	   select distinct room.id, room.name, room.quality, room.ada
			from room,round,tourn,timeslot, panel $fields
		where round.id = panel.round
			$limit
			and round.site = room.site
			and room.inactive != 1
			and room.deleted != 1
			and tourn.id = timeslot.tourn
			and round.timeslot = timeslot.id
			$rpool_limit

			and not exists (
				select p2.id
				from panel as p2,round as r2,timeslot as t2
				where t2.start < timeslot.end
				and t2.end > timeslot.start
				and p2.room = room.id
				and p2.round = r2.id
				and p2.flight = panel.flight
				and r2.timeslot  = t2.id
				and t2.tourn = tourn.id
				)
			and not exists (
				select stime.id from room_strike as stime
				where stime.room = room.id
				and stime.start < timeslot.end
				and stime.end > timeslot.start
				and stime.tourn = tourn.id
			)
			and not exists (
				select sevent.id from room_strike as sevent
				where sevent.event = round.event
				and sevent.room = room.id
				and sevent.tourn = tourn.id
			)
			and not exists (
				select sjudge.id
				from room_strike as sjudge, ballot
				where ballot.judge = sjudge.judge
				and ballot.panel = panel.id
				and sjudge.room = room.id
			)
			and not exists (
				select sentry.id
				from room_strike as sentry, ballot
				where ballot.entry = sentry.entry
				and ballot.panel = panel.id
				and sentry.room = room.id
			)
	");

	$sth->execute();

	my %rooms;

	while (
		my (
			$room_id, $room_name, $room_quality, $room_ada
		) = $sth->fetchrow_array()
	) {

		$rooms{$room_id}{"name"} = $room_name;
		$rooms{$room_id}{"quality"} = $room_quality;
		$rooms{$room_id}{"ada"} = $room_ada;

		$rooms{$room_id}{"string"} = $room_name;
		$rooms{$room_id}{"number"} = $room_name;

		$rooms{$room_id}{"string"} =~/(\d+)/;
		$rooms{$room_id}{"number"} =~/(\D+)/;
	}

	$sth->finish();

	return %rooms;

</%init>
