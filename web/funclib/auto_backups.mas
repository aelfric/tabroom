<%args>
	$person
	$round
</%args>
<%init>

	return unless $round;

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare('
		select
			round.id, round.name, round.label,
			event.tourn tourn_id, tourn.tz tz,
			event.id event_id, event.name event_name, event.abbr event_abbr,
			event_followers.value_text event_followers,
			tourn_followers.value_text tourn_followers
		from (round, event, tourn)

			left join event_setting event_followers
				on event_followers.event = event.id
				and event_followers.tag = "backup_followers"

			left join tourn_setting tourn_followers
				on tourn_followers.tourn = event.tourn
				and tourn_followers.tag = "backup_followers"

		where round.id = ?
			and round.event = event.id
			and event.tourn = tourn.id
	');

	$sth->execute($round->id);

	my $results = $sth->fetchall_hash();

	my $result = eval {
		return shift @{$results};
	};

	return unless ($result->{event_followers} || $result->{tourn_followers});

	my @followers;

	eval {
		push @followers, @{JSON::decode_json($result->{event_followers})};
	};

	eval {
		push @followers, @{JSON::decode_json{$result->{tourn_followers}}};
	};

	return unless @followers;

	my $ids = split(',', @followers);
	my $emails_sth = $dbh->prepare("
		select distinct person.email
		from person
		where person.id IN ($ids)
	");

	$emails_sth->execute();
	my $contacts = $emails_sth->fetchall_hash();
	my @emails;

	foreach my $person (@{$contacts}) {
		push @emails, $person->{email};
	}

	my $results_ref = $m->comp("/api/download_data.mhtml",
		round_id => $round->id,
		tourn_id => $result->{tourn_id},
		person   => $person,
		file     => 1
	);

	my ($filepath, $filename) = @{$results_ref};

	my $now = DateTime->now( time_zone => $result->{tz});

	my $realname = $result->{label} || "Round ".$result->{name};

	my $body = "\n\nBackup of ".$realname." taken at ".Tab::nicedt($now)."\n\n";

	$body .= "To restore, upload this file on the Schematics screen for the round, ";
	$body .= "under the blue Settings button on top center\n";
	$body .= "Event ".$result->{event_name}."\n";
	$body .= "Tournament ".$result->{tourn_name}."\n";

	my $round_name = $realname;
	my $event_name = $result->{event_abbr};
	my $subject = $ARGS{"subject"};

	$round_name =~ s/[\W_]//g;
	$event_name =~ s/[\W_]//g;

	my $subject_line = "$event_name $round_name Backup $subject";

	$m->comp( "/funclib/send_email.mas",
		from_string     => 'Tabroom Backups <backups@www.tabroom.com>',
		array           => \@emails,
		subject         => $subject_line,
		body            => $body,
		attachment_type => 'application/json',
		attachment_name => $filename,
		attachment_path => $filepath,
		admin           => 1
	);

	return;

</%init>
