<%args>
	$school
	$category
</%args>

<%init>

    my $dbh = Tab::DBI->db_Main();

    my $sth = $dbh->prepare("
		select judge.id, judge.person, judge.category, judge.chapter_judge,
			weekend.value, double_entry.value

		from (judge, category)

		left join chapter_judge on chapter_judge.id = judge.chapter_judge

		left join category_setting weekend
			on weekend.tag = 'weekend'
			and weekend.category = category.id

		left join category_setting double_entry
			on double_entry.tag = 'double_entry'
			and double_entry.category = category.id

		where category.tourn = ?
		and category.id = judge.category
		group by judge.id
    ");

    $sth->execute($category->tourn->id);

	my %taken_cjs = ();
	my %taken_persons = ();
	my $only_weekend = $category->setting("weekend");

    while (
		my ($judge, $person_id, $category_id, $chapter_judge, $weekend, $doubled) = $sth->fetchrow_array()
	) {

		# This unless check forbids double entering into the same category even
		# if double entry is allowed because that's just stupid.

		unless ($category_id == $category->id) {
			next if $doubled;
			next if $weekend && $only_weekend && $only_weekend != $weekend;
		}

		$taken_cjs{$chapter_judge}++ if $chapter_judge;
		$taken_persons{$person_id}++ if $person_id;
	}

	Tab::ChapterJudge->columns(TEMP => "personid");

	Tab::ChapterJudge->set_sql(active_by_school => "
		select distinct chapter_judge.*, person.id as personid
			from (school, chapter_judge)

		left join person on chapter_judge.person = person.id

		where school.id = ?
			and school.chapter = chapter_judge.chapter
			and chapter_judge.retired != 1

		order by chapter_judge.last
	");

	my @good;

	foreach my $judge (
		Tab::ChapterJudge->search_active_by_school($school->id)
	) {

		next if $taken_cjs{$judge->id};
		next if $taken_persons{$judge->personid};

		push @good, $judge;

	}

	return @good;

</%init>
