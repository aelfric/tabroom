<%args>
	$body
	$subject
	$from            => undef
	$from_string     => undef
	$to              => undef
	$array           => undef
	$accounts        => undef
	$cc_accounts     => undef
	$raw             => undef
	$cc              => undef
	$no_footer       => undef
	$attachment_type => undef
	$attachment_name => undef
	$attachment_path => undef
	$override        => undef
</%args>
<%init>

	use Data::Dumper;

	return unless ($from || $from_string);

	my $reply_to_string;

	if ($from_string eq "nsda") {

		if ($ARGS{"district"}) {

			$from_string = "NSDA ".$ARGS{"district"}->name." <districts\@www.tabroom.com>";

			if ($ARGS{"nsda_reply_to"}) {
				$reply_to_string = $ARGS{"nsda_reply_to"}->first." ".$ARGS{"nsda_reply_to"}->last." <".$ARGS{"nsda_reply_to"}->email.">";
			}

		} elsif ($from) {

			$from_string = $from->first." ".$from->last." <info\@speechanddebate.org>";

			if ($ARGS{"nsda_reply_to"}) {
				$reply_to_string = $ARGS{"nsda_reply_to"}->first." ".$ARGS{"nsda_reply_to"}->last." <".$ARGS{"nsda_reply_to"}->email.">";
			}

		} else {

			$from_string = "NSDA Nationals Registration <info\@speechanddebate.org>";
		}
	}

	unless ($from_string) {

		my $now = DateTime->now;

		$from_string = $from->first." ".$from->last." <".$now->epoch."\@www.tabroom.com>";
		$reply_to_string = $from->first." ".$from->last." <".$from->email.">";
	}

	if ($ARGS{"reply_to"}) {
		$reply_to_string = $ARGS{"reply_to"};
	}

	my @send_array = @{$array} if $array;

	if ($to) {
		push @send_array, $to->email
		unless (
			$to->no_email == 1
			&& (not defined $override)
		);
	}

	if ($raw) {
		push @send_array, split(/\,/, $raw);
	}

	if ($accounts) {
		foreach my $account (@{$accounts}) {
			next if ($account->no_email && (not defined $override));
			push @send_array, $account->email;
		}
	}

	my %seen = ();
	@send_array = grep { ! $seen{$_} ++ } @send_array;

	return unless @send_array;

	my $hostname = $Tab::hostname;

	unless ($no_footer) {

		if ($ARGS{"is_html"}) {
			$body .= "<p>-----------------------------</p>";
			$body .= "<p>You signed up for this email by registering on https://www.tabroom.com.</p>";
			$body .= "<p>If you don't want to get emails from Tabroom.com, login ";
			$body .= "to your account, click Profile on the top right, and check off \"No Emails\".";

		} else {

			$body .= "\n\n-----------------------------\n\n<br />";

			$body .= "You signed up for this email by registering on
			https://www.tabroom.com.\n\n <br />";

			$body .= "If you don't want to get emails from Tabroom.com, login
			to your account, click Profile on the top right, and check off \"No Emails\".";
		}
	}

#	Tab::log("send_email.mas: Sending tabroom email from ".$from_string." to @send_array");
	my $html;

	unless ($ARGS{"is_html"}) {
		use HTML::FromText;
		$html = text2html(
			$body,
			paras     => 1,
			metachars => 0
		);
	} else {
		$html = $body;
	}

	my $type = "text/html";
	$subject = "[TAB] ".$subject;
	my %done;

	my $notfirst;

	while (@send_array) {

		my $counter;
		my $to_string;

		while ($counter < 6 && @send_array) {
			my $to = shift @send_array;
			next unless $to;
			next if $done{$to}++;

			$to_string .= "," if $to_string;
			$to_string .= $to;
			$counter++;
		}

		# creating new "base"-object for an email
		my $msg = MIME::Lite->new(
			From       => $from_string,
			To         => $from_string,
			Bcc        => $to_string,
			Subject    => $subject,
			"Reply-To" => $reply_to_string,
			Type       => $type,
			Data       => $html."\n\n"
		);

		unless ($notfirst) {

			if ($cc_accounts) {

				my $cc_field;

				foreach my $cc (@{$cc_accounts}) {
					next if $cc->no_email && (not defined $override);
					$cc_field .= "," if $cc_field;
					$cc_field .= $cc->first." ".$cc->last." <".$cc->email.">"
				}

				$msg->add(CC => $cc_field);

			} elsif (($raw && $cc) || ( $cc && $cc ne int($cc)) ) {

				$msg->add(CC => $cc);

			} elsif ($cc) {

				$msg->add(
					CC => $cc->first." ".$cc->last." <".$cc->email.">"
				) if ($cc->email
					&& $cc->no_email != 1
					&& (not defined $override)
				);

			}

			$msg->add(CC => $from_string);
		}

		# Only works for pdfs. Should probably add a parameter so we can change attachment type.

		if ($attachment_name && $attachment_path) {
			$msg->attach (
				Type        => $attachment_type || 'application/pdf',
				Path        => $attachment_path,
				Filename    => $attachment_name,
				Disposition => 'attachment'
			);
		}

		if ($hostname eq "www.tabroom.com"
			|| $hostname eq "profiler.tabroom.com"
		) {

			eval {
				$msg->send("smtp", $Tab::smtp_server);
			};

			if ($@) {
				Tab::debuglog("Error on sending email from $from_string to $to_string: ".$@);
			}

		} else {
			Tab::debuglog("Tab hostname is $hostname.  Not sending email from $from_string to $to_string.  Reply $reply_to_string");
			Tab::debuglog("$body");
		}

		$notfirst++;
	}

	return;

</%init>
