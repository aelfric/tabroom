<%args>
	$panel => undef
	$round => undef
	$only  => undef
</%args>
<%init>

	return unless $round > 1;

	my %panels;
	my $limit;

	if ($panel > 0) {
		$limit = " and panel.id = ".$panel->id;
	}

	my $dbh = Tab::DBI->db_Main();
	my $sth;

	unless ($only eq "judges") {

		$sth = $dbh->prepare("
			select panel.id, person.email, person.phone, person.provider, entry.code

			from panel, ballot, entry_student es, student, person, entry

			where panel.round = ?
				and panel.id = ballot.panel
				and ballot.entry = es.entry
				and es.entry = entry.id
				and es.student = student.id
				and student.person = person.id
				and person.no_email != 1
				$limit
			group by person.id, panel.id
		");

		$sth->execute($round->id);

		while(
			my (
				$panel, $email, $phone, $provider, $code
			)  = $sth->fetchrow_array()
		) {

			$panels{"counter"}++;

			if ($email) {
				$panels{"in"}{$panel}{$code}{email}{$email}++;
			}

			if ($provider && $phone && (int($phone) > 10000) ) {
				$panels{"in"}{$panel}{$code}{phone}{int($phone).'@'.$provider}++;
			}
		}

		unless ($ARGS{"no_followers"}) {

			my $follower_sth = $dbh->prepare("
				select panel.id,
					person.email, person.phone, person.provider,
					entry.code

				from (panel, ballot, follower, entry, person)

				where panel.round = ?
					and panel.id = ballot.panel
					and ballot.entry = entry.id
					$limit
					and ballot.entry = follower.entry
					and person.id = follower.person
					and person.no_email != 1

				group by person.id, panel.id
			");

			$follower_sth->execute($round->id);

			while(
				my (
					$panel, $email, $phone, $provider, $code
				) = $follower_sth->fetchrow_array()
			) {

				$panels{"counter"}++;
				if ($email) {
					$panels{"in"}{$panel}{$code}{"email"}{$email}++;
				}

				if ($provider && $phone && (int($phone) > 10000)) {
					$panels{"in"}{$panel}{$code}{"phone"}{int($phone).'@'.$provider}++;
				}
			}
		}
	}

	unless ($only eq "entries") {

		$sth = $dbh->prepare("
			select panel.id, person.email, person.phone, person.provider,
				judge.code, judge.first, judge.last, ballot.chair
			from panel, ballot, judge, person
			where panel.round = ?
				and panel.id = ballot.panel
				and ballot.judge = judge.id
				and judge.person = person.id
				and person.no_email != 1
				$limit
			group by person.id, panel.id
		");

		$sth->execute($round->id);

		while(
			my (
				$panel, $email, $phone, $provider, $jcode, $first, $last, $chair
			)  = $sth->fetchrow_array()
		) {

			my $code;

			if ($ARGS{"ncfl"}) {
				$code = $jcode;
			} elsif ($ARGS{"mt"} && (not defined $chair)) {
				$code = "Scorer ".$first." ".$last;
			} else {
				$code = "Judge ".$first." ".$last;
			}

			if ($email) {
				$panels{"in"}{$panel}{$code}{email}{$email}++;
			}

			if ($provider && $phone && int($phone) > 10000) {
				$phone =~ s/[\D_]//g;
				$panels{"in"}{$panel}{$code}{phone}{int($phone).'@'.$provider}++
			}
			$panels{"counter"}++;
		}

		unless ($ARGS{"no_followers"}) {
			my $follower_sth = $dbh->prepare("
				select panel.id,
					person.email, person.phone, person.provider,
					judge.code, judge.first, judge.last, ballot.chair

				from (panel, ballot, follower, judge, person)

				where panel.round = ?
					and panel.id = ballot.panel
					and ballot.judge = follower.judge
					and ballot.judge = judge.id
					$limit
					and person.id = follower.person
					and person.no_email != 1
				group by person.id, panel.id
			");

			$follower_sth->execute($round->id);

			while(
				my (
					$panel,
					$email, $phone, $provider,
					$jcode, $first, $last, $chair
				) = $follower_sth->fetchrow_array()
			)  {

				my $code;

				if ($ARGS{"ncfl"}) {
					$code = $jcode;
				} elsif ($ARGS{"mt"} && (not defined $chair)) {
					$code = "Scorer ".$first." ".$last;
				} else {
					$code = "Judge ".$first." ".$last;
				}

				if ($email) {
					$panels{"in"}{$panel}{$code}{email}{$email}++;
				}

				if ($provider && $phone && int($phone) > 10000) {
					$panels{"in"}{$panel}{$code}{phone}{int($phone).'@'.$provider}++;
				}
				$panels{"counter"}++;
			}
		}
	}

	unless ($ARGS{"no_followers"} || $only) {

		my $school_sth = $dbh->prepare("

			select panel.id, person.email, person.phone, person.provider, entry.code, entry.name

			from (panel, ballot, follower, entry, person)

			where panel.round = ?
				and panel.id = ballot.panel
				and ballot.entry = entry.id
				and entry.school = follower.school
				and follower.person = person.id
				$limit
			group by person.id, panel.id
		");

		$school_sth->execute($round->id);

		while(
			my (
				$panel, $email, $phone, $provider, $code, $name
			) = $school_sth->fetchrow_array()
		) {

			$panels{"counter"}++;
			$code .= " ";
			$code .= $name;
			$panels{"school"}{$panel}{$code}{email}{$email}++ if $email;
		}

		my $judge_sth = $dbh->prepare("

			select panel.id, person.email, person.phone, person.provider,
				judge.first, judge.last, judge.code

			from (panel, ballot, follower, judge, person)

			where panel.round = ?
				and panel.id = ballot.panel
				and ballot.judge = judge.id
				and judge.school = follower.school
				and follower.person = person.id
				$limit
			group by follower.id, panel.id
		");

		$judge_sth->execute($round->id);

		while(
			my (
				$panel, $email, $phone, $provider, $first, $last, $jcode
			) = $judge_sth->fetchrow_array()
		) {

			$panels{"counter"}++;
			my $code;
			$code .= $jcode." " if $jcode;
			$code .= $first." ".$last;

			if ($email) {
				$panels{"school"}{$panel}{$code}{email}{$email}++;
			}
		}
	}

	return %panels;

</%init>
