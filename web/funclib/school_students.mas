<%args>
	$school
	$night     => undef
	$waitlist  => undef
	$by_result => undef
	$weekend   => undef
</%args>
<%init>


	if ($waitlist) {

		Tab::Student->set_sql(by_school_wwl =>
			"select distinct student.*,
				group_concat(entry.code) as code,
				entry.waitlist as status,
				group_concat(distinct event.abbr) as event
			from student, entry_student, entry, event
			where student.chapter = ?
			and student.id = entry_student.student
			and entry_student.entry = entry.id
			and entry.dropped != 1
			and entry.unconfirmed = 0
			and entry.event = event.id
			and event.tourn = ?
			group by student.id
			order by student.last
		");


		return Tab::Student->search_by_school_wwl($school->chapter->id, $school->tourn->id);


	} elsif ($by_result) {

		Tab::Student->set_sql( by_result => "
			select distinct student.*, chapter.name as school, chapter.id as code,
				chapter.level as event, school.region as region
			from student, score, ballot, entry, event, chapter, school
			where student.chapter = ?
			and school.tourn = ?
			and school.id = entry.school
			and entry.event = event.id
			and entry.id = ballot.entry
			and ballot.id = score.ballot
			and score.student = student.id
			and student.chapter = chapter.id
			order by student.chapter, student.last ");

		return Tab::Student->search_by_result($school->chapter->id, $school->tourn->id);


	} elsif ($weekend) {

		Tab::Student->set_sql(by_school_weekend =>
			"select distinct student.*
			from student, entry_student, entry, event_setting weekend
			where student.id = entry_student.student
			and entry_student.entry = entry.id
			and entry.school = ?
			and entry.active = 1
			and entry.event = weekend.event
			and weekend.tag = 'weekend'
			and weekend.value = ?
			order by student.last");

		return Tab::Student->search_by_school_weekend(
			$school->id,
			$weekend->id
		);

	} elsif ($ARGS{"all"}) {

		Tab::Student->set_sql(by_school => "
			select distinct student.*
			from student, entry_student, entry
			where entry.school = ?
				and entry.id = entry_student.entry
				and entry.unconfirmed != 1
				and student.id = entry_student.student
			order by student.last"
		);

		return Tab::Student->search_by_school($school->id);

	} else {


		Tab::Student->set_sql(by_school => "
			select distinct student.*
			from student, entry_student, entry, event
			where student.chapter = ?
			and student.id = entry_student.student
			and entry_student.entry = entry.id
			and entry.active = 1
			and entry.event = event.id
			and event.tourn = ?
			order by student.last");

		return Tab::Student->search_by_school($school->chapter->id, $school->tourn->id);

	}

</%init>
