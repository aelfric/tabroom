<%args>
	$person      => undef
	$ad_password => undef
	$delete      => undef
	$reset       => undef
</%args>
<%init>

	use Net::LDAP;
	use Text::Undiacritic qw(undiacritic);

	return unless $person;

	if ($Tab::ldap_enable eq "yes") {

		my $ldap = Net::LDAP->new( $Tab::ldap_server,
			port    => $Tab::ldap_port,
			version => 3,
			verify  => 'none',
			cafile  => $Tab::ldap_certs
		) or die "$@";

		my $mesg = $ldap->bind( $Tab::ldap_user, password => $Tab::ldap_pw);
		my $basedn = $Tab::ldap_dn;

		# Clear the old and the empties
		my $dn = "uid=".$person->email.",ou=users,".$basedn;

		if ($delete) {

			$mesg = $ldap->delete( $dn );
			Tab::log("Deleted user ".$person->email." in the LDAP directory.  Result: ".$mesg->code." ".$mesg->error);
			$ldap->unbind;
			return 1;

		} elsif ($reset) {

			my $search = $ldap->search(
				base   => "ou=users,".$basedn,
				filter => 'uidNumber='.$person->id
			);

			$search->code;

			if ($search->error && $search->error ne "Success") {

				Tab::log("Error in LDAP search for ".$person->id.": ".$search->error);

			} else {

				foreach my $entry ($search->entries) {
					$mesg = $ldap->delete($entry->dn);
					Tab::log("Deleting ".$entry->dn." attached to uid ".$person->id." in the LDAP directory.  Result: ".$mesg->code." ".$mesg->error);
				}
			}

			$search = $ldap->search(
				base   => "ou=users,".$basedn,
				filter => 'mail='.$person->email
			);

			$search->code;

			if ($search->error && $search->error ne "Success") {

				Tab::log("Error in LDAP search for ".$person->id.": ".$search->error);

			} else {

				foreach my $entry ($search->entries) {
					$mesg = $ldap->delete($entry->dn);
					Tab::log("Deleting ".$entry->dn." attached to uid ".$person->id." in the LDAP directory.  Result: ".$mesg->code." ".$mesg->error);
				}
			}

			$mesg = $ldap->delete( $dn );
			Tab::log("Deleted user ".$person->email." in the LDAP directory.  Result: ".$mesg->code." ".$mesg->error);
		}

		my $gn = "admins";
		$mesg = $ldap->search( base => $dn, filter => '(objectClass=*)');

		my $shell = "/bin/false";
		$shell = "/bin/bash" if $person->site_admin;

		# Palmer does not have to change if he does not wish
		$shell = "/bin/tcsh" if $person->id == 1;
		my $pass_crypt = "{crypt}".$person->password;

		#Apparently gecos hates utf8
		my $gecos = undiacritic($person->first." ".$person->last);
		$gecos =~ s/[^\w\s]//g;

		if ($mesg->entries) {

			$mesg = $ldap->modify( $dn,
				changes     => [
					replace => [uid               => $person->email],
					replace => [mail              => $person->email],
					replace => [userPrincipalName => $person->email],
					replace => [sn                => $person->last],
					replace => [givenName         => $person->first],
					replace => [cn                => $person->first." ".$person->last],
					replace => [displayName       => $person->first." ".$person->last],
					replace => [uidNumber         => $person->id],
					replace => [gidNumber         => 5000],
					replace => [employeeNumber    => $person->id],
					replace => [employeeType      => "post"],
					replace => [gecos             => $gecos],
					replace => [loginShell        => $shell ],
					replace => [homeDirectory     => "/tmp"],
					replace => [userPassword      => $pass_crypt],
					replace => [objectclass       => [ 'inetOrgPerson','posixAccount','shadowAccount' ]]
				]
			);

			Tab::log("Modified user ".$person->email." in the LDAP directory.  Result: ".$mesg->code." ".$mesg->error);

		} else {

			$mesg = $ldap->add( $dn,
				attr                  => [
					uid               => $person->email,
					mail              => $person->email,
					userPrincipalName => $person->email,
					sn                => $person->last,
					givenName         => $person->first,
					cn                => $person->first." ".$person->last,
					displayName       => $person->first." ".$person->last,
					uidNumber         => $person->id,
					gidNumber         => 5000,
					employeeNumber    => $person->id,
					employeeType      => "post",
					gecos             => $gecos,
					loginShell        => $shell,
					homeDirectory     => "/tmp",
					userPassword      => $pass_crypt,
					objectclass       => [ 'inetOrgPerson','posixAccount','shadowAccount' ]
				]
			);

			my $msg = "Added user ".$person->id." ".$person->email." from person $person ";
			$msg .= "$gecos to the LDAP directory.  Result: ".$mesg->code." ".$mesg->error;
			Tab::log($msg);

		}

		if ($person->site_admin) {

			my $second_result = $ldap->search(
				base => "ou=groups,$basedn",
				filter => "(&(objectClass=posixGroup)(cn=$gn))"
			);

			my $entry = $second_result->shift_entry;

			if ($entry) {

				my $already;

				if ($entry->get('memberuid')) {
					foreach (@{$entry->get('memberuid')}) {
						if (lc($_) eq lc($person->email)) {
							$already++;
						}
					}
				}

				unless ($already) {

					$entry->add(memberuid =>  $person->email);
					$entry->add(memberuid =>  $dn);
					my $second_mesg = $entry->update($ldap);

					my $log = "User ".$person->email." was added to admins group.  ";
					$log .= "Result: ".$second_mesg->code." ".$second_mesg->error;
					Tab::log($log);
				}
			}

			Tab::log("User ".$person->email."'s LDAP group memberships updated");
		}

		$ldap->unbind();
	}

	return 1;

</%init>
