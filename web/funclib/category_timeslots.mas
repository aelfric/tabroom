<%args>
	$category
	$undone => undef
	$prelim => undef
	$events => undef
</%args>
<%init>

	my $limit_string;

	Tab::Timeslot->columns(TEMP => "roundlabel");
	Tab::Timeslot->columns(TEMP => "roundname");

	if ($events) {

		foreach my $event_id (@{$events}) {
			$limit_string .= ',' if $limit_string;
			$limit_string .= $event_id;
		}

		if ($limit_string) {
			$limit_string = "and event.id in (".$limit_string.")";
		}
	}

	return unless $category && $category->id;

	if ($undone) {

		Tab::Timeslot->set_sql( undone_by_category => "
			select distinct timeslot.*
				from round, event, timeslot, panel, ballot, entry
			where timeslot.id = round.timeslot
				and round.event = event.id
				and event.category = ?
				and round.id = panel.round
				and panel.id = ballot.panel
				and ballot.audit = 0
				and ballot.entry = entry.id
				and panel.bye != 1
				and entry.active = 1

			$limit_string

			order by timeslot.start
			limit 1
		");

		return Tab::Timeslot->search_undone_by_category($category->id)->first;

	} elsif ($prelim) {

		Tab::Timeslot->set_sql( by_category => "
			select distinct timeslot.*
				from round, event, timeslot
			where timeslot.id = round.timeslot
				and round.event = event.id
				and event.category = ?
				$limit_string
				and round.type != 'elim'
				and round.type != 'final'
			order by timeslot.start
		");

		return Tab::Timeslot->search_by_category($category->id);


	} else {

		Tab::Timeslot->columns(TEMP => "events");

		Tab::Timeslot->set_sql( by_category => "
			select distinct timeslot.*,
				GROUP_CONCAT(distinct event.abbr) as events
			from round, event, timeslot
			where timeslot.id = round.timeslot
				and round.event = event.id
				and event.category = ?
			$limit_string
			group by timeslot.id
			order by timeslot.start
		");

		return Tab::Timeslot->search_by_category($category->id);

	}

</%init>
