<%args>
	$tourn
	$value => undef
	$tag   => undef
</%args>
<%init>

	return unless $tourn > 0;

	my $dbh = Tab::DBI->db_Main();

	$tag = $value if $value && (not defined $tag);

	my $limit = "and ss.tag = '$tag'" if $tag;

	if ($ARGS{"school_id"}) {
		$limit .= " and school.id = ".int($ARGS{school_id});
	}

	my $sth = $dbh->prepare("
		select distinct ss.id, ss.school, ss.tag, ss.value, ss.value_date, ss.value_text
		from school_setting ss, school
		where school.tourn = ?
		$limit
		and school.id = ss.school
	");

	$sth->execute($tourn->id);

	my %settings;

    while (
        my ($ss_id, $ss_school, $ss_tag, $ss_value, $ss_value_date, $ss_value_text)
		 = $sth->fetchrow_array()
    ) {

		if ($tag && $ss_tag eq $tag) {

			if ($ss_value eq "date") {
				$settings{$ss_school} = eval {
					return DateTime::Format::MySQL->parse_datetime($ss_value_date);
				};
			} elsif ($ss_value eq "json") {
				$settings{$ss_school} = eval {
					return JSON::decode_json($ss_value_text);
				};
			} elsif ($ss_value eq "text") {
				$settings{$ss_school} = $ss_value_text
			} else {
				$settings{$ss_school} = $ss_value
			}

		} else {

			if ($ss_value eq "date") {
				$settings{$ss_school}{$ss_tag} = eval{
					return DateTime::Format::MySQL->parse_datetime($ss_value_date);
				};
			} elsif ($ss_value eq "json") {
				$settings{$ss_school}{$ss_tag} = eval {
					return JSON::decode_json($ss_value_text);
				};
			} elsif ($ss_value eq "text") {
				$settings{$ss_school}{$ss_tag} = $ss_value_text
			} else {
				$settings{$ss_school}{$ss_tag} = $ss_value
			}

		}

	}

	return %settings;

</%init>
