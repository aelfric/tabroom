<%args>
	$school
	$event
</%args>
<%init>

	# Figure out waitlist status.  Return 1 if future entries should be
	# waitlisted for whatever reason.

	return unless $school;
	return unless $event;
	return unless $school->tourn->id == $event->tourn->id;

	my %event_settings =  $event->all_settings();
	my $dbh = Tab::DBI->db_Main();

	return "All entries are waitlisted pending tournament approval"
		if $event_settings{"waitlist_all"};

	if ($event_settings{"school_cap"}) {

		my $school_event_sth = $dbh->prepare("
			select
				count(entry.id)
			from entry
			where school = ?
				and event = ?
				and unconfirmed = 0
				and dropped = 0
		");

		$school_event_sth->execute($school->id, $event->id);
		my $value = $school_event_sth->fetch();

		if ($value >= $event_settings{"school_cap"}) {
			return "Each school is limited to ".$event_settings{"school_cap"}." entries";
		}
	}

	if ($event_settings{"cap"}) {

		my $event_sth = $dbh->prepare("
			select
				count(entry.id)
			from entry
				where event       = ?
				and unconfirmed = 0
				and dropped     = 0
		");

		$event_sth->execute($event->id);
		my $value = $event_sth->fetch();

		if ($value >= $event_settings{"cap"}) {
			return "The ".$event->abbr." event cap has been reached";
		}
	}

	my $tourn = $school->tourn;
	my $school_tourn_cap = $tourn->setting("school_overall_cap");

	if ($school_tourn_cap) {

		my $school_tourn_sth = $dbh->prepare("
			select
				count(entry.id)
			from (entry, event)
			where entry.school    = ?
				and entry.event       = event.id
				and event.tourn       = ?
				and entry.unconfirmed = 0
				and entry.dropped     = 0
		");

		$school_tourn_sth->execute($event->id);
		my $value = $school_tourn_sth->fetch();

		if ($value >= $school_tourn_cap) {
			return "Your tournament school entry limit of $school_tourn_cap has been reached";
		}
	}

	my $tourn_cap = $tourn->setting("overall_cap");

	if ($tourn_cap) {

		my $tourn_sth = $dbh->prepare("
			select
				count(entry.id)
			from entry, event
				where entry.event       = event.id
				and event.tourn       = ?
				and entry.unconfirmed = 0
				and entry.dropped     = 0
		");

		$tourn_sth->execute($event->id);
		my $value = $tourn_sth->fetch();

		if ($value >= $tourn_cap) {
			return "The tournament entry limit of $tourn_cap has been reached";
		}
	};

	return;

</%init>
