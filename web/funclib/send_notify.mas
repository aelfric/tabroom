<%args>
	$body
	$ids     => undef
	$to      => undef
	$array   => undef
	$from    => undef
	$subject => undef
	$debug   => undef
</%args>
<%init>
    use REST::Client;

    my $strip = HTML::Strip->new();
    $body = $strip->parse($body);
    $body =~ s/[^[:ascii:]]//g;
    $body =~ s/^\s+//;
    $body =~ s/\s+$//;

    use Text::Wrap
    $Text::Wrap::columns = 72;

	eval{
		$body =  wrap('', '', $body);
	};

	if ($ids) {

		my @ids = eval {
			return @{$ids};
		};

		unless (scalar @ids > 0) {
			@ids = split (/\,/, $ids);
		}

		my $client = REST::Client->new(
			host => $Tab::url_prefix
		);

		my %send_message = (
			ids       => \@ids,
			message   => $body,
			subject   => $subject,
			share_key => $Tab::docshare_key
		);

		my $post = JSON::encode_json(\%send_message);

		$client->POST(
			'/v1/user/push/send',
			$post,
			{
			  'Accept'        => 'application/json',
			  'Content-Type'  => 'application/json'
			}
		);

		return;

	} else {

		$from = "live\@www.tabroom.com\n" unless $from;
		$subject = "Tabroom Update\n" unless $subject;

		my @send_to = @{$array} if $array;
		my @tos;
		my $count;

		foreach my $send (@send_to) {
			$to .= "," if $to;
			$to .= $send;

			if ($count++ > 14) {
				push @tos, $to;
				undef $to;
			}
		}

		push @tos, $to if $to;

		foreach my $to (@tos) {

			if (
				( $Tab::hostname eq "www.tabroom.com"
				  || $Tab::hostname eq "profiler.tabroom.com"
				) && (not defined $debug)
			) {

				my $msg = MIME::Lite->new(
					From    => $from,
					To      => "live\@www.tabroom.com",
					Bcc     => $to,
					Subject => $subject,
					Type    => "TEXT",
					Data    => $body."\n\n"
				);

				if ($ARGS{"admin"}) {
					eval {
						$msg->send("sendmail", "/usr/sbin/sendmail -t -oi -odb");
					};
				} else {
					eval {
						$msg->send("sendmail", "/usr/sbin/sendmail -t -oi -odb");
					};
				}

			} elsif ($ARGS{"no_log"}) {

			} elsif ($body) {
				Tab::debuglog("Test sending $subject to $to.  No log is ".$ARGS{"no_log"});
				Tab::debuglog("Body: $body");
			}
		}
		Tab::eventlog("Sending ".scalar @tos." messages");
	}

	return;

</%init>
