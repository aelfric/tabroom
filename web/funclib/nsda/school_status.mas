<%args>
	$tourn
	$tourn_settings
	$school          => undef
	$reasons         => undef
	$school_settings => undef
	$fees            => undef
</%args>
<%init>

	return unless $school;
	return unless $tourn_settings->{"nsda_nats"};

	my %school_data;

	unless ($reasons) {
		my %reason = $m->comp(
			"/funclib/judgemath/nats_check_judging.mas",
			school => $school
		);

		$school_data{'judging'} = \%reason;
	}

	unless ($school_settings) {
		my %set = $school->all_settings();
		$school_settings = \%set;
	}

	my $dbh = Tab::DBI->db_Main();

	my $pending_sth = $dbh->prepare("
		select count(entry.id), entry.name, event.abbr
		from entry, event
			where entry.school = ?
			and entry.unconfirmed = 1
			and entry.event = event.id
			and not exists (
				select es.id
				from entry_setting es
				where es.tag = 'rejected_by'
				and es.entry = entry.id
			)
			and not exists (
				select es.id
				from entry_setting es
				where es.tag = 'dropped_by'
				and es.entry = entry.id
			)
			and not exists (
				select evs.id
				from event_setting evs
				where evs.event = entry.event
				and (
					evs.tag = 'supp'
					or evs.tag = 'conn'
					or evs.tag = 'stefan'
				)
			)
	");

	$pending_sth->execute($school->id);

	while (
		my ($entrycount, $entry, $event) = $pending_sth->fetchrow_array()
	) {
		$school_data{"pending"} += $entrycount;
		if ($school_data{"pending_names"}) {
			$school_data{"pending_names"} .= ",";
		}
		$school_data{"pending_names"} .= $event.": ".$entry;
	}

	if ($school_data{"pending"}) {
		$school_data{"entries"}++;
	}


	my $incomplete_sth = $dbh->prepare("
		select student.id, student.first, student.last, status.value, GROUP_CONCAT(reason.value_text)
		from (student, entry, entry_student es)
			left join entry_setting status
				on status.entry = entry.id
				and status.tag = 'status'
			left join entry_setting reason
				on reason.entry = entry.id
				and reason.tag = 'incomplete_reasons'
		where entry.school = ?
			and entry.id = es.entry
			and entry.active = 1
			and es.student = student.id

			and not exists (
				select rejected.id
				from entry_setting rejected
				where rejected.entry = entry.id
				and rejected.tag = 'rejected_by'
			)

		group by student.id
	");

	my %done;
	$incomplete_sth->execute($school->id);

	while (
		my (
			$student_id, $first, $last, $status, $reason
		) = $incomplete_sth->fetchrow_array()
	) {

		next unless $reason;
		next if $status eq "complete";
		next if $done{$student_id}++;


		$reason =~ s/,/-/g;
		my @reasons = split(/\-/, $reason);

		$school_data{"entry_reasons"} .= "</div>" if $school_data{"entry_reasons"};
		$school_data{"entry_reasons"} .= '<div class="full padno marless">';
		$school_data{"entry_reasons"} .= '<span class="semibold bluetext padbottomless martopless">'.$first.' '.$last.'</span>  ';

		my %used;
		foreach my $reason (@reasons) {

			if (index($reason, "Vaccine") != -1) {
				if (index($reason, $last) == -1) {
					next;
				}
			}

			$reason =~ s/^\s+//;
			$reason =~ s/\s+$//;
			next if $used{$reason}++;
			$school_data{"entry_reasons"} .= '<p class="reason">'.$reason.'</p>';
		}
	}

# 	Forms no longer required for uploads  CLP 24 April 2021
#
#	my $usa_wsdc_sth = $dbh->prepare("
#		select student.id, student.first, student.last, entry.code
#			from entry, event, entry_student es, student, event_setting usa
#		where student.chapter = ?
#			and student.id  = es.student
#			and es.entry	= entry.id
#			and entry.event = usa.event
#			and usa.tag	 = 'usa_wsdc'
#			and entry.event = event.id
#			and event.tourn = ?
#	");
#
#	$usa_wsdc_sth->execute($school->chapter->id, $tourn->id);
#
#	my %forms = eval{
#		return %{JSON::decode_json($school_settings->{'release_forms'})};
#	};
#
#	while (
#		my (
#			$student_id, $student_first, $student_last, $entry_code
#		) = $usa_wsdc_sth->fetchrow_array()
#	) {
#
#		unless (%forms) {
#		}
#
#		next if $forms{$student_id};
#		$school_data{"entry_reasons"} .= "</div>" if $school_data{"entry_reasons"};
#		$school_data{"entry_reasons"} .= '<div class="full padno marless padtop">';
#		$school_data{"entry_reasons"} .= '<span class="semibold bluetext padbottomless">'.$student_first.' '.$student_last.'</span>  ';
#		$school_data{"entry_reasons"} .= "<br />&nbsp; Missing release forms for World Schools (".$entry_code.")";
#	}
#
#	$usa_wsdc_sth->finish();

	my $unlinked_sth = $dbh->prepare("
		select
			entry.code, event.abbr, student.id, student.first, student.last

		from entry, entry_student es, student, event, chapter, school

			left join school_setting contact_name
				on contact_name.school = school.id
				and contact_name.tag = 'contact_name'

			left join school_setting contact_email
				on contact_email.school = school.id
				and contact_email.tag = 'contact_email'

		where event.tourn = ?
			and event.id = entry.event
			and entry.active = 1
			and entry.id = es.entry
			and es.student = student.id
			and student.chapter = chapter.id
			and chapter.id = school.chapter
			and school.id = ?

			and not exists (
				select person.id
				from person
				where person.id = student.person
			)

			group by student.id
	");

	$unlinked_sth->execute($tourn->id, $school->id);
	while (
		my (
			$entry_code, $event_abbr, $student_id, $student_first, $student_last,
		) = $unlinked_sth->fetchrow_array()
	) {

		$school_data{"entry_reasons"} .= "</div>" if $school_data{"entry_reasons"};
		$school_data{"entry_reasons"} .= '<div class="full nospace">';
		$school_data{"entry_reasons"} .= "<a target='_blank' href='/user/chapter/student_edit.mhtml?student_id=".$student_id."' class='white biggish link-underline marno'>";
		$school_data{"entry_reasons"} .= '<span class="semibold bluetext inline">'.$student_first.' '.$student_last.'</span>  ';
		$school_data{"entry_reasons"} .= "is not linked to a Tabroom account </a>";
	}

	$school_data{"entry_reasons"} .= "</div>" if $school_data{"entry_reasons"};

	if ($school_data{"entry_reasons"}) {
		$school_data{"entries"}++;
	}

	unless ($fees) {
		my @fee = $m->comp("/funclib/school_fees.mas",
			school => $school,
			all	=> 1
		);
		$fees = \@fee;
	}

	$school_data{"money_due"} = shift @{$fees};
	$school_data{"felines"} = shift @{$fees};
	$school_data{"totals"} = shift @{$fees};

	if ($school_data{"money_due"} < 0) {
		delete $school_data{"money_due"};
	}

	if ($ARGS{"return"}) {
		return \%school_data;
	}

	$school_settings->{"judging_unmet"} =~ s/\n/<br\/>/g;

	my %measure;

	if ($ARGS{"smol"}) {
		$measure{"header"}    = "fifth";
		$measure{"status"}    = "twenty";
		$measure{"icon"}      = "fa-2x";
		$measure{"iconspace"} = "nospace twenty";
		$measure{"reason"}    = "seventenths padvertless";
	} else {
		$measure{"header"} = "eighth padsetting";
		$measure{"status"} = "eighth centeralign";
		$measure{"icon"}   = "fa-2x";
		$measure{"reason"} = "threequarters";
	}

</%init>

%	unless ($ARGS{"smol"}) {

		<h5 class="padtop">Registration Status</h5>

		<div class="centeralign nospace">
			<span class="ninetenths leftalign">
				<div class="yellowrow smallish semibold padvertno marverto bluebordertop">
					<span class='<% $measure{"header"} %>'>
						Area
					</span>

					<span class='<% $measure{"reason"} %> nospace'>
						Issues
					</span>

					<span class='<% $measure{"status"} %> centeralign <% $measure{"iconspace"} %>'>
						Status
					</span>
				</div>
%	}

			<div class="odd">
				<div class="full ltborderbottom marno">
					<span class='<% $measure{"header"} %> semibold bluetext'>
						<span class="halfspacer"></span>
						Entries
					</span>

					<span class='<% $measure{"reason"} %> nospace italic'>
%						unless ($school_data{"entry_reasons"} || $school_data{"pending"}) {
							Entry information is complete
%						} else {
							Your registration is not complete due to the issues listed below
%						}
					</span>

					<span class='<% $measure{"status"} %> centeralign <% $measure{"iconspace"} %>'>
%						unless ($school_data{"entry_reasons"} || $school_data{"pending"}) {
							<span class="fa <% $measure{"icon"} %> fa-check greentext"></span>
%						} else {
							<span class="fa <% $measure{"icon"} %> fa-times redtext"></span>
%						}
					</span>
				</div>

%				if ($school_data{"entry_reasons"} || $school_data{"pending"}) {
					<div class='full nospace padvert'>
						<span class='<% $measure{"header"} %>'>
						</span>

						<span class='<% $measure{"reason"} %> nospace'>
%							if ($school_data{"pending"}) {
								<% $school_data{"pending"} %> slot<% $school_data{"pending"} > 1 ? "s" : ""%> needs acceptance/rejection
								(<% $school_data{"pending_names"} %>)
%							}

%							if ($school_data{"entry_reasons"}) {
								<% $school_data{"entry_reasons"} %>
%							}

						</span>
					</div>
%				}
			</div>

			<div class="odd">
				<div class="full ltborderbottom marno">
					<span class='<% $measure{"header"} %> semibold bluetext'>
						<span class="halfspacer"></span>
						Judging
					</span>

					<span class='<% $measure{"reason"} %> nospace italic'>
%						unless ($school_data{"judging"}{"nope"}) {
							Judging information is complete
%						} else {
							Your registration is not complete due to the issues listed below
%						}
					</span>

					<span class='<% $measure{"status"} %> centeralign <% $measure{"iconspace"} %>'>
%						if ($school_data{"judging"}{"nope"}) {
							<span class="fa <% $measure{"icon"} %> fa-times redtext"></span>
%						} else {
							<span class="fa <% $measure{"icon"} %> fa-check greentext"></span>
%						}
					</span>
				</div>

%				if ($school_data{"judging"}{"nope"}) {

					<div class='full nospace padvert'>

						<span class='<% $measure{"header"} %> semibold bluetext'>
						</span>

						<span class='<% $measure{"reason"} %> nospace'>
<%perl>
							my $string;
							my %judges;

							if ($school_settings->{"judging_unmet"}) {

								$school_settings->{"judging_unmet"} =~ s/<br \/>/<br\/>/g;
								my $current;
								my @lines = split(/<br\/>/, $school_settings->{"judging_unmet"});

								foreach my $line (@lines) {

									if (index($line, "incomplete") != -1) {

										my ($first, $last) = split(/\:/, $line);
										$current = $first;
										push @{$judges{$current}}, $last;

									} elsif ($current) {

										foreach my $tich (split(/<br\/>/, $line)) {
											push @{$judges{$current}}, $tich;
										}

									} else {
										$m->print("<p class='reason'>".$line."</p>");
									}
								}
							}
</%perl>

%							foreach my $judge (sort {$a cmp $b} keys %judges) {
								<div class="full padvertless marno semibold bluetext">
									<span class="third nospace">
										<% $judge %>
									</span>
									<span class="twothirds nospace">
%										foreach my $line (@{$judges{$judge}}) {
											<div class="full padvertless ltborderbottom nospace smallish italic">
												<% $line %>
											</div>
%										}
									</span>
								</div>
%							}
						</span>
					</div>
%				}
			</div>

			<div class="odd">

				<span class='<% $measure{"header"} %> semibold bluetext'>
					<span class="halfspacer"></span>
					Fees
				</span>

				<span class='<% $measure{"reason"} %> nospace <% $school_data{"money_due"} ? "semibold" : "italic" %>'>
%					if ($school_data{"money_due"}) {
						&#x24;<% $school_data{"money_due"} %> still owed (
%							if ($school_data{"totals"}->{entry_fees}) {
%								if ($school_data{"totals"}->{concessions} || $school_data{"totals"}->{payments}) {
									&#x24;<% $school_data{"totals"}->{entry_fees} %> in entry fees
%								}
%							}
%							if ($school_data{"totals"}->{concessions}) {
								&#x24;<% $school_data{"totals"}->{concessions} %> in concessions
%							}
%							if ($school_data{"totals"}->{payments}) {
								&#x24;<% $school_data{"totals"}->{payments} * -1 %> paid
%							}
						)
%					}
				</span>

				<span class='<% $measure{"status"} %> centeralign <% $measure{"iconspace"} %>'>
%					if ($school_data{"money_due"}) {
						<span class="fa <% $measure{"icon"} %> fa-times redtext"></span>
%					} else {
						<span class="fa <% $measure{"icon"} %> fa-check greentext"></span>
%					}
				</span>
			</div>

%		unless ($ARGS{"smol"}) {
			</span>
		</div>
%	}

%	return;
