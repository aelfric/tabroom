<%args>
	$tourn
</%args>
<%init>

	my ($jsonref, $raw) = $m->comp("api_client.mas",
		path => "/reports/nats-appearances"
	);

	my $dbh = Tab::DBI->db_Main();

	my $exists_sth = $dbh->prepare("
		select chapter.id, cs.id
		from chapter
			left join chapter_setting cs
			on cs.chapter = chapter.id
			and cs.tag = 'nats_appearances'
		where chapter.nsda = ?
	");

	my $update_sth = $dbh->prepare("
		update chapter_setting set value = ? where id = ?
	");

	my $insert_sth = $dbh->prepare("
		insert into chapter_setting (value, chapter, tag) values (?, ?, 'nats_appearances');
	");

	my $counter;

	foreach my $school_ref (@{$jsonref->{data}}) {

		next unless $school_ref->{"Appearances"} > 0;

		$exists_sth->execute($school_ref->{"school_id"});

		while (
			my ($chapter_id, $setting_id) = $exists_sth->fetchrow_array()
		) {
			if ($setting_id) {
				$update_sth->execute($school_ref->{"Appearances"}, $setting_id);
			} elsif ($chapter_id) {
				$insert_sth->execute($school_ref->{"Appearances"}, $chapter_id);
			}
		}

		$exists_sth->finish();
		$insert_sth->finish();
	}

    my $year = $tourn->start->year;

    my $start_year = $year - 4;
    my $start_date = $start_year."-05-01 00:00:00";
    my $end_date = $start_year."-05-01 00:00:00";

    my $sth = $dbh->prepare("
        select
            student.id, student.first, student.last, student.nsda,
            chapter.id, chapter.nsda, chapter.name, chapter.state,
            count(distinct tourn.id),
            GROUP_CONCAT( CONCAT(tourn.start, ': ', event.abbr) SEPARATOR '\t')

        from (student, entry_student, entry, event, tourn, chapter, tourn_setting nsda_nats)

        where tourn.start > ?
            and tourn.id = nsda_nats.tourn
            and nsda_nats.tag = 'nsda_nats'
            and tourn.id = event.tourn
            and event.id = entry.event
            and entry.id = entry_student.entry
            and entry_student.student = student.id
            and entry.unconfirmed = 0
            and student.chapter = chapter.id
        group by student.id
        order by student.last, tourn.start
    ");

    $sth->execute($start_date);

	$exists_sth = $dbh->prepare("
		select student.id, ss.id
		from student
			left join student_setting ss
			on ss.student = student.id
			and ss.tag = 'nats_appearances'
		where student.nsda = ?
	");

	$update_sth = $dbh->prepare("
		update student_setting set value = ? where id = ?
	");

	$insert_sth = $dbh->prepare("
		insert into student_setting (value, student, tag) values (?, ?, 'nats_appearances');
	");

	my %counter;
	my %ids;

	while (
		my (
			$student_id, $student_first, $student_last, $student_nsda,
			$chapter_id, $chapter_nsda, $chapter_name, $chapter_state,
			$count,
			$events
		) = $sth->fetchrow_array()
	) {
		$counter{$student_nsda} += $count;
		$ids{$student_nsda}{$student_id}++;

		if ($student_nsda == 10776899) {
			Tab::debuglog("Claire count is $count and events $events");
		}
	}

	foreach my $student_nsda (keys %counter) {

		my $count = $counter{$student_nsda};

		$exists_sth->execute($student_nsda);


		while (
			my ($student_id, $setting_id) = $exists_sth->fetchrow_array()
		) {

			if ($setting_id) {
				$update_sth->execute($count, $setting_id);
			} elsif ($student_id) {
				$insert_sth->execute($count, $student_id);
			}
		}

		$exists_sth->finish();
	}

	$dbh->disconnect();

	return;

</%init>
