<%args>
	$district_id => undef
</%args>
<%init>

	my ($districts_ref, $raw) = $m->comp("api_client.mas",
		path => "/districts?realm=hs&full=true"
	);

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("update chapter set district = ? where nsda = ?");
	my $undo_sth = $dbh->prepare("update chapter set district = 0 where district = ?");

	if ($district_id) {

		my ($members_array, $junque) = $m->comp(
			"/funclib/nsda/api_client.mas",
			path => "/districts/".$district_id."/schools"
		);

		if ($members_array) {

			$undo_sth->execute($district_id);

			foreach my $member_ref (@{$members_array}) {
				$sth->execute($district_id, $member_ref->{'school_id'});
			}
		}

	}

	foreach my $district_ref (@{$districts_ref}) {

		next if $district_id && $district_id != $district_ref->{id};

		my $district = Tab::District->retrieve($district_ref->{id});

		if ($district_ref->{realm} eq "hs") {
			$district_ref->{realm} = "NSDA";
		} elsif ($district_ref->{realm} eq "ms") {
			$district_ref->{realm} = "MID";
		}

		if ($district) {

			$district_ref->{name} =~ s/\([^)]+\)//g;

			$district->name($district_ref->{name});
			$district->location($district_ref->{state});
			$district->level($district_ref->{level});
			$district->realm($district_ref->{realm});

			$district->update();

		} else {

			$district = Tab::District->create({
				id       => $district_ref->{id},
				code     => $district_ref->{id},
				name     => $district_ref->{name},
				location => $district_ref->{state},
				level    => $district_ref->{level},
				realm    => $district_ref->{realm},
			});
		}

		my ($leaders_ref, $lead_raw) = $m->comp('api_client.mas',
			path => "/districts/".$district->{id}."/leaders"
		);

		my %permissions =
			map {$_->person->nsda => $_}
			(
				Tab::Permission->search( district => $district->id, tag => "member"),
				Tab::Permission->search( district => $district->id, tag => "chair")
			);


		foreach my $leader (@{$leaders_ref}) {

			$leader->{position} = lc($leader->{position});
			next if $leader->{position} eq "alternate";

			if ($permissions{$leader->{"person_id"}}) {

				my $perm = $permissions{$leader->{"person_id"}};
				$perm->tag($leader->{position});
				$perm->update();
				delete $permissions{$leader->{"person_id"}};

			} else {

				my $person = Tab::Person->search(
					nsda => $leader->{"person_id"}
				)->first;

				unless ($person) {

					$person = $m->comp("user_import.mas",
						nsda_id => $leader->{"person_id"}
					);
				}

				if ($person eq int($person)) {
					Tab::Permission->create({
						person   => $person->id,
						tag      => $leader->{position},
						district => $district->id
					});
				} else {
					Tab::log("Could not create Tabroom account for ".$leader->{"person_id"}." from district ".$district->name.": $person");
				}
			}
		}

		foreach my $key (keys %permissions) {
			$permissions{$key}->delete();
		}

	}

	$m->comp('/api/districtize_chapters.mhtml', district_id => $district_id, return => 1);

</%init>
