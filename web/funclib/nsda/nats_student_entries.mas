<%args>
	$student
	$tourn
	$limit => undef
</%args>
<%init>

	my %entries;

	my @types = ("supp", "stefan");

	my $sql_stanzas;
	my $sql_result;

	Tab::Entry->columns( TEMP => "online_hybrid");
	Tab::Entry->columns( TEMP => "event_hybrid");

	foreach my $type (@types) {

		Tab::Entry->columns( TEMP => $type);

		$sql_stanzas .= "
			left join event_setting $type
			on $type.event = entry.event
			and $type.tag = '$type'
		";

		$sql_result .= ", " if $sql_result;
		$sql_result .= "$type.value  $type";
	}

	my $status_limit;

	if ($limit eq "unconfirmed") {
		$status_limit = " and entry.unconfirmed = 1 ";
	} elsif ($limit eq "all") {
		undef $status_limit;
	} else {
		$status_limit = " and entry.unconfirmed = 0 ";
	}

	unless ($ARGS{"include_drops"}) {
		$status_limit .= " and entry.dropped = 0 ";
	}

	Tab::Entry->set_sql( member => "

		select entry.*,
			online_hybrid.value as online_hybrid,
			event_hybrid.value as event_hybrid,
			$sql_result

		from (entry, entry_student, student, event)

			left join entry_setting online_hybrid
				on online_hybrid.entry = entry.id
				and online_hybrid.tag = 'online_hybrid'

			left join event_setting event_hybrid
				on event_hybrid.event = event.id
				and event_hybrid.tag = 'online_hybrid'

			$sql_stanzas

		where student.nsda = ?
			and student.id = entry_student.student
			and entry_student.entry = entry.id
			and entry.event = event.id
			$status_limit
			and event.tourn = ?
	");

	if ($student->nsda > 0) {

		foreach my $entry (
			Tab::Entry->search_member($student->nsda, $tourn->id)
		) {

			my $done;
			$entries{$entry->event->id} = $entry;

			foreach my $type (@types) {
				if ($entry->$type) {
					push @{$entries{$type}}, $entry;
					$done++;
				}
			}

			if ($entry->event_hybrid) {
				push @{$entries{"hybrid"}}, $entry;
			} elsif ($entry->supp) {
				push @{$entries{"realsupp"}}, $entry;
			} else {
				push @{$entries{"real"}}, $entry;
			}

			unless ($done) {
				push @{$entries{"main"}}, $entry;
				$done++;
			}

			if ($entry->online_hybrid) {
				$entries{'online'}++;
			}
		}

	} else {

		Tab::Entry->set_sql( student => "

			select entry.*,
				$sql_result

			from (entry, entry_student, student, event)
				$sql_stanzas

			where student.id = ?
				and student.id = entry_student.student
				and entry_student.entry = entry.id
				and entry.event = event.id
				$status_limit
				and event.tourn = ?
		");

		foreach my $entry (
			Tab::Entry->search_student($student->id, $tourn->id)
		) {

			my $done;
			$entries{$entry->event->id} = $entry;

			foreach my $type (@types) {
				if ($entry->$type) {
					push @{$entries{$type}}, $entry;
					$done++;
				}
			}

			if ($entry->online_hybrid) {
				$entries{'online'}++;
			}

			unless ($done) {
				push @{$entries{"main"}}, $entry;
				$done++;
			}
		}
	}

	return %entries;

</%init>
