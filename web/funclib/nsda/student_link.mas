<%args>
	$person
	$student_id => undef
	$student    => undef
	$nsda       => undef
</%args>
<%init>

	return unless $student;
	return unless $nsda > 0;

	my $now = DateTime->now();

	my $student_person;

	my $dbh = Tab::DBI->db_Main();
	my $null_sth = $dbh->prepare("update person set nsda = NULL where nsda = ?");

	unless ($student) {
		$student = Tab::Student->retrieve($student_id);
	}

	unless ($student > 0) {
		return;
	}

	if ($nsda != $student->nsda) {

		$student->nsda($nsda);
		$student->update();

		my $student_person = $student->person;

		if ($student_person && $student_person->nsda != $nsda) {
			$student_person = $student->person;
			$null_sth->execute($nsda);
			$student_person->nsda($nsda);
			$student_person->update();
		} elsif (not defined $student_person) {
			$student_person = Tab::Person->search(nsda => $nsda)->first;

			if ($student_person > 0) {
				$m->comp("/funclib/student_link.mas",
					student => $student,
					person  => $person,
					target  => $student_person,
				);
			}
		}
	}

	my $membership = $m->comp("/funclib/nsda/membership.mas",
		student => $student,
		silent  => $ARGS{"silent"}
	);


	if (not defined $membership->{"person_id"}) {

		Tab::log("NULL MEMBERSHIP FOUND FOR student ID $student NSDA ".$student->nsda);
		foreach my $key (keys %{$membership}) {
			Tab::log("Key $key value ".$membership->{$key});
		}
		$null_sth->execute($nsda);
		$student->nsda(0);
	}

	if ($membership->{'email'} && (not defined $student_person)) {
		$student_person = Tab::Person->search(email => $membership->{"email"})->first;
		if ($student_person) {
			$student->person($student_person->id);
		}
	}

	if (
		$membership->{"grad_year"} > $now->year
		&& $membership->{"grad_year"} != $student->grad_year
	) {
		$student->grad_year($membership->{"grad_year"});
	}

	Tab::ChangeLog->create({
		tag         => "link",
		chapter     => $student->chapter->id,
		person      => $person,
		description => "Student ".$student->id." ".$student->first." ".$student->last." linked to their NSDA account ".$ARGS{message},
	});

	$student->update();

	return $student;

</%init>
