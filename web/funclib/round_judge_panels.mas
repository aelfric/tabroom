<%args>
	$round
	$event  => undef
	$flight => 1
</%args>
<%init>

	use Math::Round;

	my $dbh = Tab::DBI->db_Main();
	$flight = 1 if $flight < 1;

	$event = $round->event unless $event;
	my $category = $event->category;

	my $sth = $dbh->prepare("
		select judge.id, panel.id, panel.bracket, event.abbr
		from panel, ballot, judge, event, round
		where round.timeslot = ? 
		and event.category = ? 
		and round.event = event.id
		and panel.round  = round.id
		and panel.id = ballot.panel
		and ballot.judge = judge.id
		and panel.flight = ? 
		group by judge.id
	");

	my $aff_sth = $dbh->prepare("
		select judge.id, rating.rating_tier, 
			round(rating.percentile,0), panel.id, rating.entry, rating.id

		from panel, ballot, judge, rating, round, event
		where round.timeslot = ?
		and event.category = ? 
		and round.event = event.id
		and panel.round = round.id
		and panel.id = ballot.panel
		and ballot.judge = judge.id
		and panel.flight = ? 
		and ballot.entry = rating.entry
		and rating.judge = ballot.judge
		and ballot.side = 1
	");

	my $neg_sth = $dbh->prepare("
		select judge.id, rating.rating_tier, round(rating.percentile,0)
		from panel, ballot, judge, rating, round, event
		where round.timeslot = ? 
		and event.category = ? 
		and round.event = event.id
		and panel.round = round.id
		and panel.id = ballot.panel
		and ballot.judge = judge.id
		and panel.flight = ? 
		and ballot.entry = rating.entry
		and rating.judge = ballot.judge
		and ballot.side = 2
	");

	my $other_room_sth = $dbh->prepare("
		select panel.id, ballot.judge, room.name, panel.flight
		from panel
		left join ballot on ballot.panel = panel.id
		left join room on panel.room = room.id
		where panel.round = ? 
		group by panel.id, ballot.judge
	");

	my $other_event_sth = $dbh->prepare("
		select panel.id, ballot.judge, event.abbr, round.name, round.label, room.name
		from (panel, round, event, ballot, timeslot, timeslot t2)
		left join room on room.id = panel.room
		where t2.id  = ?
		and t2.start < timeslot.end
		and t2.end > timeslot.start
		and round.timeslot = timeslot.id
		and round.event = event.id
		and round.id != ?
		and event.category = ?
		and round.id = panel.round
		and panel.id = ballot.panel
	");

	$sth->execute( 
		$round->timeslot->id,
		$category->id, 
		$flight
	);
	$aff_sth->execute(
		$round->timeslot->id,
		$category->id,
		$flight,
	);
	$neg_sth->execute(
		$round->timeslot->id,
		$category->id,
		$flight
	);

	$other_room_sth->execute(
		$round->id
	);

	$other_event_sth->execute(
		$round->timeslot->id,
		$round->id,
		$category->id
	);

	my @rating_tiers = $category->rating_tiers;

	my %tier_name = ();

	foreach my $tier (@rating_tiers) { 
		$tier_name{$tier->id} = $tier->name;
	}

	my %judge_panel;
	my @judges;

	while (
		my ($judge, $panel, $bracket, $event)  
		= $sth->fetchrow_array() 
	) {
		$judge_panel{$judge}{"bracket"} = $bracket." " unless $round->type eq "elim";
		$judge_panel{$judge}{"event"} = $event." ";
		push @judges, $judge;
	}

	my %judge_rating = ();

	while (
		my ($judge, $tier, $percentile, $panel, $entry, $rating)  
		= $aff_sth->fetchrow_array() 
	) {
		if ($percentile) {
			$percentile = .5 if $percentile > 0 && $percentile < .5;
			$percentile = round($percentile);

			foreach (length($percentile) .. 3) { 
				$percentile = "&nbsp;".$percentile;
			}
		}

		$judge_rating{$judge} = round($percentile) if $percentile;
		$judge_rating{$judge} = $tier_name{$tier} if $tier;
	}

	foreach my $judge (@judges) { 
		if ($judge_rating{$judge}) { 
			$judge_panel{$judge}{"prefs"} .= $judge_rating{$judge}."-";
		} else { 
			$judge_panel{$judge}{"prefs"} .= "x-";
		}
	}

	%judge_rating = ();

	while (
		my ($judge, $tier, $percentile)  
		= $neg_sth->fetchrow_array()
	) {

		if ($percentile) {
			$percentile = .5 if $percentile > 0 && $percentile < .5;
			$percentile = round($percentile);
			foreach (length($percentile) .. 4) { 
				$percentile = $percentile."&nbsp;"
			}

			$judge_rating{$judge} = $percentile;
		}
		$judge_rating{$judge} = $tier_name{$tier} if $tier;
	}

	foreach my $judge (@judges) { 

		if ($judge_rating{$judge}) { 
			$judge_panel{$judge}{"prefs"} .= $judge_rating{$judge};
		} else { 
			$judge_panel{$judge}{"prefs"} .= "x";
		}
	}

	while (
		my ($panel, $judge, $room, $flight) 
		= $other_room_sth->fetchrow_array()
	) {
		$judge_panel{$judge}{"other_room"} = $room;
		$judge_panel{$judge}{"other_flight"} = $flight;
	}

	while (
		my ($panel, $judge, $event, $roundname, $roundlabel, $room)
		= $other_event_sth->fetchrow_array()
	) {
		$judge_panel{$judge}{"other_event"} = $event;
		$judge_panel{$judge}{"other_room"} = $room;
		$judge_panel{$judge}{"other_round"} = $roundname;
		$judge_panel{$judge}{"other_round"} = $roundlabel if $roundlabel;
	}

	return %judge_panel;

</%init>

