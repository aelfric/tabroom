<%args>
	$school_id => undef
	$school => undef
</%args>
<%init>

	if ($school) {
		$school_id = $school->id;
	} elsif ($school_id) {
		$school_id = int($school_id);
	} else {
		return;
	}

	Tab::Person->columns(TEMP => "entry");
	Tab::Person->columns(TEMP => "diamonds");

	Tab::Person->set_sql( school_coaches => "
		select distinct person.*,
			GROUP_CONCAT(entry.name) entry,
			diamonds.value diamonds
		from (person, entry, entry_setting coach)

			left join person_setting diamonds
				on diamonds.tag = 'diamonds'
				and diamonds.person = person.id

		where entry.school  = ?
			and entry.id    = coach.entry
			and coach.tag   = 'coach_points'
			and coach.value = person.nsda
		group by person.nsda
		order by person.last
	");

	if ($ARGS{"text"}) {

		my $text;

		foreach my $person (
			Tab::Person->search_school_coaches($school_id)
		) {
			$text .= ", " if $text;
			$text .= $person->first." ";
			$text .= $person->middle." " if $person->middle;
			$text .= $person->last;
		}

		return $text;

	} else {

		my @coaches = Tab::Person->search_school_coaches($school_id);

		my $extra = eval {
			my $setting = Tab::SchoolSetting->search( school => $school_id, tag => "tbook_coach_ids")->first;
			return JSON::decode_json($setting->value_text);
		};

		foreach my $extra_id (sort keys %{$extra}) {
			my $coach = Tab::Person->retrieve($extra_id);
			push @coaches, $coach if $coach;
		}

		my %seen;
		@coaches = grep { ! $seen{$_->id} ++ } @coaches;
		return @coaches;

	}
</%init>
