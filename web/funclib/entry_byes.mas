<%args>
	$event    => undef
	$round    => undef
	$all      => undef
	$last     => undef
	$type     => undef
	$forfeits => undef
	$public   => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my $limit;

	if ($last && $round) {
		$limit  = " and round.name = ".$round->name." ";
	} elsif ($round) {
		$limit .= " and round.name <= ".$round->name." ";
	}

	if ($all) {

	} elsif ($type) {
		$limit  .= " and round.type = '$type'";
	} else {
		$limit .= ' and round.type != "elim" and round.type != "final" ' unless $all;
	}

	if ($public && int($public) > 0) {
		$limit .= ' and round.post_primary >= '.int($public);
	}

	my %entry_byes = ();
	my %entry_forfeits = ();

	my $bye_sth = $dbh->prepare("
		select entry.id, ballot.bye, panel.bye, score.tag, score.value, ballot.forfeit
		from round
		left join panel on panel.round = round.id
		left join ballot on ballot.panel = panel.id
		left join entry on entry.id = ballot.entry
		left join score
			on score.ballot = ballot.id
			and score.tag = 'winloss'
		where round.event = ?
		$limit
		group by ballot.id
		order by ballot.entry
	");

	$bye_sth->execute(int($event));

	while(
		my ($entry_id, $bbye, $pbye, $tag, $value, $forfeit)
		= $bye_sth->fetchrow_array()
	) {

		next unless ($bbye > 0 || $pbye > 0 || $forfeit > 0);

		if ($tag && $tag eq "winloss") {
			$entry_byes{$entry_id}++ if $value == 1 && ($pbye || $bbye);
		} elsif ($pbye) {
			$entry_byes{$entry_id}++;
		} elsif ($bbye) {
			$entry_byes{$entry_id}++;
		} elsif ($forfeit) {
			$entry_forfeits{$entry_id}++;
		}
	}

	return (\%entry_byes, \%entry_forfeits) if $forfeits;

	return %entry_byes;

</%init>
