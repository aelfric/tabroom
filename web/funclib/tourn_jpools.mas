<%args>
	$tourn
	$limit      => undef
	$categories => undef
</%args>
<%perl>

	my $setting_string;

	if ($limit eq "registrant"
		|| $limit eq "ncfl_prelims"
		|| $limit eq "ncfl_elims"
	) {
		$setting_string = " and exists (
			select jpool_setting.id
				from jpool_setting
			where jpool_setting.jpool = jpool.id
				and jpool_setting.tag IN ('signups', 'registrant'))
		";
	}

	if ($limit eq "ncfl_elims") {
		$setting_string .= " and not exists (
			select jpool_setting.id
			from jpool_setting
			where jpool_setting.jpool = jpool.id
			and jpool_setting.tag = 'event_based'
		) ";
	}

	if (
		$limit eq "event_pools"
		|| $limit eq "ncfl_prelims"
	) {
		$setting_string .= " and exists
			(select jpool_setting.id from jpool_setting
				where jpool_setting.jpool = jpool.id
				and jpool_setting.tag = 'event_based'
			)";
	}

	if ($limit eq "not_event_pools") {
		$setting_string = " and not exists (
			select jpool_setting.id from jpool_setting
				where jpool_setting.jpool = jpool.id
			and jpool_setting.tag = 'event_based'
		)";
	}

	if ($categories) {
		my $ids;
		foreach my $cat (@{$categories}) {
			$ids .= "," if $ids;
			$ids = int($cat);
		}
		$setting_string .= "and jpool.category IN ( $ids ) "
	}

	Tab::JPool->columns(TEMP => "judgecount");

	Tab::JPool->set_sql( by_tourn => "
       	select distinct jpool.*, count(jpool_judge.judge) as judgecount
		from (jpool, category)
			left join jpool_judge on jpool_judge.jpool = jpool.id
		where jpool.category = category.id
		and category.tourn = ?
			".$setting_string ."
		group by jpool.id
		order by category.name, jpool.name");

    return Tab::JPool->search_by_tourn($tourn->id);

</%perl>

