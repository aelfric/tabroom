<%args>
	$perms
	$tourn
	$category => undef
	$checker  => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();
	my $sth;

	my $ids;

	my $query =	"
		select timeslot.id, timeslot.name, timeslot.start, timeslot.end,
			tourn.tz, count(distinct round.id) as rounds
		from timeslot, round, event, tourn
		where tourn.id = ?
			and timeslot.tourn = tourn.id
			and timeslot.id = round.timeslot
			and round.event = event.id
	";

	if ($category) {
		$query .= "
			and exists (
				select round.id
				from round, event
				where event.category = ".int($category)."
				and event.id = round.event
			)
		";
	}


	if ($perms->{tourn}{$tourn} eq "owner"
		|| $perms->{tourn}{$tourn} eq "tabber"
		|| ($checker && $perms->{tourn}{$tourn} eq "checker")
	) {

		$query .= " group by timeslot.id order by timeslot.start, timeslot.name ";
		$sth = $dbh->prepare($query);

	} elsif ($ARGS{"by_category"}) {

		foreach my $category_id (keys %{$perms->{'category'}}) {
			if (
				($perms->{category}{$category_id} eq "checker" && $checker)
				|| ($perms->{category}{$category_id} eq "tabber")
			) {
				$ids .= ',' if $ids;
				$ids .= int($category_id);
			}
		}

		$query .= " and event.category IN ($ids) group by timeslot.id order by timeslot.start, timeslot.name ";

		unless ($ids) {
			$m->comp("/funclib/abort.mas", message => "You do not have access to any categories");
		}
		$sth = $dbh->prepare($query);

	} else {

		foreach my $event_id (keys %{$perms->{'event'}}) {
			if (
				($perms->{event}{$event_id} eq "checker" && $checker)
				|| ($perms->{event}{$event_id} eq "tabber")
			) {
				$ids .= ',' if $ids;
				$ids .= int($event_id);
			}
		}

		unless ($ids) {
			$m->comp("/funclib/abort.mas", message => "You do not have access to any events");
		}

		$query .= " and event.id IN ($ids) group by timeslot.id order by timeslot.start, timeslot.name ";
		$sth = $dbh->prepare($query);
	}

	$sth->execute($tourn->id);
	my $results = $sth->fetchall_hash();
	my %timeslots;

	foreach my $result (@{$results}) {

		$timeslots{$result->{id}}{'name'}   = $result->{name};
		$timeslots{$result->{id}}{'rounds'} = $result->{rounds};
		$timeslots{$result->{id}}{'start'}  = $m->comp('/funclib/dtme.mas' , string => $result->{start} , tz => $result->{tz});
		$timeslots{$result->{id}}{'end'}    = $m->comp('/funclib/dtme.mas' , string => $result->{end}   , tz => $result->{tz});
	}

	return %timeslots;

</%init>
