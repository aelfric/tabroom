<%args>
	$event
	$all => undef
</%args>
<%init>

	return if $event->setting('weekend') eq "nope";

	my $tourn = $event->tourn;

	return unless $tourn->setting('nsda_district');

	my ($num_qualifiers, $num_alternates, $num_active) = $m->comp(
		"/funclib/nsda/qualifier_count.mas",
			event => $event
		);

	my %qualifiers;

	my $result_set = Tab::ResultSet->search(
		event => $event->id,
		label => "District Qualifiers"
	)->first;

	return unless $result_set;

	my $counter;
	my $quantity = 1;
	my $last_rank;
	my $last_entry;

	RESULT:
	foreach my $result (
		sort {$a->rank <=> $b->rank}
		$result_set->results
	) {

		$counter++;
		my @values;
		my $place;

		foreach my $value ($result->values) {
			next if $value->priority < 1;
			push @values, $value;
		}

		my $rank = $result->rank;
		my $entry = $result->entry();
		my $vacate = $entry->setting('nsda_vacate');

		if ($vacate) {

			next RESULT if $quantity > $num_qualifiers;

		} elsif ($quantity == $num_qualifiers) {

			$last_rank = $rank;
			$last_entry = $entry;

		} elsif ($quantity > $num_qualifiers) {

			if ($last_rank == $rank) {
				push @{$qualifiers{"ties"}{$rank}}, $entry;
				push @{$qualifiers{"ties"}{$rank}}, $last_entry;
			} else {
				next RESULT;
			}
		}

		$qualifiers{$counter}{"rank"}  = $rank;
		$qualifiers{$counter}{"entry"} = $entry;
		$qualifiers{$counter}{"vacated"}++ if $vacate;

		my $tiebreaks;

		foreach my $value (
			sort {$a->priority <=> $b->priority}
			@values
		) {
			$qualifiers{$counter}{"tag"}{$value->priority}     = $value->result_key->tag;
			$qualifiers{$counter}{"descs"}{$value->priority}   = $value->result_key->description;
			$qualifiers{$counter}{"results"}{$value->priority} = $value->value;
		}

		foreach my $student ($entry->students) {
			push @{$qualifiers{$counter}{"students"}}, $student;

			$qualifiers{$counter}{$student->id}{"ineligible"}++
				unless $student->nsda;

			$qualifiers{$counter}{"ineligible"}++
				unless $student->nsda;
		}

		unless (
			$qualifiers{$counter}{"vacated"}
			|| $qualifiers{$counter}{"ineligible"}
			|| $all
		) {
			$quantity++;
		}

	}

	return %qualifiers;

</%init>
