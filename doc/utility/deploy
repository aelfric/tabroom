#!/usr/bin/perl
use Net::Ping;
use warnings;

my @prod_servers = ("tabroom-www1", "tabroom-www2");

my $now = `/bin/date`;

my $pinger = Net::Ping->new('tcp');
$pinger->port_number(22); 

foreach my $server (@prod_servers) {

	local $SIG{__WARN__} = sub { };
	if ($pinger->ping($server)) {

		print "\nDEPLOYING MASON TO ".$server." at $now \n";

		my $result = `ssh tabroom\@$server \"cd /www/tabroom; git pull" `;
		chomp $result;
		print $result;

		print "\n\nDEPLOYING INDEXCARDS TO ".$server." at $now \n";
		$result = `ssh tabroom\@$server \"cd /www/indexcards; git pull" `;
		chomp $result;

		if ($result eq "Already up to date.") {
			print "No new code found. $server update done.\n";
		} else {
			print $result;
			print "New API code found.  Updating NPM and restarting on $server...\n";
			system "ssh tabroom\@$server \"cd /www/indexcards; npm install\" ";
			system "ssh tabroom\@$server \"sudo systemctl restart indexcards\" ";
		}
	} else {
		print "Host $server is not currently up and responding.  Skipped.\n";
	}
}

my @docker_servers = ("tabweb1");

foreach my $number (1 .. 16) { 

	my $server = "tabweb".$number;

	local $SIG{__WARN__} = sub { };
	if ($pinger->ping($server)) {
		print "\nDEPLOYING MASON CODE TO DOCKER INSTANCE ".$server." at $now \n";

		my $result = `ssh tabroom\@$server \"cd /www/tabroom; git pull" `;
		chomp $result;

		if ($result eq "Already up to date.") {
			print "No new code found. $server update done.\n";
		} else {
			print "New Mason code found.  Restarting docker images on $server...\n";
			system "ssh tabroom\@$server \"sudo docker restart mason1\" ";
			system "ssh tabroom\@$server \"sudo docker restart mason2\" ";
			system "ssh tabroom\@$server \"sudo docker restart mason3\" ";
			system "ssh tabroom\@$server \"sudo docker restart mason4\" ";
		}

		print "\n";
	} else {
		print "$server inactive \n";
	}

}
